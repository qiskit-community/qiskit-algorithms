Search.setIndex({"alltitles": {"0.1.0": [[9, "release-notes-0-1-0"]], "0.2.0": [[9, "release-notes-0-2-0"]], "0.3.0": [[9, "release-notes-0-3-0"]], "0.4.0": [[9, "release-notes-0-4-0"]], "A complete working example": [[127, "A-complete-working-example"]], "A quick refresher on Qiskit Primitives": [[136, "A-quick-refresher-on-Qiskit-Primitives"]], "ADAM": [[82, null]], "AQGD": [[83, null]], "AdaptVQE": [[10, null]], "AdaptVQEResult": [[11, null]], "Advanced VQE Options": [[128, null]], "AlgorithmError": [[1, null]], "AlgorithmJob": [[12, null]], "Algorithms": [[0, "algorithms"]], "Algorithms Tutorials": [[138, null]], "AmplificationProblem": [[13, null]], "Amplitude Amplifiers": [[0, "amplitude-amplifiers"]], "Amplitude Estimators": [[0, "amplitude-estimators"]], "Amplitude amplification": [[132, "Amplitude-amplification"]], "AmplitudeAmplifier": [[14, null]], "AmplitudeEstimation": [[15, null]], "AmplitudeEstimationResult": [[16, null]], "AmplitudeEstimator": [[17, null]], "AmplitudeEstimatorResult": [[18, null]], "An Introduction to Algorithms using Qiskit": [[127, null]], "Application Example: VQE with gradient-based optimization": [[136, "Application-Example:-VQE-with-gradient-based-optimization"]], "Applying post_processing": [[132, "Applying-post_processing"]], "AskData": [[84, null]], "Auxiliary operators": [[137, "Auxiliary-operators"]], "BOBYQA": [[85, null]], "Base Classes": [[2, "base-classes"]], "BaseEstimatorGradient": [[63, null]], "BaseQGT": [[64, null]], "BaseSamplerGradient": [[65, null]], "BaseStateFidelity": [[118, null]], "Boolean Logical Expressions": [[133, "Boolean-Logical-Expressions"]], "Bug Fixes": [[9, "bug-fixes"], [9, "release-notes-0-3-0-bug-fixes"]], "CG": [[86, null]], "COBYLA": [[87, null]], "CRS": [[88, null]], "Callback": [[128, "Callback"]], "Circuit Quantum Geometric Tensor (QGTs)": [[136, "Circuit-Quantum-Geometric-Tensor-(QGTs)"]], "Classical Methods": [[2, "classical-methods"]], "Classical Optimizer": [[136, "Classical-Optimizer"]], "Complete working example for VQD": [[130, "Complete-working-example-for-VQD"]], "ComputeUncompute": [[119, null]], "DIRECT_L": [[89, null]], "DIRECT_L_RAND": [[90, null]], "Deprecation Notes": [[9, "deprecation-notes"]], "Dive into other arguments of Grover": [[132, "Dive-into-other-arguments-of-Grover"]], "ESCH": [[91, null]], "Efficient Way to run VarQRTE": [[135, "Efficient-Way-to-run-VarQRTE"]], "Efficient classical calculation of gradients with VarQITE": [[135, "Efficient-classical-calculation-of-gradients-with-VarQITE"]], "Eigensolver": [[19, null]], "EigensolverResult": [[20, null]], "Eigensolvers": [[0, "eigensolvers"]], "EstimationProblem": [[21, null]], "Estimator": [[136, "Estimator"]], "EstimatorGradientResult": [[66, null]], "Exact Classical Solution": [[135, "Exact-Classical-Solution"]], "Exceptions": [[0, "exceptions"]], "Expectation gradients": [[136, "Expectation-gradients"]], "FasterAmplitudeEstimation": [[22, null]], "FasterAmplitudeEstimationResult": [[23, null]], "Finding solutions to 3-SAT problems": [[133, "Finding-solutions-to-3-SAT-problems"]], "Finite Difference Gradients": [[136, "Finite-Difference-Gradients"]], "Finite Differences": [[2, "finite-differences"]], "FiniteDiffEstimatorGradient": [[67, null]], "FiniteDiffSamplerGradient": [[68, null]], "ForwardEulerSolver": [[121, null]], "Full flexibility": [[132, "Full-flexibility"]], "GSLS": [[92, null]], "Getting started": [[7, null]], "Global Optimizers": [[3, "global-optimizers"]], "Gradient Evaluation of Quantum Circuits": [[136, "Gradient-Evaluation-of-Quantum-Circuits"]], "Gradient Framework": [[136, null]], "Gradient-based optimizations": [[134, "Gradient-based-optimizations"]], "GradientDescent": [[93, null]], "GradientDescentState": [[94, null]], "Gradients": [[0, "gradients"], [128, "Gradients"], [136, "Gradients"]], "Gradients (qiskit_algorithms.gradients)": [[2, null]], "Grover": [[24, null]], "GroverResult": [[25, null]], "Grover\u2019s Algorithm and Amplitude Amplification": [[132, null]], "Grover\u2019s algorithm": [[132, "Grover's-algorithm"]], "Grover\u2019s algorithm examples": [[133, null]], "HamiltonianPhaseEstimation": [[26, null]], "HamiltonianPhaseEstimationResult": [[27, null]], "How is the algorithm library structured?": [[127, "How-is-the-algorithm-library-structured?"]], "How to run an algorithm?": [[127, "How-to-run-an-algorithm?"]], "IMFIL": [[95, null]], "ISRES": [[96, null]], "Imaginary Time Evolution": [[135, "Imaginary-Time-Evolution"]], "ImaginaryMcLachlanPrinciple": [[122, null]], "ImaginaryTimeEvolver": [[28, null]], "ImaginaryVariationalPrinciple": [[123, null]], "Initial point": [[128, "Initial-point"]], "Installation": [[7, "installation"]], "Introduction": [[130, "Introduction"], [135, "Introduction"], [136, "Introduction"]], "IterativeAmplitudeEstimation": [[29, null]], "IterativeAmplitudeEstimationResult": [[30, null]], "IterativePhaseEstimation": [[31, null]], "Known Issues": [[9, "known-issues"]], "L_BFGS_B": [[97, null]], "LearningRate": [[117, null]], "LinCombEstimatorGradient": [[69, null]], "LinCombQGT": [[70, null]], "LinCombSamplerGradient": [[71, null]], "Linear Combination QGT": [[136, "Linear-Combination-QGT"]], "Linear Combination of Unitaries": [[2, "linear-combination-of-unitaries"]], "Linear Combination of Unitaries Gradients": [[136, "Linear-Combination-of-Unitaries-Gradients"]], "Local Optimizers": [[3, "local-optimizers"]], "Magnetization evolution plot": [[137, "Magnetization-evolution-plot"]], "MaximumLikelihoodAmplitudeEstimation": [[32, null]], "MaximumLikelihoodAmplitudeEstimationResult": [[33, null]], "Minimizer": [[98, null]], "Minimum Eigensolvers": [[0, "minimum-eigensolvers"]], "MinimumEigensolver": [[34, null]], "MinimumEigensolverResult": [[35, null]], "Miscellaneous": [[0, "miscellaneous"]], "NELDER_MEAD": [[99, null]], "NFT": [[100, null]], "New Features": [[9, "new-features"], [9, "release-notes-0-3-0-new-features"], [9, "release-notes-0-1-0-new-features"]], "Next Steps": [[8, "next-steps"]], "NumPyEigensolver": [[36, null]], "NumPyEigensolverResult": [[37, null]], "NumPyMinimumEigensolver": [[38, null]], "NumPyMinimumEigensolverResult": [[39, null]], "ODE solvers": [[5, "ode-solvers"]], "Optimizer": [[101, null]], "Optimizer Base Classes": [[3, "optimizer-base-classes"]], "Optimizer Utils (qiskit_algorithms.optimizers.optimizer_utils)": [[116, "optimizer-utils-qiskit-algorithms-optimizers-optimizer-utils"]], "OptimizerResult": [[102, null]], "OptimizerState": [[103, null]], "Optimizers": [[0, "optimizers"]], "Optimizers (qiskit_algorithms.optimizers)": [[3, null]], "Optional installs": [[7, "optional-installs"]], "Other Notes": [[9, "other-notes"], [9, "release-notes-0-2-0-other-notes"]], "Overview": [[8, "overview"]], "POWELL": [[104, null]], "PVQD": [[40, null]], "PVQDResult": [[41, null]], "P_BFGS": [[105, null]], "ParamShiftEstimatorGradient": [[72, null]], "ParamShiftSamplerGradient": [[73, null]], "Parameter Shift Gradients": [[136, "Parameter-Shift-Gradients"]], "Parameter Shift Rules": [[2, "parameter-shift-rules"]], "Performance with backend noise": [[129, "Performance-with-backend-noise"]], "Performance without backend noise": [[129, "Performance-without-backend-noise"]], "Phase Estimators": [[0, "phase-estimators"]], "PhaseEstimation": [[42, null]], "PhaseEstimationResult": [[43, null]], "PhaseEstimationScale": [[44, null]], "Prelude": [[9, "prelude"], [9, "release-notes-0-3-0-prelude"], [9, "release-notes-0-1-0-prelude"]], "Product formula overview": [[137, "Product-formula-overview"]], "Projected Variational Quantum Dynamics": [[134, null]], "QAOA": [[45, null]], "QFI": [[74, null]], "QFIResult": [[75, null]], "QGTResult": [[76, null]], "QNSPSA": [[106, null]], "Qiskit Algorithms (qiskit_algorithms)": [[0, null]], "Qiskit Algorithms documentation": [[8, null]], "Quantum Approximate Optimization Algorithm": [[131, null]], "Quantum Fisher Information": [[2, "quantum-fisher-information"]], "Quantum Fisher Information (QFI)": [[136, "Quantum-Fisher-Information-(QFI)"]], "Quantum Real Time Evolution using Trotterization": [[137, null]], "Ready to get going?\u2026": [[7, "ready-to-get-going"]], "Real Time Evolution": [[135, "Real-Time-Evolution"]], "RealMcLachlanPrinciple": [[124, null]], "RealTimeEvolver": [[46, null]], "RealVariationalPrinciple": [[125, null]], "References": [[137, "References"]], "Release Notes": [[9, null]], "Results": [[4, "results"]], "Results and Comparison": [[135, "Results-and-Comparison"]], "ReverseEstimatorGradient": [[77, null]], "ReverseQGT": [[78, null]], "Running Grover\u2019s algorithm": [[132, "Running-Grover's-algorithm"]], "Running VarQTE": [[135, "Running-VarQTE"]], "SBPLX": [[107, null]], "SLSQP": [[108, null]], "SNOBFIT": [[109, null]], "SPSA": [[110, null]], "SPSA Gradients": [[136, "SPSA-Gradients"]], "SPSAEstimatorGradient": [[79, null]], "SPSASamplerGradient": [[80, null]], "SamplerGradientResult": [[81, null]], "Sampling gradients": [[136, "Sampling-gradients"]], "SamplingMinimumEigensolver": [[47, null]], "SamplingMinimumEigensolverResult": [[48, null]], "SamplingVQE": [[49, null]], "SamplingVQEResult": [[50, null]], "SciPyImaginaryEvolver": [[51, null]], "SciPyOptimizer": [[111, null]], "SciPyRealEvolver": [[52, null]], "Simultaneous Perturbation Stochastic Approximation": [[2, "simultaneous-perturbation-stochastic-approximation"]], "Specifying good_state": [[132, "Specifying-good_state"]], "State Fidelities": [[0, "state-fidelities"], [4, "state-fidelities"]], "State Fidelities (qiskit_algorithms.state_fidelities)": [[4, null]], "State preparation": [[132, "State-preparation"]], "StateFidelityResult": [[120, null]], "Steppable Optimization": [[3, "steppable-optimization"]], "SteppableOptimizer": [[112, null]], "Summary": [[129, "Summary"]], "TNC": [[113, null]], "TellData": [[114, null]], "The number of iterations": [[132, "The-number-of-iterations"]], "The qiskit_algorithms.gradients Framework": [[136, "The-qiskit_algorithms.gradients-Framework"]], "Time Evolvers": [[0, "time-evolvers"]], "Time Evolvers, Variational (qiskit_algorithms.time_evolvers.variational)": [[5, null]], "TimeEvolutionProblem": [[53, null]], "TimeEvolutionResult": [[54, null]], "Transpilation options": [[127, "Transpilation-options"]], "Transpiling options": [[131, "Transpiling-options"], [132, "Transpiling-options"]], "TrotterQRTE": [[55, null]], "UMDA": [[115, null]], "Updating the primitive inside VQE": [[127, "Updating-the-primitive-inside-VQE"]], "Upgrade Notes": [[9, "upgrade-notes"], [9, "release-notes-0-2-0-upgrade-notes"]], "Using Estimator": [[136, "Using-Estimator"]], "Using Sampler": [[136, "Using-Sampler"]], "Using the different types of classes as the oracle of Grover": [[132, "Using-the-different-types-of-classes-as-the-oracle-of-Grover"]], "Utility classes": [[0, "utility-classes"]], "VQD": [[56, null]], "VQDResult": [[57, null]], "VQE": [[58, null]], "VQE with Qiskit Aer Primitives": [[129, null]], "VQEResult": [[59, null]], "VarQITE": [[60, null]], "VarQRTE": [[61, null], [135, "VarQRTE"]], "VarQTEResult": [[62, null]], "Variational Principles": [[5, "variational-principles"]], "Variational Quantum Deflation (VQD) Algorithm": [[130, null]], "Variational Quantum Time Evolution": [[0, "variational-quantum-time-evolution"], [135, null]], "VariationalPrinciple": [[126, null]], "qiskit_algorithms.optimizers.optimizer_utils": [[116, null]], "utils.algorithm_globals": [[6, null]]}, "docnames": ["apidocs/qiskit_algorithms", "apidocs/qiskit_algorithms.AlgorithmError", "apidocs/qiskit_algorithms.gradients", "apidocs/qiskit_algorithms.optimizers", "apidocs/qiskit_algorithms.state_fidelities", "apidocs/qiskit_algorithms.time_evolvers.variational", "apidocs/qiskit_algorithms.utils.algorithm_globals", "getting_started", "index", "release_notes", "stubs/qiskit_algorithms.AdaptVQE", "stubs/qiskit_algorithms.AdaptVQEResult", "stubs/qiskit_algorithms.AlgorithmJob", "stubs/qiskit_algorithms.AmplificationProblem", "stubs/qiskit_algorithms.AmplitudeAmplifier", "stubs/qiskit_algorithms.AmplitudeEstimation", "stubs/qiskit_algorithms.AmplitudeEstimationResult", "stubs/qiskit_algorithms.AmplitudeEstimator", "stubs/qiskit_algorithms.AmplitudeEstimatorResult", "stubs/qiskit_algorithms.Eigensolver", "stubs/qiskit_algorithms.EigensolverResult", "stubs/qiskit_algorithms.EstimationProblem", "stubs/qiskit_algorithms.FasterAmplitudeEstimation", "stubs/qiskit_algorithms.FasterAmplitudeEstimationResult", "stubs/qiskit_algorithms.Grover", "stubs/qiskit_algorithms.GroverResult", "stubs/qiskit_algorithms.HamiltonianPhaseEstimation", "stubs/qiskit_algorithms.HamiltonianPhaseEstimationResult", "stubs/qiskit_algorithms.ImaginaryTimeEvolver", "stubs/qiskit_algorithms.IterativeAmplitudeEstimation", "stubs/qiskit_algorithms.IterativeAmplitudeEstimationResult", "stubs/qiskit_algorithms.IterativePhaseEstimation", "stubs/qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation", "stubs/qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult", "stubs/qiskit_algorithms.MinimumEigensolver", "stubs/qiskit_algorithms.MinimumEigensolverResult", "stubs/qiskit_algorithms.NumPyEigensolver", "stubs/qiskit_algorithms.NumPyEigensolverResult", "stubs/qiskit_algorithms.NumPyMinimumEigensolver", "stubs/qiskit_algorithms.NumPyMinimumEigensolverResult", "stubs/qiskit_algorithms.PVQD", "stubs/qiskit_algorithms.PVQDResult", "stubs/qiskit_algorithms.PhaseEstimation", "stubs/qiskit_algorithms.PhaseEstimationResult", "stubs/qiskit_algorithms.PhaseEstimationScale", "stubs/qiskit_algorithms.QAOA", "stubs/qiskit_algorithms.RealTimeEvolver", "stubs/qiskit_algorithms.SamplingMinimumEigensolver", "stubs/qiskit_algorithms.SamplingMinimumEigensolverResult", "stubs/qiskit_algorithms.SamplingVQE", "stubs/qiskit_algorithms.SamplingVQEResult", "stubs/qiskit_algorithms.SciPyImaginaryEvolver", "stubs/qiskit_algorithms.SciPyRealEvolver", "stubs/qiskit_algorithms.TimeEvolutionProblem", "stubs/qiskit_algorithms.TimeEvolutionResult", "stubs/qiskit_algorithms.TrotterQRTE", "stubs/qiskit_algorithms.VQD", "stubs/qiskit_algorithms.VQDResult", "stubs/qiskit_algorithms.VQE", "stubs/qiskit_algorithms.VQEResult", "stubs/qiskit_algorithms.VarQITE", "stubs/qiskit_algorithms.VarQRTE", "stubs/qiskit_algorithms.VarQTEResult", "stubs/qiskit_algorithms.gradients.BaseEstimatorGradient", "stubs/qiskit_algorithms.gradients.BaseQGT", "stubs/qiskit_algorithms.gradients.BaseSamplerGradient", "stubs/qiskit_algorithms.gradients.EstimatorGradientResult", "stubs/qiskit_algorithms.gradients.FiniteDiffEstimatorGradient", "stubs/qiskit_algorithms.gradients.FiniteDiffSamplerGradient", "stubs/qiskit_algorithms.gradients.LinCombEstimatorGradient", "stubs/qiskit_algorithms.gradients.LinCombQGT", "stubs/qiskit_algorithms.gradients.LinCombSamplerGradient", "stubs/qiskit_algorithms.gradients.ParamShiftEstimatorGradient", "stubs/qiskit_algorithms.gradients.ParamShiftSamplerGradient", "stubs/qiskit_algorithms.gradients.QFI", "stubs/qiskit_algorithms.gradients.QFIResult", "stubs/qiskit_algorithms.gradients.QGTResult", "stubs/qiskit_algorithms.gradients.ReverseEstimatorGradient", "stubs/qiskit_algorithms.gradients.ReverseQGT", "stubs/qiskit_algorithms.gradients.SPSAEstimatorGradient", "stubs/qiskit_algorithms.gradients.SPSASamplerGradient", "stubs/qiskit_algorithms.gradients.SamplerGradientResult", "stubs/qiskit_algorithms.optimizers.ADAM", "stubs/qiskit_algorithms.optimizers.AQGD", "stubs/qiskit_algorithms.optimizers.AskData", "stubs/qiskit_algorithms.optimizers.BOBYQA", "stubs/qiskit_algorithms.optimizers.CG", "stubs/qiskit_algorithms.optimizers.COBYLA", "stubs/qiskit_algorithms.optimizers.CRS", "stubs/qiskit_algorithms.optimizers.DIRECT_L", "stubs/qiskit_algorithms.optimizers.DIRECT_L_RAND", "stubs/qiskit_algorithms.optimizers.ESCH", "stubs/qiskit_algorithms.optimizers.GSLS", "stubs/qiskit_algorithms.optimizers.GradientDescent", "stubs/qiskit_algorithms.optimizers.GradientDescentState", "stubs/qiskit_algorithms.optimizers.IMFIL", "stubs/qiskit_algorithms.optimizers.ISRES", "stubs/qiskit_algorithms.optimizers.L_BFGS_B", "stubs/qiskit_algorithms.optimizers.Minimizer", "stubs/qiskit_algorithms.optimizers.NELDER_MEAD", "stubs/qiskit_algorithms.optimizers.NFT", "stubs/qiskit_algorithms.optimizers.Optimizer", "stubs/qiskit_algorithms.optimizers.OptimizerResult", "stubs/qiskit_algorithms.optimizers.OptimizerState", "stubs/qiskit_algorithms.optimizers.POWELL", "stubs/qiskit_algorithms.optimizers.P_BFGS", "stubs/qiskit_algorithms.optimizers.QNSPSA", "stubs/qiskit_algorithms.optimizers.SBPLX", "stubs/qiskit_algorithms.optimizers.SLSQP", "stubs/qiskit_algorithms.optimizers.SNOBFIT", "stubs/qiskit_algorithms.optimizers.SPSA", "stubs/qiskit_algorithms.optimizers.SciPyOptimizer", "stubs/qiskit_algorithms.optimizers.SteppableOptimizer", "stubs/qiskit_algorithms.optimizers.TNC", "stubs/qiskit_algorithms.optimizers.TellData", "stubs/qiskit_algorithms.optimizers.UMDA", "stubs/qiskit_algorithms.optimizers.optimizer_utils", "stubs/qiskit_algorithms.optimizers.optimizer_utils.LearningRate", "stubs/qiskit_algorithms.state_fidelities.BaseStateFidelity", "stubs/qiskit_algorithms.state_fidelities.ComputeUncompute", "stubs/qiskit_algorithms.state_fidelities.StateFidelityResult", "stubs/qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver", "stubs/qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple", "stubs/qiskit_algorithms.time_evolvers.variational.ImaginaryVariationalPrinciple", "stubs/qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple", "stubs/qiskit_algorithms.time_evolvers.variational.RealVariationalPrinciple", "stubs/qiskit_algorithms.time_evolvers.variational.VariationalPrinciple", "tutorials/01_algorithms_introduction", "tutorials/02_vqe_advanced_options", "tutorials/03_vqe_simulation_with_noise", "tutorials/04_vqd", "tutorials/05_qaoa", "tutorials/06_grover", "tutorials/07_grover_examples", "tutorials/10_pvqd", "tutorials/11_VarQTE", "tutorials/12_gradients_framework", "tutorials/13_trotterQRTE", "tutorials/index"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["apidocs/qiskit_algorithms.rst", "apidocs/qiskit_algorithms.AlgorithmError.rst", "apidocs/qiskit_algorithms.gradients.rst", "apidocs/qiskit_algorithms.optimizers.rst", "apidocs/qiskit_algorithms.state_fidelities.rst", "apidocs/qiskit_algorithms.time_evolvers.variational.rst", "apidocs/qiskit_algorithms.utils.algorithm_globals.rst", "getting_started.rst", "index.rst", "release_notes.rst", "stubs/qiskit_algorithms.AdaptVQE.rst", "stubs/qiskit_algorithms.AdaptVQEResult.rst", "stubs/qiskit_algorithms.AlgorithmJob.rst", "stubs/qiskit_algorithms.AmplificationProblem.rst", "stubs/qiskit_algorithms.AmplitudeAmplifier.rst", "stubs/qiskit_algorithms.AmplitudeEstimation.rst", "stubs/qiskit_algorithms.AmplitudeEstimationResult.rst", "stubs/qiskit_algorithms.AmplitudeEstimator.rst", "stubs/qiskit_algorithms.AmplitudeEstimatorResult.rst", "stubs/qiskit_algorithms.Eigensolver.rst", "stubs/qiskit_algorithms.EigensolverResult.rst", "stubs/qiskit_algorithms.EstimationProblem.rst", "stubs/qiskit_algorithms.FasterAmplitudeEstimation.rst", "stubs/qiskit_algorithms.FasterAmplitudeEstimationResult.rst", "stubs/qiskit_algorithms.Grover.rst", "stubs/qiskit_algorithms.GroverResult.rst", "stubs/qiskit_algorithms.HamiltonianPhaseEstimation.rst", "stubs/qiskit_algorithms.HamiltonianPhaseEstimationResult.rst", "stubs/qiskit_algorithms.ImaginaryTimeEvolver.rst", "stubs/qiskit_algorithms.IterativeAmplitudeEstimation.rst", "stubs/qiskit_algorithms.IterativeAmplitudeEstimationResult.rst", "stubs/qiskit_algorithms.IterativePhaseEstimation.rst", "stubs/qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.rst", "stubs/qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.rst", "stubs/qiskit_algorithms.MinimumEigensolver.rst", "stubs/qiskit_algorithms.MinimumEigensolverResult.rst", "stubs/qiskit_algorithms.NumPyEigensolver.rst", "stubs/qiskit_algorithms.NumPyEigensolverResult.rst", "stubs/qiskit_algorithms.NumPyMinimumEigensolver.rst", "stubs/qiskit_algorithms.NumPyMinimumEigensolverResult.rst", "stubs/qiskit_algorithms.PVQD.rst", "stubs/qiskit_algorithms.PVQDResult.rst", "stubs/qiskit_algorithms.PhaseEstimation.rst", "stubs/qiskit_algorithms.PhaseEstimationResult.rst", "stubs/qiskit_algorithms.PhaseEstimationScale.rst", "stubs/qiskit_algorithms.QAOA.rst", "stubs/qiskit_algorithms.RealTimeEvolver.rst", "stubs/qiskit_algorithms.SamplingMinimumEigensolver.rst", "stubs/qiskit_algorithms.SamplingMinimumEigensolverResult.rst", "stubs/qiskit_algorithms.SamplingVQE.rst", "stubs/qiskit_algorithms.SamplingVQEResult.rst", "stubs/qiskit_algorithms.SciPyImaginaryEvolver.rst", "stubs/qiskit_algorithms.SciPyRealEvolver.rst", "stubs/qiskit_algorithms.TimeEvolutionProblem.rst", "stubs/qiskit_algorithms.TimeEvolutionResult.rst", "stubs/qiskit_algorithms.TrotterQRTE.rst", "stubs/qiskit_algorithms.VQD.rst", "stubs/qiskit_algorithms.VQDResult.rst", "stubs/qiskit_algorithms.VQE.rst", "stubs/qiskit_algorithms.VQEResult.rst", "stubs/qiskit_algorithms.VarQITE.rst", "stubs/qiskit_algorithms.VarQRTE.rst", "stubs/qiskit_algorithms.VarQTEResult.rst", "stubs/qiskit_algorithms.gradients.BaseEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.BaseQGT.rst", "stubs/qiskit_algorithms.gradients.BaseSamplerGradient.rst", "stubs/qiskit_algorithms.gradients.EstimatorGradientResult.rst", "stubs/qiskit_algorithms.gradients.FiniteDiffEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.FiniteDiffSamplerGradient.rst", "stubs/qiskit_algorithms.gradients.LinCombEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.LinCombQGT.rst", "stubs/qiskit_algorithms.gradients.LinCombSamplerGradient.rst", "stubs/qiskit_algorithms.gradients.ParamShiftEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.ParamShiftSamplerGradient.rst", "stubs/qiskit_algorithms.gradients.QFI.rst", "stubs/qiskit_algorithms.gradients.QFIResult.rst", "stubs/qiskit_algorithms.gradients.QGTResult.rst", "stubs/qiskit_algorithms.gradients.ReverseEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.ReverseQGT.rst", "stubs/qiskit_algorithms.gradients.SPSAEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.SPSASamplerGradient.rst", "stubs/qiskit_algorithms.gradients.SamplerGradientResult.rst", "stubs/qiskit_algorithms.optimizers.ADAM.rst", "stubs/qiskit_algorithms.optimizers.AQGD.rst", "stubs/qiskit_algorithms.optimizers.AskData.rst", "stubs/qiskit_algorithms.optimizers.BOBYQA.rst", "stubs/qiskit_algorithms.optimizers.CG.rst", "stubs/qiskit_algorithms.optimizers.COBYLA.rst", "stubs/qiskit_algorithms.optimizers.CRS.rst", "stubs/qiskit_algorithms.optimizers.DIRECT_L.rst", "stubs/qiskit_algorithms.optimizers.DIRECT_L_RAND.rst", "stubs/qiskit_algorithms.optimizers.ESCH.rst", "stubs/qiskit_algorithms.optimizers.GSLS.rst", "stubs/qiskit_algorithms.optimizers.GradientDescent.rst", "stubs/qiskit_algorithms.optimizers.GradientDescentState.rst", "stubs/qiskit_algorithms.optimizers.IMFIL.rst", "stubs/qiskit_algorithms.optimizers.ISRES.rst", "stubs/qiskit_algorithms.optimizers.L_BFGS_B.rst", "stubs/qiskit_algorithms.optimizers.Minimizer.rst", "stubs/qiskit_algorithms.optimizers.NELDER_MEAD.rst", "stubs/qiskit_algorithms.optimizers.NFT.rst", "stubs/qiskit_algorithms.optimizers.Optimizer.rst", "stubs/qiskit_algorithms.optimizers.OptimizerResult.rst", "stubs/qiskit_algorithms.optimizers.OptimizerState.rst", "stubs/qiskit_algorithms.optimizers.POWELL.rst", "stubs/qiskit_algorithms.optimizers.P_BFGS.rst", "stubs/qiskit_algorithms.optimizers.QNSPSA.rst", "stubs/qiskit_algorithms.optimizers.SBPLX.rst", "stubs/qiskit_algorithms.optimizers.SLSQP.rst", "stubs/qiskit_algorithms.optimizers.SNOBFIT.rst", "stubs/qiskit_algorithms.optimizers.SPSA.rst", "stubs/qiskit_algorithms.optimizers.SciPyOptimizer.rst", "stubs/qiskit_algorithms.optimizers.SteppableOptimizer.rst", "stubs/qiskit_algorithms.optimizers.TNC.rst", "stubs/qiskit_algorithms.optimizers.TellData.rst", "stubs/qiskit_algorithms.optimizers.UMDA.rst", "stubs/qiskit_algorithms.optimizers.optimizer_utils.rst", "stubs/qiskit_algorithms.optimizers.optimizer_utils.LearningRate.rst", "stubs/qiskit_algorithms.state_fidelities.BaseStateFidelity.rst", "stubs/qiskit_algorithms.state_fidelities.ComputeUncompute.rst", "stubs/qiskit_algorithms.state_fidelities.StateFidelityResult.rst", "stubs/qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver.rst", "stubs/qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple.rst", "stubs/qiskit_algorithms.time_evolvers.variational.ImaginaryVariationalPrinciple.rst", "stubs/qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple.rst", "stubs/qiskit_algorithms.time_evolvers.variational.RealVariationalPrinciple.rst", "stubs/qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.rst", "tutorials/01_algorithms_introduction.ipynb", "tutorials/02_vqe_advanced_options.ipynb", "tutorials/03_vqe_simulation_with_noise.ipynb", "tutorials/04_vqd.ipynb", "tutorials/05_qaoa.ipynb", "tutorials/06_grover.ipynb", "tutorials/07_grover_examples.ipynb", "tutorials/10_pvqd.ipynb", "tutorials/11_VarQTE.ipynb", "tutorials/12_gradients_framework.ipynb", "tutorials/13_trotterQRTE.ipynb", "tutorials/index.rst"], "indexentries": {"adam (class in qiskit_algorithms.optimizers)": [[82, "qiskit_algorithms.optimizers.ADAM", false]], "adaptvqe (class in qiskit_algorithms)": [[10, "qiskit_algorithms.AdaptVQE", false]], "adaptvqeresult (class in qiskit_algorithms)": [[11, "qiskit_algorithms.AdaptVQEResult", false]], "aggregation (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.aggregation", false]], "aggregation (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.aggregation", false]], "algorithmerror": [[1, "qiskit_algorithms.AlgorithmError", false]], "algorithmjob (class in qiskit_algorithms)": [[12, "qiskit_algorithms.AlgorithmJob", false]], "alpha (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.alpha", false]], "alpha (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.alpha", false]], "amplificationproblem (class in qiskit_algorithms)": [[13, "qiskit_algorithms.AmplificationProblem", false]], "amplify() (amplitudeamplifier method)": [[14, "qiskit_algorithms.AmplitudeAmplifier.amplify", false]], "amplify() (grover method)": [[24, "qiskit_algorithms.Grover.amplify", false]], "amplitudeamplifier (class in qiskit_algorithms)": [[14, "qiskit_algorithms.AmplitudeAmplifier", false]], "amplitudeestimation (class in qiskit_algorithms)": [[15, "qiskit_algorithms.AmplitudeEstimation", false]], "amplitudeestimationresult (class in qiskit_algorithms)": [[16, "qiskit_algorithms.AmplitudeEstimationResult", false]], "amplitudeestimator (class in qiskit_algorithms)": [[17, "qiskit_algorithms.AmplitudeEstimator", false]], "amplitudeestimatorresult (class in qiskit_algorithms)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult", false]], "ansatz (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.ansatz", false]], "ansatz (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.ansatz", false]], "ansatz (varqite attribute)": [[60, "qiskit_algorithms.VarQITE.ansatz", false]], "ansatz (varqrte attribute)": [[61, "qiskit_algorithms.VarQRTE.ansatz", false]], "ansatz (vqd attribute)": [[56, "qiskit_algorithms.VQD.ansatz", false]], "ansatz (vqe attribute)": [[58, "qiskit_algorithms.VQE.ansatz", false]], "aqgd (class in qiskit_algorithms.optimizers)": [[83, "qiskit_algorithms.optimizers.AQGD", false]], "ask() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.ask", false]], "ask() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.ask", false]], "askdata (class in qiskit_algorithms.optimizers)": [[84, "qiskit_algorithms.optimizers.AskData", false]], "assignment (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.assignment", false]], "aux_operators (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.aux_operators", false]], "aux_operators_evaluated (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.aux_operators_evaluated", false]], "aux_operators_evaluated (eigensolverresult attribute)": [[20, "qiskit_algorithms.EigensolverResult.aux_operators_evaluated", false]], "aux_operators_evaluated (minimumeigensolverresult attribute)": [[35, "qiskit_algorithms.MinimumEigensolverResult.aux_operators_evaluated", false]], "aux_operators_evaluated (numpyeigensolverresult attribute)": [[37, "qiskit_algorithms.NumPyEigensolverResult.aux_operators_evaluated", false]], "aux_operators_evaluated (numpyminimumeigensolverresult attribute)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult.aux_operators_evaluated", false]], "aux_operators_evaluated (samplingminimumeigensolverresult attribute)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.aux_operators_evaluated", false]], "aux_operators_evaluated (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.aux_operators_evaluated", false]], "aux_operators_evaluated (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.aux_operators_evaluated", false]], "aux_operators_evaluated (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.aux_operators_evaluated", false]], "aux_ops_evaluated (timeevolutionresult attribute)": [[54, "qiskit_algorithms.TimeEvolutionResult.aux_ops_evaluated", false]], "baseestimatorgradient (class in qiskit_algorithms.gradients)": [[63, "qiskit_algorithms.gradients.BaseEstimatorGradient", false]], "baseqgt (class in qiskit_algorithms.gradients)": [[64, "qiskit_algorithms.gradients.BaseQGT", false]], "basesamplergradient (class in qiskit_algorithms.gradients)": [[65, "qiskit_algorithms.gradients.BaseSamplerGradient", false]], "basestatefidelity (class in qiskit_algorithms.state_fidelities)": [[118, "qiskit_algorithms.state_fidelities.BaseStateFidelity", false]], "best_measurement (samplingminimumeigensolverresult attribute)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.best_measurement", false]], "best_measurement (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.best_measurement", false]], "betas (vqd attribute)": [[56, "qiskit_algorithms.VQD.betas", false]], "bobyqa (class in qiskit_algorithms.optimizers)": [[85, "qiskit_algorithms.optimizers.BOBYQA", false]], "bounds_support_level (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.bounds_support_level", false]], "bounds_support_level (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.bounds_support_level", false]], "bounds_support_level (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.bounds_support_level", false]], "bounds_support_level (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.bounds_support_level", false]], "bounds_support_level (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.bounds_support_level", false]], "bounds_support_level (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.bounds_support_level", false]], "bounds_support_level (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.bounds_support_level", false]], "bounds_support_level (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.bounds_support_level", false]], "bounds_support_level (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.bounds_support_level", false]], "bounds_support_level (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.bounds_support_level", false]], "bounds_support_level (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.bounds_support_level", false]], "bounds_support_level (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.bounds_support_level", false]], "bounds_support_level (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.bounds_support_level", false]], "bounds_support_level (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.bounds_support_level", false]], "bounds_support_level (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.bounds_support_level", false]], "bounds_support_level (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.bounds_support_level", false]], "bounds_support_level (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.bounds_support_level", false]], "bounds_support_level (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.bounds_support_level", false]], "bounds_support_level (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.bounds_support_level", false]], "bounds_support_level (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.bounds_support_level", false]], "bounds_support_level (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.bounds_support_level", false]], "bounds_support_level (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.bounds_support_level", false]], "bounds_support_level (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.bounds_support_level", false]], "bounds_support_level (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.bounds_support_level", false]], "bounds_support_level (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.bounds_support_level", false]], "bounds_support_level (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.bounds_support_level", false]], "bounds_support_level (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.bounds_support_level", false]], "bounds_support_level (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.bounds_support_level", false]], "calibrate() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.calibrate", false]], "calibrate() (spsa static method)": [[110, "qiskit_algorithms.optimizers.SPSA.calibrate", false]], "callback (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.callback", false]], "callback (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.callback", false]], "callback (vqd attribute)": [[56, "qiskit_algorithms.VQD.callback", false]], "callback (vqe attribute)": [[58, "qiskit_algorithms.VQE.callback", false]], "cancel() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.cancel", false]], "cancelled() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.cancelled", false]], "cg (class in qiskit_algorithms.optimizers)": [[86, "qiskit_algorithms.optimizers.CG", false]], "circuit_result (phaseestimationresult attribute)": [[43, "qiskit_algorithms.PhaseEstimationResult.circuit_result", false]], "circuit_results (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.circuit_results", false]], "circuit_results (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.circuit_results", false]], "circuit_results (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.circuit_results", false]], "circuit_results (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.circuit_results", false]], "circuit_results (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.circuit_results", false]], "circuit_results (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.circuit_results", false]], "close() (learningrate method)": [[117, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate.close", false]], "cobyla (class in qiskit_algorithms.optimizers)": [[87, "qiskit_algorithms.optimizers.COBYLA", false]], "combine() (adaptvqeresult method)": [[11, "qiskit_algorithms.AdaptVQEResult.combine", false]], "combine() (amplitudeestimationresult method)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.combine", false]], "combine() (amplitudeestimatorresult method)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.combine", false]], "combine() (eigensolverresult method)": [[20, "qiskit_algorithms.EigensolverResult.combine", false]], "combine() (fasteramplitudeestimationresult method)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.combine", false]], "combine() (groverresult method)": [[25, "qiskit_algorithms.GroverResult.combine", false]], "combine() (hamiltonianphaseestimationresult method)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult.combine", false]], "combine() (iterativeamplitudeestimationresult method)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.combine", false]], "combine() (maximumlikelihoodamplitudeestimationresult method)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.combine", false]], "combine() (minimumeigensolverresult method)": [[35, "qiskit_algorithms.MinimumEigensolverResult.combine", false]], "combine() (numpyeigensolverresult method)": [[37, "qiskit_algorithms.NumPyEigensolverResult.combine", false]], "combine() (numpyminimumeigensolverresult method)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult.combine", false]], "combine() (optimizerresult method)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.combine", false]], "combine() (phaseestimationresult method)": [[43, "qiskit_algorithms.PhaseEstimationResult.combine", false]], "combine() (pvqdresult method)": [[41, "qiskit_algorithms.PVQDResult.combine", false]], "combine() (samplingminimumeigensolverresult method)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.combine", false]], "combine() (samplingvqeresult method)": [[50, "qiskit_algorithms.SamplingVQEResult.combine", false]], "combine() (timeevolutionresult method)": [[54, "qiskit_algorithms.TimeEvolutionResult.combine", false]], "combine() (varqteresult method)": [[62, "qiskit_algorithms.VarQTEResult.combine", false]], "combine() (vqdresult method)": [[57, "qiskit_algorithms.VQDResult.combine", false]], "combine() (vqeresult method)": [[59, "qiskit_algorithms.VQEResult.combine", false]], "compute_confidence_interval() (amplitudeestimation static method)": [[15, "qiskit_algorithms.AmplitudeEstimation.compute_confidence_interval", false]], "compute_confidence_interval() (maximumlikelihoodamplitudeestimation static method)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.compute_confidence_interval", false]], "compute_eigenvalues() (eigensolver method)": [[19, "qiskit_algorithms.Eigensolver.compute_eigenvalues", false]], "compute_eigenvalues() (numpyeigensolver method)": [[36, "qiskit_algorithms.NumPyEigensolver.compute_eigenvalues", false]], "compute_eigenvalues() (vqd method)": [[56, "qiskit_algorithms.VQD.compute_eigenvalues", false]], "compute_minimum_eigenvalue() (adaptvqe method)": [[10, "qiskit_algorithms.AdaptVQE.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (minimumeigensolver method)": [[34, "qiskit_algorithms.MinimumEigensolver.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (numpyminimumeigensolver method)": [[38, "qiskit_algorithms.NumPyMinimumEigensolver.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (qaoa method)": [[45, "qiskit_algorithms.QAOA.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (samplingminimumeigensolver method)": [[47, "qiskit_algorithms.SamplingMinimumEigensolver.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (samplingvqe method)": [[49, "qiskit_algorithms.SamplingVQE.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (vqe method)": [[58, "qiskit_algorithms.VQE.compute_minimum_eigenvalue", false]], "compute_mle() (amplitudeestimation static method)": [[15, "qiskit_algorithms.AmplitudeEstimation.compute_mle", false]], "compute_mle() (maximumlikelihoodamplitudeestimation method)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.compute_mle", false]], "computeuncompute (class in qiskit_algorithms.state_fidelities)": [[119, "qiskit_algorithms.state_fidelities.ComputeUncompute", false]], "confidence_interval (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.confidence_interval", false]], "confidence_interval (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.confidence_interval", false]], "confidence_interval (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.confidence_interval", false]], "confidence_interval (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.confidence_interval", false]], "confidence_interval (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.confidence_interval", false]], "confidence_interval_processed (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.confidence_interval_processed", false]], "confidence_interval_processed (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.confidence_interval_processed", false]], "confidence_interval_processed (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.confidence_interval_processed", false]], "confidence_interval_processed (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.confidence_interval_processed", false]], "confidence_interval_processed (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.confidence_interval_processed", false]], "construct_circuit() (amplitudeestimation method)": [[15, "qiskit_algorithms.AmplitudeEstimation.construct_circuit", false]], "construct_circuit() (fasteramplitudeestimation method)": [[22, "qiskit_algorithms.FasterAmplitudeEstimation.construct_circuit", false]], "construct_circuit() (grover method)": [[24, "qiskit_algorithms.Grover.construct_circuit", false]], "construct_circuit() (iterativeamplitudeestimation method)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation.construct_circuit", false]], "construct_circuit() (iterativephaseestimation method)": [[31, "qiskit_algorithms.IterativePhaseEstimation.construct_circuit", false]], "construct_circuit() (phaseestimation method)": [[42, "qiskit_algorithms.PhaseEstimation.construct_circuit", false]], "construct_circuits() (maximumlikelihoodamplitudeestimation method)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.construct_circuits", false]], "continue_condition() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.continue_condition", false]], "continue_condition() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.continue_condition", false]], "convergence_threshold (vqd attribute)": [[56, "qiskit_algorithms.VQD.convergence_threshold", false]], "cost_function_evals (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.cost_function_evals", false]], "cost_function_evals (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.cost_function_evals", false]], "cost_function_evals (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.cost_function_evals", false]], "cost_function_evals (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.cost_function_evals", false]], "create_fidelity_circuit() (basestatefidelity method)": [[118, "qiskit_algorithms.state_fidelities.BaseStateFidelity.create_fidelity_circuit", false]], "create_fidelity_circuit() (computeuncompute method)": [[119, "qiskit_algorithms.state_fidelities.ComputeUncompute.create_fidelity_circuit", false]], "create_result() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.create_result", false]], "create_result() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.create_result", false]], "crs (class in qiskit_algorithms.optimizers)": [[88, "qiskit_algorithms.optimizers.CRS", false]], "current (learningrate attribute)": [[117, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate.current", false]], "derivative_type (baseestimatorgradient attribute)": [[63, "qiskit_algorithms.gradients.BaseEstimatorGradient.derivative_type", false]], "derivative_type (baseqgt attribute)": [[64, "qiskit_algorithms.gradients.BaseQGT.derivative_type", false]], "derivative_type (finitediffestimatorgradient attribute)": [[67, "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient.derivative_type", false]], "derivative_type (lincombestimatorgradient attribute)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient.derivative_type", false]], "derivative_type (lincombqgt attribute)": [[70, "qiskit_algorithms.gradients.LinCombQGT.derivative_type", false]], "derivative_type (paramshiftestimatorgradient attribute)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient.derivative_type", false]], "derivative_type (qgtresult attribute)": [[76, "qiskit_algorithms.gradients.QGTResult.derivative_type", false]], "derivative_type (reverseestimatorgradient attribute)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient.derivative_type", false]], "derivative_type (reverseqgt attribute)": [[78, "qiskit_algorithms.gradients.ReverseQGT.derivative_type", false]], "derivative_type (spsaestimatorgradient attribute)": [[79, "qiskit_algorithms.gradients.SPSAEstimatorGradient.derivative_type", false]], "direct_l (class in qiskit_algorithms.optimizers)": [[89, "qiskit_algorithms.optimizers.DIRECT_L", false]], "direct_l_rand (class in qiskit_algorithms.optimizers)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND", false]], "done() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.done", false]], "eigensolver (class in qiskit_algorithms)": [[19, "qiskit_algorithms.Eigensolver", false]], "eigensolverresult (class in qiskit_algorithms)": [[20, "qiskit_algorithms.EigensolverResult", false]], "eigenstate (numpyminimumeigensolverresult attribute)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult.eigenstate", false]], "eigenstate (samplingminimumeigensolverresult attribute)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.eigenstate", false]], "eigenstate (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.eigenstate", false]], "eigenstates (numpyeigensolverresult attribute)": [[37, "qiskit_algorithms.NumPyEigensolverResult.eigenstates", false]], "eigenvalue (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.eigenvalue", false]], "eigenvalue (minimumeigensolverresult attribute)": [[35, "qiskit_algorithms.MinimumEigensolverResult.eigenvalue", false]], "eigenvalue (numpyminimumeigensolverresult attribute)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult.eigenvalue", false]], "eigenvalue (samplingminimumeigensolverresult attribute)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.eigenvalue", false]], "eigenvalue (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.eigenvalue", false]], "eigenvalue (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.eigenvalue", false]], "eigenvalue_history (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.eigenvalue_history", false]], "eigenvalue_threshold (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.eigenvalue_threshold", false]], "eigenvalues (eigensolverresult attribute)": [[20, "qiskit_algorithms.EigensolverResult.eigenvalues", false]], "eigenvalues (numpyeigensolverresult attribute)": [[37, "qiskit_algorithms.NumPyEigensolverResult.eigenvalues", false]], "eigenvalues (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.eigenvalues", false]], "elite_factor (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.ELITE_FACTOR", false]], "epsilon_estimated (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.epsilon_estimated", false]], "epsilon_estimated_processed (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.epsilon_estimated_processed", false]], "epsilon_target (iterativeamplitudeestimation attribute)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation.epsilon_target", false]], "epsilon_target (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.epsilon_target", false]], "esch (class in qiskit_algorithms.optimizers)": [[91, "qiskit_algorithms.optimizers.ESCH", false]], "estimate() (amplitudeestimation method)": [[15, "qiskit_algorithms.AmplitudeEstimation.estimate", false]], "estimate() (amplitudeestimator method)": [[17, "qiskit_algorithms.AmplitudeEstimator.estimate", false]], "estimate() (fasteramplitudeestimation method)": [[22, "qiskit_algorithms.FasterAmplitudeEstimation.estimate", false]], "estimate() (hamiltonianphaseestimation method)": [[26, "qiskit_algorithms.HamiltonianPhaseEstimation.estimate", false]], "estimate() (iterativeamplitudeestimation method)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation.estimate", false]], "estimate() (iterativephaseestimation method)": [[31, "qiskit_algorithms.IterativePhaseEstimation.estimate", false]], "estimate() (maximumlikelihoodamplitudeestimation method)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.estimate", false]], "estimate() (phaseestimation method)": [[42, "qiskit_algorithms.PhaseEstimation.estimate", false]], "estimate_from_pe_circuit() (phaseestimation method)": [[42, "qiskit_algorithms.PhaseEstimation.estimate_from_pe_circuit", false]], "estimate_intervals (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.estimate_intervals", false]], "estimate_stddev() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.estimate_stddev", false]], "estimate_stddev() (spsa static method)": [[110, "qiskit_algorithms.optimizers.SPSA.estimate_stddev", false]], "estimation (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.estimation", false]], "estimation (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.estimation", false]], "estimation (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.estimation", false]], "estimation (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.estimation", false]], "estimation (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.estimation", false]], "estimation_processed (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.estimation_processed", false]], "estimation_processed (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.estimation_processed", false]], "estimation_processed (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.estimation_processed", false]], "estimation_processed (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.estimation_processed", false]], "estimation_processed (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.estimation_processed", false]], "estimationproblem (class in qiskit_algorithms)": [[21, "qiskit_algorithms.EstimationProblem", false]], "estimator (trotterqrte attribute)": [[55, "qiskit_algorithms.TrotterQRTE.estimator", false]], "estimator (vqd attribute)": [[56, "qiskit_algorithms.VQD.estimator", false]], "estimator (vqe attribute)": [[58, "qiskit_algorithms.VQE.estimator", false]], "estimatorgradientresult (class in qiskit_algorithms.gradients)": [[66, "qiskit_algorithms.gradients.EstimatorGradientResult", false]], "eval_fun (telldata attribute)": [[114, "qiskit_algorithms.optimizers.TellData.eval_fun", false]], "eval_jac (telldata attribute)": [[114, "qiskit_algorithms.optimizers.TellData.eval_jac", false]], "evaluate() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.evaluate", false]], "evaluate() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.evaluate", false]], "evaluate_measurements() (amplitudeestimation method)": [[15, "qiskit_algorithms.AmplitudeEstimation.evaluate_measurements", false]], "evaluation_schedule (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.evaluation_schedule", false]], "evolution (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.evolution", false]], "evolution_gradient() (imaginarymclachlanprinciple method)": [[122, "qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple.evolution_gradient", false]], "evolution_gradient() (realmclachlanprinciple method)": [[124, "qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple.evolution_gradient", false]], "evolution_gradient() (variationalprinciple method)": [[126, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.evolution_gradient", false]], "evolve() (imaginarytimeevolver method)": [[28, "qiskit_algorithms.ImaginaryTimeEvolver.evolve", false]], "evolve() (pvqd method)": [[40, "qiskit_algorithms.PVQD.evolve", false]], "evolve() (realtimeevolver method)": [[46, "qiskit_algorithms.RealTimeEvolver.evolve", false]], "evolve() (scipyimaginaryevolver method)": [[51, "qiskit_algorithms.SciPyImaginaryEvolver.evolve", false]], "evolve() (scipyrealevolver method)": [[52, "qiskit_algorithms.SciPyRealEvolver.evolve", false]], "evolve() (trotterqrte method)": [[55, "qiskit_algorithms.TrotterQRTE.evolve", false]], "evolve() (varqite method)": [[60, "qiskit_algorithms.VarQITE.evolve", false]], "evolve() (varqrte method)": [[61, "qiskit_algorithms.VarQRTE.evolve", false]], "evolved_state (timeevolutionresult attribute)": [[54, "qiskit_algorithms.TimeEvolutionResult.evolved_state", false]], "fasteramplitudeestimation (class in qiskit_algorithms)": [[22, "qiskit_algorithms.FasterAmplitudeEstimation", false]], "fasteramplitudeestimationresult (class in qiskit_algorithms)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult", false]], "fidelities (statefidelityresult attribute)": [[120, "qiskit_algorithms.state_fidelities.StateFidelityResult.fidelities", false]], "fidelity (vqd attribute)": [[56, "qiskit_algorithms.VQD.fidelity", false]], "filter_criterion (numpyeigensolver attribute)": [[36, "qiskit_algorithms.NumPyEigensolver.filter_criterion", false]], "filter_criterion (numpyminimumeigensolver attribute)": [[38, "qiskit_algorithms.NumPyMinimumEigensolver.filter_criterion", false]], "filter_phases() (hamiltonianphaseestimationresult method)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult.filter_phases", false]], "filter_phases() (phaseestimationresult method)": [[43, "qiskit_algorithms.PhaseEstimationResult.filter_phases", false]], "final_max_gradient (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.final_max_gradient", false]], "finitediffestimatorgradient (class in qiskit_algorithms.gradients)": [[67, "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient", false]], "finitediffsamplergradient (class in qiskit_algorithms.gradients)": [[68, "qiskit_algorithms.gradients.FiniteDiffSamplerGradient", false]], "fisher_information (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.fisher_information", false]], "forwardeulersolver (class in qiskit_algorithms.time_evolvers.variational)": [[121, "qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver", false]], "from_pauli_sum() (phaseestimationscale class method)": [[44, "qiskit_algorithms.PhaseEstimationScale.from_pauli_sum", false]], "fun (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.fun", false]], "fun (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.fun", false]], "fun (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.fun", false]], "get_fidelity() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.get_fidelity", false]], "get_loss() (pvqd method)": [[40, "qiskit_algorithms.PVQD.get_loss", false]], "get_nlopt_optimizer() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.get_nlopt_optimizer", false]], "get_nlopt_optimizer() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.get_nlopt_optimizer", false]], "get_nlopt_optimizer() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.get_nlopt_optimizer", false]], "get_nlopt_optimizer() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.get_nlopt_optimizer", false]], "get_nlopt_optimizer() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.get_nlopt_optimizer", false]], "get_nlopt_optimizer() (sbplx method)": [[107, "qiskit_algorithms.optimizers.SBPLX.get_nlopt_optimizer", false]], "get_support_level() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.get_support_level", false]], "get_support_level() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.get_support_level", false]], "get_support_level() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.get_support_level", false]], "get_support_level() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.get_support_level", false]], "get_support_level() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.get_support_level", false]], "get_support_level() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.get_support_level", false]], "get_support_level() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.get_support_level", false]], "get_support_level() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.get_support_level", false]], "get_support_level() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.get_support_level", false]], "get_support_level() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.get_support_level", false]], "get_support_level() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.get_support_level", false]], "get_support_level() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.get_support_level", false]], "get_support_level() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.get_support_level", false]], "get_support_level() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.get_support_level", false]], "get_support_level() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.get_support_level", false]], "get_support_level() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.get_support_level", false]], "get_support_level() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.get_support_level", false]], "get_support_level() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.get_support_level", false]], "get_support_level() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.get_support_level", false]], "get_support_level() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.get_support_level", false]], "get_support_level() (sbplx method)": [[107, "qiskit_algorithms.optimizers.SBPLX.get_support_level", false]], "get_support_level() (scipyoptimizer method)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.get_support_level", false]], "get_support_level() (slsqp method)": [[108, "qiskit_algorithms.optimizers.SLSQP.get_support_level", false]], "get_support_level() (snobfit method)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.get_support_level", false]], "get_support_level() (spsa method)": [[110, "qiskit_algorithms.optimizers.SPSA.get_support_level", false]], "get_support_level() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.get_support_level", false]], "get_support_level() (tnc method)": [[113, "qiskit_algorithms.optimizers.TNC.get_support_level", false]], "get_support_level() (umda method)": [[115, "qiskit_algorithms.optimizers.UMDA.get_support_level", false]], "good_counts (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.good_counts", false]], "gradient (variationalprinciple attribute)": [[126, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.gradient", false]], "gradient (vqe attribute)": [[58, "qiskit_algorithms.VQE.gradient", false]], "gradient_approximation() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.gradient_approximation", false]], "gradient_num_diff() (adam static method)": [[82, "qiskit_algorithms.optimizers.ADAM.gradient_num_diff", false]], "gradient_num_diff() (aqgd static method)": [[83, "qiskit_algorithms.optimizers.AQGD.gradient_num_diff", false]], "gradient_num_diff() (bobyqa static method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.gradient_num_diff", false]], "gradient_num_diff() (cg static method)": [[86, "qiskit_algorithms.optimizers.CG.gradient_num_diff", false]], "gradient_num_diff() (cobyla static method)": [[87, "qiskit_algorithms.optimizers.COBYLA.gradient_num_diff", false]], "gradient_num_diff() (crs static method)": [[88, "qiskit_algorithms.optimizers.CRS.gradient_num_diff", false]], "gradient_num_diff() (direct_l static method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.gradient_num_diff", false]], "gradient_num_diff() (direct_l_rand static method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.gradient_num_diff", false]], "gradient_num_diff() (esch static method)": [[91, "qiskit_algorithms.optimizers.ESCH.gradient_num_diff", false]], "gradient_num_diff() (gradientdescent static method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.gradient_num_diff", false]], "gradient_num_diff() (gsls static method)": [[92, "qiskit_algorithms.optimizers.GSLS.gradient_num_diff", false]], "gradient_num_diff() (imfil static method)": [[95, "qiskit_algorithms.optimizers.IMFIL.gradient_num_diff", false]], "gradient_num_diff() (isres static method)": [[96, "qiskit_algorithms.optimizers.ISRES.gradient_num_diff", false]], "gradient_num_diff() (l_bfgs_b static method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.gradient_num_diff", false]], "gradient_num_diff() (nelder_mead static method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.gradient_num_diff", false]], "gradient_num_diff() (nft static method)": [[100, "qiskit_algorithms.optimizers.NFT.gradient_num_diff", false]], "gradient_num_diff() (optimizer static method)": [[101, "qiskit_algorithms.optimizers.Optimizer.gradient_num_diff", false]], "gradient_num_diff() (p_bfgs static method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.gradient_num_diff", false]], "gradient_num_diff() (powell static method)": [[104, "qiskit_algorithms.optimizers.POWELL.gradient_num_diff", false]], "gradient_num_diff() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.gradient_num_diff", false]], "gradient_num_diff() (sbplx static method)": [[107, "qiskit_algorithms.optimizers.SBPLX.gradient_num_diff", false]], "gradient_num_diff() (scipyoptimizer static method)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.gradient_num_diff", false]], "gradient_num_diff() (slsqp static method)": [[108, "qiskit_algorithms.optimizers.SLSQP.gradient_num_diff", false]], "gradient_num_diff() (snobfit static method)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.gradient_num_diff", false]], "gradient_num_diff() (spsa static method)": [[110, "qiskit_algorithms.optimizers.SPSA.gradient_num_diff", false]], "gradient_num_diff() (steppableoptimizer static method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.gradient_num_diff", false]], "gradient_num_diff() (tnc static method)": [[113, "qiskit_algorithms.optimizers.TNC.gradient_num_diff", false]], "gradient_num_diff() (umda static method)": [[115, "qiskit_algorithms.optimizers.UMDA.gradient_num_diff", false]], "gradient_support_level (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.gradient_support_level", false]], "gradient_support_level (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.gradient_support_level", false]], "gradient_support_level (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.gradient_support_level", false]], "gradient_support_level (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.gradient_support_level", false]], "gradient_support_level (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.gradient_support_level", false]], "gradient_support_level (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.gradient_support_level", false]], "gradient_support_level (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.gradient_support_level", false]], "gradient_support_level (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.gradient_support_level", false]], "gradient_support_level (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.gradient_support_level", false]], "gradient_support_level (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.gradient_support_level", false]], "gradient_support_level (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.gradient_support_level", false]], "gradient_support_level (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.gradient_support_level", false]], "gradient_support_level (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.gradient_support_level", false]], "gradient_support_level (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.gradient_support_level", false]], "gradient_support_level (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.gradient_support_level", false]], "gradient_support_level (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.gradient_support_level", false]], "gradient_support_level (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.gradient_support_level", false]], "gradient_support_level (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.gradient_support_level", false]], "gradient_support_level (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.gradient_support_level", false]], "gradient_support_level (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.gradient_support_level", false]], "gradient_support_level (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.gradient_support_level", false]], "gradient_support_level (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.gradient_support_level", false]], "gradient_support_level (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.gradient_support_level", false]], "gradient_support_level (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.gradient_support_level", false]], "gradient_support_level (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.gradient_support_level", false]], "gradient_support_level (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.gradient_support_level", false]], "gradient_support_level (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.gradient_support_level", false]], "gradient_support_level (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.gradient_support_level", false]], "gradient_threshold (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.gradient_threshold", false]], "gradientdescent (class in qiskit_algorithms.optimizers)": [[93, "qiskit_algorithms.optimizers.GradientDescent", false]], "gradientdescentstate (class in qiskit_algorithms.optimizers)": [[94, "qiskit_algorithms.optimizers.GradientDescentState", false]], "gradients (estimatorgradientresult attribute)": [[66, "qiskit_algorithms.gradients.EstimatorGradientResult.gradients", false]], "gradients (samplergradientresult attribute)": [[81, "qiskit_algorithms.gradients.SamplerGradientResult.gradients", false]], "grover (class in qiskit_algorithms)": [[24, "qiskit_algorithms.Grover", false]], "grover_operator (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.grover_operator", false]], "grover_operator (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.grover_operator", false]], "groverresult (class in qiskit_algorithms)": [[25, "qiskit_algorithms.GroverResult", false]], "gsls (class in qiskit_algorithms.optimizers)": [[92, "qiskit_algorithms.optimizers.GSLS", false]], "hamiltonian (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.hamiltonian", false]], "hamiltonianphaseestimation (class in qiskit_algorithms)": [[26, "qiskit_algorithms.HamiltonianPhaseEstimation", false]], "hamiltonianphaseestimationresult (class in qiskit_algorithms)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult", false]], "has_good_state (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.has_good_state", false]], "imaginarymclachlanprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[122, "qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple", false]], "imaginarytimeevolver (class in qiskit_algorithms)": [[28, "qiskit_algorithms.ImaginaryTimeEvolver", false]], "imaginaryvariationalprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[123, "qiskit_algorithms.time_evolvers.variational.ImaginaryVariationalPrinciple", false]], "imfil (class in qiskit_algorithms.optimizers)": [[95, "qiskit_algorithms.optimizers.IMFIL", false]], "in_final_state() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.in_final_state", false]], "initial_guess (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.initial_guess", false]], "initial_parameters (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.initial_parameters", false]], "initial_point (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.initial_point", false]], "initial_point (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.initial_point", false]], "initial_point (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.initial_point", false]], "initial_point (vqd attribute)": [[56, "qiskit_algorithms.VQD.initial_point", false]], "initial_point (vqe attribute)": [[58, "qiskit_algorithms.VQE.initial_point", false]], "initial_point_support_level (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.initial_point_support_level", false]], "initial_point_support_level (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.initial_point_support_level", false]], "initial_point_support_level (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.initial_point_support_level", false]], "initial_point_support_level (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.initial_point_support_level", false]], "initial_point_support_level (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.initial_point_support_level", false]], "initial_point_support_level (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.initial_point_support_level", false]], "initial_point_support_level (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.initial_point_support_level", false]], "initial_point_support_level (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.initial_point_support_level", false]], "initial_point_support_level (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.initial_point_support_level", false]], "initial_point_support_level (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.initial_point_support_level", false]], "initial_point_support_level (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.initial_point_support_level", false]], "initial_point_support_level (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.initial_point_support_level", false]], "initial_point_support_level (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.initial_point_support_level", false]], "initial_point_support_level (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.initial_point_support_level", false]], "initial_point_support_level (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.initial_point_support_level", false]], "initial_point_support_level (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.initial_point_support_level", false]], "initial_point_support_level (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.initial_point_support_level", false]], "initial_point_support_level (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.initial_point_support_level", false]], "initial_point_support_level (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.initial_point_support_level", false]], "initial_point_support_level (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.initial_point_support_level", false]], "initial_point_support_level (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.initial_point_support_level", false]], "initial_point_support_level (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.initial_point_support_level", false]], "initial_point_support_level (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.initial_point_support_level", false]], "initial_point_support_level (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.initial_point_support_level", false]], "initial_point_support_level (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.initial_point_support_level", false]], "initial_point_support_level (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.initial_point_support_level", false]], "initial_point_support_level (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.initial_point_support_level", false]], "initial_point_support_level (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.initial_point_support_level", false]], "initial_state (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.initial_state", false]], "initial_state (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.initial_state", false]], "is_bounds_ignored (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_bounds_ignored", false]], "is_bounds_ignored (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_bounds_ignored", false]], "is_bounds_ignored (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_bounds_ignored", false]], "is_bounds_ignored (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_bounds_ignored", false]], "is_bounds_ignored (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_bounds_ignored", false]], "is_bounds_ignored (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_bounds_ignored", false]], "is_bounds_ignored (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_bounds_ignored", false]], "is_bounds_ignored (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_bounds_ignored", false]], "is_bounds_ignored (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_bounds_ignored", false]], "is_bounds_ignored (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_bounds_ignored", false]], "is_bounds_ignored (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_bounds_ignored", false]], "is_bounds_ignored (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_bounds_ignored", false]], "is_bounds_ignored (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_bounds_ignored", false]], "is_bounds_ignored (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_bounds_ignored", false]], "is_bounds_ignored (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_bounds_ignored", false]], "is_bounds_ignored (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_bounds_ignored", false]], "is_bounds_ignored (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_bounds_ignored", false]], "is_bounds_ignored (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_bounds_ignored", false]], "is_bounds_ignored (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_bounds_ignored", false]], "is_bounds_ignored (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_bounds_ignored", false]], "is_bounds_ignored (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.is_bounds_ignored", false]], "is_bounds_ignored (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.is_bounds_ignored", false]], "is_bounds_ignored (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.is_bounds_ignored", false]], "is_bounds_ignored (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.is_bounds_ignored", false]], "is_bounds_ignored (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.is_bounds_ignored", false]], "is_bounds_ignored (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.is_bounds_ignored", false]], "is_bounds_ignored (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.is_bounds_ignored", false]], "is_bounds_ignored (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.is_bounds_ignored", false]], "is_bounds_required (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_bounds_required", false]], "is_bounds_required (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_bounds_required", false]], "is_bounds_required (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_bounds_required", false]], "is_bounds_required (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_bounds_required", false]], "is_bounds_required (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_bounds_required", false]], "is_bounds_required (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_bounds_required", false]], "is_bounds_required (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_bounds_required", false]], "is_bounds_required (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_bounds_required", false]], "is_bounds_required (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_bounds_required", false]], "is_bounds_required (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_bounds_required", false]], "is_bounds_required (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_bounds_required", false]], "is_bounds_required (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_bounds_required", false]], "is_bounds_required (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_bounds_required", false]], "is_bounds_required (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_bounds_required", false]], "is_bounds_required (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_bounds_required", false]], "is_bounds_required (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_bounds_required", false]], "is_bounds_required (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_bounds_required", false]], "is_bounds_required (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_bounds_required", false]], "is_bounds_required (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_bounds_required", false]], "is_bounds_required (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_bounds_required", false]], "is_bounds_required (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.is_bounds_required", false]], "is_bounds_required (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.is_bounds_required", false]], "is_bounds_required (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.is_bounds_required", false]], "is_bounds_required (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.is_bounds_required", false]], "is_bounds_required (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.is_bounds_required", false]], "is_bounds_required (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.is_bounds_required", false]], "is_bounds_required (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.is_bounds_required", false]], "is_bounds_required (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.is_bounds_required", false]], "is_bounds_supported (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_bounds_supported", false]], "is_bounds_supported (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_bounds_supported", false]], "is_bounds_supported (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_bounds_supported", false]], "is_bounds_supported (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_bounds_supported", false]], "is_bounds_supported (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_bounds_supported", false]], "is_bounds_supported (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_bounds_supported", false]], "is_bounds_supported (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_bounds_supported", false]], "is_bounds_supported (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_bounds_supported", false]], "is_bounds_supported (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_bounds_supported", false]], "is_bounds_supported (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_bounds_supported", false]], "is_bounds_supported (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_bounds_supported", false]], "is_bounds_supported (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_bounds_supported", false]], "is_bounds_supported (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_bounds_supported", false]], "is_bounds_supported (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_bounds_supported", false]], "is_bounds_supported (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_bounds_supported", false]], "is_bounds_supported (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_bounds_supported", false]], "is_bounds_supported (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_bounds_supported", false]], "is_bounds_supported (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_bounds_supported", false]], "is_bounds_supported (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_bounds_supported", false]], "is_bounds_supported (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_bounds_supported", false]], "is_bounds_supported (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.is_bounds_supported", false]], "is_bounds_supported (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.is_bounds_supported", false]], "is_bounds_supported (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.is_bounds_supported", false]], "is_bounds_supported (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.is_bounds_supported", false]], "is_bounds_supported (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.is_bounds_supported", false]], "is_bounds_supported (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.is_bounds_supported", false]], "is_bounds_supported (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.is_bounds_supported", false]], "is_bounds_supported (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.is_bounds_supported", false]], "is_good_state (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.is_good_state", false]], "is_good_state (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.is_good_state", false]], "is_gradient_ignored (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_gradient_ignored", false]], "is_gradient_ignored (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_gradient_ignored", false]], "is_gradient_ignored (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_gradient_ignored", false]], "is_gradient_ignored (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_gradient_ignored", false]], "is_gradient_ignored (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_gradient_ignored", false]], "is_gradient_ignored (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_gradient_ignored", false]], "is_gradient_ignored (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_gradient_ignored", false]], "is_gradient_ignored (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_gradient_ignored", false]], "is_gradient_ignored (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_gradient_ignored", false]], "is_gradient_ignored (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_gradient_ignored", false]], "is_gradient_ignored (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_gradient_ignored", false]], "is_gradient_ignored (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_gradient_ignored", false]], "is_gradient_ignored (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_gradient_ignored", false]], "is_gradient_ignored (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_gradient_ignored", false]], "is_gradient_ignored (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_gradient_ignored", false]], "is_gradient_ignored (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_gradient_ignored", false]], "is_gradient_ignored (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_gradient_ignored", false]], "is_gradient_ignored (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_gradient_ignored", false]], "is_gradient_ignored (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_gradient_ignored", false]], "is_gradient_ignored (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_gradient_ignored", false]], "is_gradient_ignored (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.is_gradient_ignored", false]], "is_gradient_ignored (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.is_gradient_ignored", false]], "is_gradient_ignored (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.is_gradient_ignored", false]], "is_gradient_ignored (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.is_gradient_ignored", false]], "is_gradient_ignored (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.is_gradient_ignored", false]], "is_gradient_ignored (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.is_gradient_ignored", false]], "is_gradient_ignored (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.is_gradient_ignored", false]], "is_gradient_ignored (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.is_gradient_ignored", false]], "is_gradient_required (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_gradient_required", false]], "is_gradient_required (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_gradient_required", false]], "is_gradient_required (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_gradient_required", false]], "is_gradient_required (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_gradient_required", false]], "is_gradient_required (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_gradient_required", false]], "is_gradient_required (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_gradient_required", false]], "is_gradient_required (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_gradient_required", false]], "is_gradient_required (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_gradient_required", false]], "is_gradient_required (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_gradient_required", false]], "is_gradient_required (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_gradient_required", false]], "is_gradient_required (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_gradient_required", false]], "is_gradient_required (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_gradient_required", false]], "is_gradient_required (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_gradient_required", false]], "is_gradient_required (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_gradient_required", false]], "is_gradient_required (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_gradient_required", false]], "is_gradient_required (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_gradient_required", false]], "is_gradient_required (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_gradient_required", false]], "is_gradient_required (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_gradient_required", false]], "is_gradient_required (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_gradient_required", false]], "is_gradient_required (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_gradient_required", false]], "is_gradient_required (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.is_gradient_required", false]], "is_gradient_required (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.is_gradient_required", false]], "is_gradient_required (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.is_gradient_required", false]], "is_gradient_required (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.is_gradient_required", false]], "is_gradient_required (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.is_gradient_required", false]], "is_gradient_required (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.is_gradient_required", false]], "is_gradient_required (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.is_gradient_required", false]], "is_gradient_required (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.is_gradient_required", false]], "is_gradient_supported (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_gradient_supported", false]], "is_gradient_supported (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_gradient_supported", false]], "is_gradient_supported (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_gradient_supported", false]], "is_gradient_supported (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_gradient_supported", false]], "is_gradient_supported (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_gradient_supported", false]], "is_gradient_supported (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_gradient_supported", false]], "is_gradient_supported (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_gradient_supported", false]], "is_gradient_supported (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_gradient_supported", false]], "is_gradient_supported (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_gradient_supported", false]], "is_gradient_supported (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_gradient_supported", false]], "is_gradient_supported (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_gradient_supported", false]], "is_gradient_supported (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_gradient_supported", false]], "is_gradient_supported (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_gradient_supported", false]], "is_gradient_supported (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_gradient_supported", false]], "is_gradient_supported (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_gradient_supported", false]], "is_gradient_supported (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_gradient_supported", false]], "is_gradient_supported (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_gradient_supported", false]], "is_gradient_supported (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_gradient_supported", false]], "is_gradient_supported (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_gradient_supported", false]], "is_gradient_supported (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_gradient_supported", false]], "is_gradient_supported (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.is_gradient_supported", false]], "is_gradient_supported (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.is_gradient_supported", false]], "is_gradient_supported (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.is_gradient_supported", false]], "is_gradient_supported (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.is_gradient_supported", false]], "is_gradient_supported (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.is_gradient_supported", false]], "is_gradient_supported (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.is_gradient_supported", false]], "is_gradient_supported (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.is_gradient_supported", false]], "is_gradient_supported (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.is_gradient_supported", false]], "is_initial_point_ignored (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_initial_point_ignored", false]], "is_initial_point_ignored (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_initial_point_ignored", false]], "is_initial_point_ignored (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_initial_point_ignored", false]], "is_initial_point_ignored (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_initial_point_ignored", false]], "is_initial_point_ignored (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_initial_point_ignored", false]], "is_initial_point_ignored (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_initial_point_ignored", false]], "is_initial_point_ignored (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_initial_point_ignored", false]], "is_initial_point_ignored (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_initial_point_ignored", false]], "is_initial_point_ignored (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_initial_point_ignored", false]], "is_initial_point_ignored (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_initial_point_ignored", false]], "is_initial_point_ignored (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_initial_point_ignored", false]], "is_initial_point_ignored (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_initial_point_ignored", false]], "is_initial_point_ignored (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_initial_point_ignored", false]], "is_initial_point_ignored (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_initial_point_ignored", false]], "is_initial_point_ignored (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_initial_point_ignored", false]], "is_initial_point_ignored (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_initial_point_ignored", false]], "is_initial_point_ignored (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_initial_point_ignored", false]], "is_initial_point_ignored (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_initial_point_ignored", false]], "is_initial_point_ignored (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_initial_point_ignored", false]], "is_initial_point_ignored (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_initial_point_ignored", false]], "is_initial_point_ignored (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.is_initial_point_ignored", false]], "is_initial_point_ignored (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.is_initial_point_ignored", false]], "is_initial_point_ignored (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.is_initial_point_ignored", false]], "is_initial_point_ignored (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.is_initial_point_ignored", false]], "is_initial_point_ignored (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.is_initial_point_ignored", false]], "is_initial_point_ignored (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.is_initial_point_ignored", false]], "is_initial_point_ignored (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.is_initial_point_ignored", false]], "is_initial_point_ignored (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.is_initial_point_ignored", false]], "is_initial_point_required (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_initial_point_required", false]], "is_initial_point_required (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_initial_point_required", false]], "is_initial_point_required (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_initial_point_required", false]], "is_initial_point_required (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_initial_point_required", false]], "is_initial_point_required (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_initial_point_required", false]], "is_initial_point_required (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_initial_point_required", false]], "is_initial_point_required (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_initial_point_required", false]], "is_initial_point_required (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_initial_point_required", false]], "is_initial_point_required (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_initial_point_required", false]], "is_initial_point_required (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_initial_point_required", false]], "is_initial_point_required (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_initial_point_required", false]], "is_initial_point_required (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_initial_point_required", false]], "is_initial_point_required (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_initial_point_required", false]], "is_initial_point_required (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_initial_point_required", false]], "is_initial_point_required (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_initial_point_required", false]], "is_initial_point_required (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_initial_point_required", false]], "is_initial_point_required (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_initial_point_required", false]], "is_initial_point_required (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_initial_point_required", false]], "is_initial_point_required (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_initial_point_required", false]], "is_initial_point_required (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_initial_point_required", false]], "is_initial_point_required (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.is_initial_point_required", false]], "is_initial_point_required (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.is_initial_point_required", false]], "is_initial_point_required (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.is_initial_point_required", false]], "is_initial_point_required (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.is_initial_point_required", false]], "is_initial_point_required (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.is_initial_point_required", false]], "is_initial_point_required (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.is_initial_point_required", false]], "is_initial_point_required (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.is_initial_point_required", false]], "is_initial_point_required (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.is_initial_point_required", false]], "is_initial_point_supported (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_initial_point_supported", false]], "is_initial_point_supported (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_initial_point_supported", false]], "is_initial_point_supported (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_initial_point_supported", false]], "is_initial_point_supported (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_initial_point_supported", false]], "is_initial_point_supported (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_initial_point_supported", false]], "is_initial_point_supported (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_initial_point_supported", false]], "is_initial_point_supported (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_initial_point_supported", false]], "is_initial_point_supported (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_initial_point_supported", false]], "is_initial_point_supported (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_initial_point_supported", false]], "is_initial_point_supported (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_initial_point_supported", false]], "is_initial_point_supported (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_initial_point_supported", false]], "is_initial_point_supported (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_initial_point_supported", false]], "is_initial_point_supported (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_initial_point_supported", false]], "is_initial_point_supported (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_initial_point_supported", false]], "is_initial_point_supported (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_initial_point_supported", false]], "is_initial_point_supported (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_initial_point_supported", false]], "is_initial_point_supported (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_initial_point_supported", false]], "is_initial_point_supported (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_initial_point_supported", false]], "is_initial_point_supported (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_initial_point_supported", false]], "is_initial_point_supported (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_initial_point_supported", false]], "is_initial_point_supported (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.is_initial_point_supported", false]], "is_initial_point_supported (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.is_initial_point_supported", false]], "is_initial_point_supported (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.is_initial_point_supported", false]], "is_initial_point_supported (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.is_initial_point_supported", false]], "is_initial_point_supported (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.is_initial_point_supported", false]], "is_initial_point_supported (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.is_initial_point_supported", false]], "is_initial_point_supported (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.is_initial_point_supported", false]], "is_initial_point_supported (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.is_initial_point_supported", false]], "isres (class in qiskit_algorithms.optimizers)": [[96, "qiskit_algorithms.optimizers.ISRES", false]], "iterations (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.iterations", false]], "iterativeamplitudeestimation (class in qiskit_algorithms)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation", false]], "iterativeamplitudeestimationresult (class in qiskit_algorithms)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult", false]], "iterativephaseestimation (class in qiskit_algorithms)": [[31, "qiskit_algorithms.IterativePhaseEstimation", false]], "jac (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.jac", false]], "jac (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.jac", false]], "jac (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.jac", false]], "job_id() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.job_id", false]], "k (numpyeigensolver attribute)": [[36, "qiskit_algorithms.NumPyEigensolver.k", false]], "k (vqd attribute)": [[56, "qiskit_algorithms.VQD.k", false]], "l_bfgs_b (class in qiskit_algorithms.optimizers)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B", false]], "learning_rate (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.learning_rate", false]], "learningrate (class in qiskit_algorithms.optimizers.optimizer_utils)": [[117, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate", false]], "lincombestimatorgradient (class in qiskit_algorithms.gradients)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient", false]], "lincombqgt (class in qiskit_algorithms.gradients)": [[70, "qiskit_algorithms.gradients.LinCombQGT", false]], "lincombsamplergradient (class in qiskit_algorithms.gradients)": [[71, "qiskit_algorithms.gradients.LinCombSamplerGradient", false]], "load_params() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.load_params", false]], "ls_optimize() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.ls_optimize", false]], "max_iterations (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.max_iterations", false]], "max_probability (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.max_probability", false]], "max_probability (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.max_probability", false]], "maximumlikelihoodamplitudeestimation (class in qiskit_algorithms)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation", false]], "maximumlikelihoodamplitudeestimationresult (class in qiskit_algorithms)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult", false]], "maxiter (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.maxiter", false]], "measurements (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.measurements", false]], "metadata (estimatorgradientresult attribute)": [[66, "qiskit_algorithms.gradients.EstimatorGradientResult.metadata", false]], "metadata (qfiresult attribute)": [[75, "qiskit_algorithms.gradients.QFIResult.metadata", false]], "metadata (qgtresult attribute)": [[76, "qiskit_algorithms.gradients.QGTResult.metadata", false]], "metadata (samplergradientresult attribute)": [[81, "qiskit_algorithms.gradients.SamplerGradientResult.metadata", false]], "metadata (statefidelityresult attribute)": [[120, "qiskit_algorithms.state_fidelities.StateFidelityResult.metadata", false]], "metric_tensor() (variationalprinciple method)": [[126, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.metric_tensor", false]], "minimize() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.minimize", false]], "minimize() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.minimize", false]], "minimize() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.minimize", false]], "minimize() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.minimize", false]], "minimize() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.minimize", false]], "minimize() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.minimize", false]], "minimize() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.minimize", false]], "minimize() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.minimize", false]], "minimize() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.minimize", false]], "minimize() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.minimize", false]], "minimize() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.minimize", false]], "minimize() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.minimize", false]], "minimize() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.minimize", false]], "minimize() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.minimize", false]], "minimize() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.minimize", false]], "minimize() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.minimize", false]], "minimize() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.minimize", false]], "minimize() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.minimize", false]], "minimize() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.minimize", false]], "minimize() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.minimize", false]], "minimize() (sbplx method)": [[107, "qiskit_algorithms.optimizers.SBPLX.minimize", false]], "minimize() (scipyoptimizer method)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.minimize", false]], "minimize() (slsqp method)": [[108, "qiskit_algorithms.optimizers.SLSQP.minimize", false]], "minimize() (snobfit method)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.minimize", false]], "minimize() (spsa method)": [[110, "qiskit_algorithms.optimizers.SPSA.minimize", false]], "minimize() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.minimize", false]], "minimize() (tnc method)": [[113, "qiskit_algorithms.optimizers.TNC.minimize", false]], "minimize() (umda method)": [[115, "qiskit_algorithms.optimizers.UMDA.minimize", false]], "minimizer (class in qiskit_algorithms.optimizers)": [[98, "qiskit_algorithms.optimizers.Minimizer", false]], "minimizer (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.minimizer", false]], "minimumeigensolver (class in qiskit_algorithms)": [[34, "qiskit_algorithms.MinimumEigensolver", false]], "minimumeigensolverresult (class in qiskit_algorithms)": [[35, "qiskit_algorithms.MinimumEigensolverResult", false]], "mixer (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.mixer", false]], "mle (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.mle", false]], "mle_processed (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.mle_processed", false]], "module": [[0, "module-qiskit_algorithms", false], [2, "module-qiskit_algorithms.gradients", false], [3, "module-qiskit_algorithms.optimizers", false], [4, "module-qiskit_algorithms.state_fidelities", false], [5, "module-qiskit_algorithms.time_evolvers.variational", false], [6, "module-qiskit_algorithms.utils.algorithm_globals", false], [116, "module-qiskit_algorithms.optimizers.optimizer_utils", false]], "most_likely_eigenvalue (hamiltonianphaseestimationresult attribute)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult.most_likely_eigenvalue", false]], "nelder_mead (class in qiskit_algorithms.optimizers)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD", false]], "nfev (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.nfev", false]], "nfev (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.nfev", false]], "nfev (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.nfev", false]], "nft (class in qiskit_algorithms.optimizers)": [[100, "qiskit_algorithms.optimizers.NFT", false]], "nit (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.nit", false]], "nit (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.nit", false]], "nit (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.nit", false]], "njev (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.njev", false]], "njev (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.njev", false]], "njev (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.njev", false]], "num_evaluation_qubits (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.num_evaluation_qubits", false]], "num_first_state_steps (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.num_first_state_steps", false]], "num_iterations (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.num_iterations", false]], "num_oracle_queries (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.num_oracle_queries", false]], "num_oracle_queries (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.num_oracle_queries", false]], "num_oracle_queries (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.num_oracle_queries", false]], "num_oracle_queries (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.num_oracle_queries", false]], "num_oracle_queries (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.num_oracle_queries", false]], "num_steps (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.num_steps", false]], "num_timesteps (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.num_timesteps", false]], "num_timesteps (trotterqrte attribute)": [[55, "qiskit_algorithms.TrotterQRTE.num_timesteps", false]], "numpyeigensolver (class in qiskit_algorithms)": [[36, "qiskit_algorithms.NumPyEigensolver", false]], "numpyeigensolverresult (class in qiskit_algorithms)": [[37, "qiskit_algorithms.NumPyEigensolverResult", false]], "numpyminimumeigensolver (class in qiskit_algorithms)": [[38, "qiskit_algorithms.NumPyMinimumEigensolver", false]], "numpyminimumeigensolverresult (class in qiskit_algorithms)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult", false]], "objective_qubits (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.objective_qubits", false]], "objective_qubits (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.objective_qubits", false]], "observables (timeevolutionresult attribute)": [[54, "qiskit_algorithms.TimeEvolutionResult.observables", false]], "optimal_circuit (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimal_circuit", false]], "optimal_circuit (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimal_circuit", false]], "optimal_circuit (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimal_circuit", false]], "optimal_circuits (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimal_circuits", false]], "optimal_num_iterations() (grover static method)": [[24, "qiskit_algorithms.Grover.optimal_num_iterations", false]], "optimal_parameters (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimal_parameters", false]], "optimal_parameters (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimal_parameters", false]], "optimal_parameters (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimal_parameters", false]], "optimal_parameters (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimal_parameters", false]], "optimal_point (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimal_point", false]], "optimal_point (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimal_point", false]], "optimal_point (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimal_point", false]], "optimal_points (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimal_points", false]], "optimal_value (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimal_value", false]], "optimal_value (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimal_value", false]], "optimal_value (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimal_value", false]], "optimal_values (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimal_values", false]], "optimizer (class in qiskit_algorithms.optimizers)": [[101, "qiskit_algorithms.optimizers.Optimizer", false]], "optimizer (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.optimizer", false]], "optimizer (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.optimizer", false]], "optimizer (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.optimizer", false]], "optimizer (vqd attribute)": [[56, "qiskit_algorithms.VQD.optimizer", false]], "optimizer (vqe attribute)": [[58, "qiskit_algorithms.VQE.optimizer", false]], "optimizer_evals (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimizer_evals", false]], "optimizer_evals (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimizer_evals", false]], "optimizer_evals (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimizer_evals", false]], "optimizer_result (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimizer_result", false]], "optimizer_result (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimizer_result", false]], "optimizer_result (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimizer_result", false]], "optimizer_results (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimizer_results", false]], "optimizer_time (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimizer_time", false]], "optimizer_time (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimizer_time", false]], "optimizer_time (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimizer_time", false]], "optimizer_times (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimizer_times", false]], "optimizerresult (class in qiskit_algorithms.optimizers)": [[102, "qiskit_algorithms.optimizers.OptimizerResult", false]], "optimizerstate (class in qiskit_algorithms.optimizers)": [[103, "qiskit_algorithms.optimizers.OptimizerState", false]], "oracle (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.oracle", false]], "oracle_evaluation (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.oracle_evaluation", false]], "p_bfgs (class in qiskit_algorithms.optimizers)": [[105, "qiskit_algorithms.optimizers.P_BFGS", false]], "param_value_map (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.param_value_map", false]], "parameter_values (varqteresult attribute)": [[62, "qiskit_algorithms.VarQTEResult.parameter_values", false]], "paramshiftestimatorgradient (class in qiskit_algorithms.gradients)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient", false]], "paramshiftsamplergradient (class in qiskit_algorithms.gradients)": [[73, "qiskit_algorithms.gradients.ParamShiftSamplerGradient", false]], "perturbation (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.perturbation", false]], "phase (hamiltonianphaseestimationresult attribute)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult.phase", false]], "phase (phaseestimationresult attribute)": [[43, "qiskit_algorithms.PhaseEstimationResult.phase", false]], "phaseestimation (class in qiskit_algorithms)": [[42, "qiskit_algorithms.PhaseEstimation", false]], "phaseestimationresult (class in qiskit_algorithms)": [[43, "qiskit_algorithms.PhaseEstimationResult", false]], "phaseestimationscale (class in qiskit_algorithms)": [[44, "qiskit_algorithms.PhaseEstimationScale", false]], "phases (phaseestimationresult attribute)": [[43, "qiskit_algorithms.PhaseEstimationResult.phases", false]], "post_processing (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.post_processing", false]], "post_processing (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.post_processing", false]], "post_processing (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.post_processing", false]], "post_processing (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.post_processing", false]], "post_processing (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.post_processing", false]], "post_processing (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.post_processing", false]], "post_processing (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.post_processing", false]], "powell (class in qiskit_algorithms.optimizers)": [[104, "qiskit_algorithms.optimizers.POWELL", false]], "powers (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.powers", false]], "precision (baseestimatorgradient attribute)": [[63, "qiskit_algorithms.gradients.BaseEstimatorGradient.precision", false]], "precision (baseqgt attribute)": [[64, "qiskit_algorithms.gradients.BaseQGT.precision", false]], "precision (estimatorgradientresult attribute)": [[66, "qiskit_algorithms.gradients.EstimatorGradientResult.precision", false]], "precision (finitediffestimatorgradient attribute)": [[67, "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient.precision", false]], "precision (lincombestimatorgradient attribute)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient.precision", false]], "precision (lincombqgt attribute)": [[70, "qiskit_algorithms.gradients.LinCombQGT.precision", false]], "precision (paramshiftestimatorgradient attribute)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient.precision", false]], "precision (qfi attribute)": [[74, "qiskit_algorithms.gradients.QFI.precision", false]], "precision (qfiresult attribute)": [[75, "qiskit_algorithms.gradients.QFIResult.precision", false]], "precision (qgtresult attribute)": [[76, "qiskit_algorithms.gradients.QGTResult.precision", false]], "precision (reverseestimatorgradient attribute)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient.precision", false]], "precision (reverseqgt attribute)": [[78, "qiskit_algorithms.gradients.ReverseQGT.precision", false]], "precision (spsaestimatorgradient attribute)": [[79, "qiskit_algorithms.gradients.SPSAEstimatorGradient.precision", false]], "print_options() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.print_options", false]], "print_options() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.print_options", false]], "print_options() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.print_options", false]], "print_options() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.print_options", false]], "print_options() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.print_options", false]], "print_options() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.print_options", false]], "print_options() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.print_options", false]], "print_options() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.print_options", false]], "print_options() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.print_options", false]], "print_options() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.print_options", false]], "print_options() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.print_options", false]], "print_options() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.print_options", false]], "print_options() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.print_options", false]], "print_options() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.print_options", false]], "print_options() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.print_options", false]], "print_options() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.print_options", false]], "print_options() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.print_options", false]], "print_options() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.print_options", false]], "print_options() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.print_options", false]], "print_options() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.print_options", false]], "print_options() (sbplx method)": [[107, "qiskit_algorithms.optimizers.SBPLX.print_options", false]], "print_options() (scipyoptimizer method)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.print_options", false]], "print_options() (slsqp method)": [[108, "qiskit_algorithms.optimizers.SLSQP.print_options", false]], "print_options() (snobfit method)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.print_options", false]], "print_options() (spsa method)": [[110, "qiskit_algorithms.optimizers.SPSA.print_options", false]], "print_options() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.print_options", false]], "print_options() (tnc method)": [[113, "qiskit_algorithms.optimizers.TNC.print_options", false]], "print_options() (umda method)": [[115, "qiskit_algorithms.optimizers.UMDA.print_options", false]], "product_formula (trotterqrte attribute)": [[55, "qiskit_algorithms.TrotterQRTE.product_formula", false]], "pvqd (class in qiskit_algorithms)": [[40, "qiskit_algorithms.PVQD", false]], "pvqdresult (class in qiskit_algorithms)": [[41, "qiskit_algorithms.PVQDResult", false]], "qaoa (class in qiskit_algorithms)": [[45, "qiskit_algorithms.QAOA", false]], "qfi (class in qiskit_algorithms.gradients)": [[74, "qiskit_algorithms.gradients.QFI", false]], "qfiresult (class in qiskit_algorithms.gradients)": [[75, "qiskit_algorithms.gradients.QFIResult", false]], "qfis (qfiresult attribute)": [[75, "qiskit_algorithms.gradients.QFIResult.qfis", false]], "qgt (variationalprinciple attribute)": [[126, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.qgt", false]], "qgtresult (class in qiskit_algorithms.gradients)": [[76, "qiskit_algorithms.gradients.QGTResult", false]], "qgts (qgtresult attribute)": [[76, "qiskit_algorithms.gradients.QGTResult.qgts", false]], "qiskit_algorithms": [[0, "module-qiskit_algorithms", false]], "qiskit_algorithms.gradients": [[2, "module-qiskit_algorithms.gradients", false]], "qiskit_algorithms.optimizers": [[3, "module-qiskit_algorithms.optimizers", false]], "qiskit_algorithms.optimizers.optimizer_utils": [[116, "module-qiskit_algorithms.optimizers.optimizer_utils", false]], "qiskit_algorithms.state_fidelities": [[4, "module-qiskit_algorithms.state_fidelities", false]], "qiskit_algorithms.time_evolvers.variational": [[5, "module-qiskit_algorithms.time_evolvers.variational", false]], "qiskit_algorithms.utils.algorithm_globals": [[6, "module-qiskit_algorithms.utils.algorithm_globals", false]], "qnspsa (class in qiskit_algorithms.optimizers)": [[106, "qiskit_algorithms.optimizers.QNSPSA", false]], "random (in module qiskit_algorithms.utils.algorithm_globals)": [[6, "qiskit_algorithms.utils.algorithm_globals.random", false]], "random_seed (in module qiskit_algorithms.utils.algorithm_globals)": [[6, "qiskit_algorithms.utils.algorithm_globals.random_seed", false]], "ratios (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.ratios", false]], "raw_fidelities (statefidelityresult attribute)": [[120, "qiskit_algorithms.state_fidelities.StateFidelityResult.raw_fidelities", false]], "realmclachlanprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[124, "qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple", false]], "realtimeevolver (class in qiskit_algorithms)": [[46, "qiskit_algorithms.RealTimeEvolver", false]], "realvariationalprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[125, "qiskit_algorithms.time_evolvers.variational.RealVariationalPrinciple", false]], "reps (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.reps", false]], "rescale() (estimationproblem method)": [[21, "qiskit_algorithms.EstimationProblem.rescale", false]], "result() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.result", false]], "reverseestimatorgradient (class in qiskit_algorithms.gradients)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient", false]], "reverseqgt (class in qiskit_algorithms.gradients)": [[78, "qiskit_algorithms.gradients.ReverseQGT", false]], "run() (baseestimatorgradient method)": [[63, "qiskit_algorithms.gradients.BaseEstimatorGradient.run", false]], "run() (baseqgt method)": [[64, "qiskit_algorithms.gradients.BaseQGT.run", false]], "run() (basesamplergradient method)": [[65, "qiskit_algorithms.gradients.BaseSamplerGradient.run", false]], "run() (basestatefidelity method)": [[118, "qiskit_algorithms.state_fidelities.BaseStateFidelity.run", false]], "run() (computeuncompute method)": [[119, "qiskit_algorithms.state_fidelities.ComputeUncompute.run", false]], "run() (finitediffestimatorgradient method)": [[67, "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient.run", false]], "run() (finitediffsamplergradient method)": [[68, "qiskit_algorithms.gradients.FiniteDiffSamplerGradient.run", false]], "run() (lincombestimatorgradient method)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient.run", false]], "run() (lincombqgt method)": [[70, "qiskit_algorithms.gradients.LinCombQGT.run", false]], "run() (lincombsamplergradient method)": [[71, "qiskit_algorithms.gradients.LinCombSamplerGradient.run", false]], "run() (paramshiftestimatorgradient method)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient.run", false]], "run() (paramshiftsamplergradient method)": [[73, "qiskit_algorithms.gradients.ParamShiftSamplerGradient.run", false]], "run() (qfi method)": [[74, "qiskit_algorithms.gradients.QFI.run", false]], "run() (reverseestimatorgradient method)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient.run", false]], "run() (reverseqgt method)": [[78, "qiskit_algorithms.gradients.ReverseQGT.run", false]], "run() (spsaestimatorgradient method)": [[79, "qiskit_algorithms.gradients.SPSAEstimatorGradient.run", false]], "run() (spsasamplergradient method)": [[80, "qiskit_algorithms.gradients.SPSASamplerGradient.run", false]], "running() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.running", false]], "sample_points() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.sample_points", false]], "sample_set() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.sample_set", false]], "sampler (amplitudeestimation attribute)": [[15, "qiskit_algorithms.AmplitudeEstimation.sampler", false]], "sampler (fasteramplitudeestimation attribute)": [[22, "qiskit_algorithms.FasterAmplitudeEstimation.sampler", false]], "sampler (grover attribute)": [[24, "qiskit_algorithms.Grover.sampler", false]], "sampler (iterativeamplitudeestimation attribute)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation.sampler", false]], "sampler (maximumlikelihoodamplitudeestimation attribute)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.sampler", false]], "sampler (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.sampler", false]], "sampler (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.sampler", false]], "samplergradientresult (class in qiskit_algorithms.gradients)": [[81, "qiskit_algorithms.gradients.SamplerGradientResult", false]], "samples (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.samples", false]], "samples_processed (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.samples_processed", false]], "samplingminimumeigensolver (class in qiskit_algorithms)": [[47, "qiskit_algorithms.SamplingMinimumEigensolver", false]], "samplingminimumeigensolverresult (class in qiskit_algorithms)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult", false]], "samplingvqe (class in qiskit_algorithms)": [[49, "qiskit_algorithms.SamplingVQE", false]], "samplingvqeresult (class in qiskit_algorithms)": [[50, "qiskit_algorithms.SamplingVQEResult", false]], "save_params() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.save_params", false]], "sbplx (class in qiskit_algorithms.optimizers)": [[107, "qiskit_algorithms.optimizers.SBPLX", false]], "scale (phaseestimationscale attribute)": [[44, "qiskit_algorithms.PhaseEstimationScale.scale", false]], "scale_phase() (phaseestimationscale method)": [[44, "qiskit_algorithms.PhaseEstimationScale.scale_phase", false]], "scale_phases() (phaseestimationscale method)": [[44, "qiskit_algorithms.PhaseEstimationScale.scale_phases", false]], "scipyimaginaryevolver (class in qiskit_algorithms)": [[51, "qiskit_algorithms.SciPyImaginaryEvolver", false]], "scipyoptimizer (class in qiskit_algorithms.optimizers)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer", false]], "scipyrealevolver (class in qiskit_algorithms)": [[52, "qiskit_algorithms.SciPyRealEvolver", false]], "send() (learningrate method)": [[117, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate.send", false]], "set_max_evals_grouped() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.set_max_evals_grouped", false]], "set_max_evals_grouped() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.set_max_evals_grouped", false]], "set_max_evals_grouped() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.set_max_evals_grouped", false]], "set_max_evals_grouped() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.set_max_evals_grouped", false]], "set_max_evals_grouped() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.set_max_evals_grouped", false]], "set_max_evals_grouped() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.set_max_evals_grouped", false]], "set_max_evals_grouped() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.set_max_evals_grouped", false]], "set_max_evals_grouped() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.set_max_evals_grouped", false]], "set_max_evals_grouped() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.set_max_evals_grouped", false]], "set_max_evals_grouped() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.set_max_evals_grouped", false]], "set_max_evals_grouped() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.set_max_evals_grouped", false]], "set_max_evals_grouped() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.set_max_evals_grouped", false]], "set_max_evals_grouped() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.set_max_evals_grouped", false]], "set_max_evals_grouped() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.set_max_evals_grouped", false]], "set_max_evals_grouped() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.set_max_evals_grouped", false]], "set_max_evals_grouped() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.set_max_evals_grouped", false]], "set_max_evals_grouped() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.set_max_evals_grouped", false]], "set_max_evals_grouped() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.set_max_evals_grouped", false]], "set_max_evals_grouped() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.set_max_evals_grouped", false]], "set_max_evals_grouped() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.set_max_evals_grouped", false]], "set_max_evals_grouped() (sbplx method)": [[107, "qiskit_algorithms.optimizers.SBPLX.set_max_evals_grouped", false]], "set_max_evals_grouped() (scipyoptimizer method)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.set_max_evals_grouped", false]], "set_max_evals_grouped() (slsqp method)": [[108, "qiskit_algorithms.optimizers.SLSQP.set_max_evals_grouped", false]], "set_max_evals_grouped() (snobfit method)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.set_max_evals_grouped", false]], "set_max_evals_grouped() (spsa method)": [[110, "qiskit_algorithms.optimizers.SPSA.set_max_evals_grouped", false]], "set_max_evals_grouped() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.set_max_evals_grouped", false]], "set_max_evals_grouped() (tnc method)": [[113, "qiskit_algorithms.optimizers.TNC.set_max_evals_grouped", false]], "set_max_evals_grouped() (umda method)": [[115, "qiskit_algorithms.optimizers.UMDA.set_max_evals_grouped", false]], "set_options() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.set_options", false]], "set_options() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.set_options", false]], "set_options() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.set_options", false]], "set_options() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.set_options", false]], "set_options() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.set_options", false]], "set_options() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.set_options", false]], "set_options() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.set_options", false]], "set_options() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.set_options", false]], "set_options() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.set_options", false]], "set_options() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.set_options", false]], "set_options() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.set_options", false]], "set_options() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.set_options", false]], "set_options() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.set_options", false]], "set_options() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.set_options", false]], "set_options() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.set_options", false]], "set_options() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.set_options", false]], "set_options() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.set_options", false]], "set_options() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.set_options", false]], "set_options() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.set_options", false]], "set_options() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.set_options", false]], "set_options() (sbplx method)": [[107, "qiskit_algorithms.optimizers.SBPLX.set_options", false]], "set_options() (scipyoptimizer method)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.set_options", false]], "set_options() (slsqp method)": [[108, "qiskit_algorithms.optimizers.SLSQP.set_options", false]], "set_options() (snobfit method)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.set_options", false]], "set_options() (spsa method)": [[110, "qiskit_algorithms.optimizers.SPSA.set_options", false]], "set_options() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.set_options", false]], "set_options() (tnc method)": [[113, "qiskit_algorithms.optimizers.TNC.set_options", false]], "set_options() (umda method)": [[115, "qiskit_algorithms.optimizers.UMDA.set_options", false]], "setting (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.setting", false]], "setting (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.setting", false]], "setting (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.setting", false]], "setting (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.setting", false]], "setting (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.setting", false]], "setting (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.setting", false]], "setting (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.setting", false]], "setting (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.setting", false]], "setting (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.setting", false]], "setting (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.setting", false]], "setting (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.setting", false]], "setting (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.setting", false]], "setting (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.setting", false]], "setting (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.setting", false]], "setting (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.setting", false]], "setting (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.setting", false]], "setting (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.setting", false]], "setting (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.setting", false]], "setting (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.setting", false]], "setting (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.setting", false]], "setting (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.setting", false]], "setting (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.setting", false]], "setting (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.setting", false]], "setting (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.setting", false]], "setting (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.setting", false]], "setting (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.setting", false]], "setting (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.setting", false]], "setting (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.setting", false]], "settings (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.settings", false]], "settings (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.settings", false]], "settings (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.settings", false]], "settings (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.settings", false]], "settings (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.settings", false]], "settings (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.settings", false]], "settings (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.settings", false]], "settings (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.settings", false]], "settings (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.settings", false]], "settings (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.settings", false]], "settings (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.settings", false]], "settings (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.settings", false]], "settings (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.settings", false]], "settings (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.settings", false]], "settings (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.settings", false]], "settings (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.settings", false]], "settings (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.settings", false]], "settings (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.settings", false]], "settings (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.settings", false]], "settings (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.settings", false]], "settings (sbplx attribute)": [[107, "qiskit_algorithms.optimizers.SBPLX.settings", false]], "settings (scipyoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.settings", false]], "settings (slsqp attribute)": [[108, "qiskit_algorithms.optimizers.SLSQP.settings", false]], "settings (snobfit attribute)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.settings", false]], "settings (spsa attribute)": [[110, "qiskit_algorithms.optimizers.SPSA.settings", false]], "settings (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.settings", false]], "settings (tnc attribute)": [[113, "qiskit_algorithms.optimizers.TNC.settings", false]], "settings (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.settings", false]], "shots (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.shots", false]], "shots (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.shots", false]], "shots (basesamplergradient attribute)": [[65, "qiskit_algorithms.gradients.BaseSamplerGradient.shots", false]], "shots (computeuncompute attribute)": [[119, "qiskit_algorithms.state_fidelities.ComputeUncompute.shots", false]], "shots (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.shots", false]], "shots (finitediffsamplergradient attribute)": [[68, "qiskit_algorithms.gradients.FiniteDiffSamplerGradient.shots", false]], "shots (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.shots", false]], "shots (lincombsamplergradient attribute)": [[71, "qiskit_algorithms.gradients.LinCombSamplerGradient.shots", false]], "shots (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.shots", false]], "shots (paramshiftsamplergradient attribute)": [[73, "qiskit_algorithms.gradients.ParamShiftSamplerGradient.shots", false]], "shots (samplergradientresult attribute)": [[81, "qiskit_algorithms.gradients.SamplerGradientResult.shots", false]], "shots (spsasamplergradient attribute)": [[80, "qiskit_algorithms.gradients.SPSASamplerGradient.shots", false]], "shots (statefidelityresult attribute)": [[120, "qiskit_algorithms.state_fidelities.StateFidelityResult.shots", false]], "size_gen (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.size_gen", false]], "slsqp (class in qiskit_algorithms.optimizers)": [[108, "qiskit_algorithms.optimizers.SLSQP", false]], "snobfit (class in qiskit_algorithms.optimizers)": [[109, "qiskit_algorithms.optimizers.SNOBFIT", false]], "solver (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.solver", false]], "spsa (class in qiskit_algorithms.optimizers)": [[110, "qiskit_algorithms.optimizers.SPSA", false]], "spsaestimatorgradient (class in qiskit_algorithms.gradients)": [[79, "qiskit_algorithms.gradients.SPSAEstimatorGradient", false]], "spsasamplergradient (class in qiskit_algorithms.gradients)": [[80, "qiskit_algorithms.gradients.SPSASamplerGradient", false]], "start() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.start", false]], "start() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.start", false]], "state (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.state", false]], "state (steppableoptimizer attribute)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.state", false]], "state_preparation (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.state_preparation", false]], "state_preparation (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.state_preparation", false]], "statefidelityresult (class in qiskit_algorithms.state_fidelities)": [[120, "qiskit_algorithms.state_fidelities.StateFidelityResult", false]], "status() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.status", false]], "std_bound (umda attribute)": [[115, "qiskit_algorithms.optimizers.UMDA.STD_BOUND", false]], "step() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.step", false]], "step() (pvqd method)": [[40, "qiskit_algorithms.PVQD.step", false]], "step() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.step", false]], "step_size (forwardeulersolver attribute)": [[121, "qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver.step_size", false]], "steppableoptimizer (class in qiskit_algorithms.optimizers)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer", false]], "stepsize (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.stepsize", false]], "success_probability (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.success_probability", false]], "supported_gates (lincombestimatorgradient attribute)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient.SUPPORTED_GATES", false]], "supported_gates (lincombqgt attribute)": [[70, "qiskit_algorithms.gradients.LinCombQGT.SUPPORTED_GATES", false]], "supported_gates (lincombsamplergradient attribute)": [[71, "qiskit_algorithms.gradients.LinCombSamplerGradient.SUPPORTED_GATES", false]], "supported_gates (paramshiftestimatorgradient attribute)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient.SUPPORTED_GATES", false]], "supported_gates (paramshiftsamplergradient attribute)": [[73, "qiskit_algorithms.gradients.ParamShiftSamplerGradient.SUPPORTED_GATES", false]], "supported_gates (reverseestimatorgradient attribute)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient.SUPPORTED_GATES", false]], "supported_gates (reverseqgt attribute)": [[78, "qiskit_algorithms.gradients.ReverseQGT.SUPPORTED_GATES", false]], "supports_aux_operators() (adaptvqe class method)": [[10, "qiskit_algorithms.AdaptVQE.supports_aux_operators", false]], "supports_aux_operators() (eigensolver class method)": [[19, "qiskit_algorithms.Eigensolver.supports_aux_operators", false]], "supports_aux_operators() (minimumeigensolver class method)": [[34, "qiskit_algorithms.MinimumEigensolver.supports_aux_operators", false]], "supports_aux_operators() (numpyeigensolver class method)": [[36, "qiskit_algorithms.NumPyEigensolver.supports_aux_operators", false]], "supports_aux_operators() (numpyminimumeigensolver class method)": [[38, "qiskit_algorithms.NumPyMinimumEigensolver.supports_aux_operators", false]], "supports_aux_operators() (qaoa class method)": [[45, "qiskit_algorithms.QAOA.supports_aux_operators", false]], "supports_aux_operators() (samplingminimumeigensolver class method)": [[47, "qiskit_algorithms.SamplingMinimumEigensolver.supports_aux_operators", false]], "supports_aux_operators() (samplingvqe class method)": [[49, "qiskit_algorithms.SamplingVQE.supports_aux_operators", false]], "supports_aux_operators() (trotterqrte class method)": [[55, "qiskit_algorithms.TrotterQRTE.supports_aux_operators", false]], "supports_aux_operators() (vqd class method)": [[56, "qiskit_algorithms.VQD.supports_aux_operators", false]], "supports_aux_operators() (vqe class method)": [[58, "qiskit_algorithms.VQE.supports_aux_operators", false]], "t_param (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.t_param", false]], "tell() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.tell", false]], "tell() (steppableoptimizer method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.tell", false]], "telldata (class in qiskit_algorithms.optimizers)": [[114, "qiskit_algorithms.optimizers.TellData", false]], "termination_criterion (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.termination_criterion", false]], "theta (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.theta", false]], "theta_intervals (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.theta_intervals", false]], "theta_intervals (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.theta_intervals", false]], "throw() (learningrate method)": [[117, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate.throw", false]], "time (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.time", false]], "timeevolutionproblem (class in qiskit_algorithms)": [[53, "qiskit_algorithms.TimeEvolutionProblem", false]], "timeevolutionresult (class in qiskit_algorithms)": [[54, "qiskit_algorithms.TimeEvolutionResult", false]], "times (timeevolutionresult attribute)": [[54, "qiskit_algorithms.TimeEvolutionResult.times", false]], "tnc (class in qiskit_algorithms.optimizers)": [[113, "qiskit_algorithms.optimizers.TNC", false]], "tol (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.tol", false]], "too_small_step (forwardeulersolver attribute)": [[121, "qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver.TOO_SMALL_STEP", false]], "top_measurement (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.top_measurement", false]], "trotterqrte (class in qiskit_algorithms)": [[55, "qiskit_algorithms.TrotterQRTE", false]], "truncation_threshold (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.truncation_threshold", false]], "umda (class in qiskit_algorithms.optimizers)": [[115, "qiskit_algorithms.optimizers.UMDA", false]], "use_parameter_shift (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.use_parameter_shift", false]], "variationalprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[126, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple", false]], "varqite (class in qiskit_algorithms)": [[60, "qiskit_algorithms.VarQITE", false]], "varqrte (class in qiskit_algorithms)": [[61, "qiskit_algorithms.VarQRTE", false]], "varqteresult (class in qiskit_algorithms)": [[62, "qiskit_algorithms.VarQTEResult", false]], "vqd (class in qiskit_algorithms)": [[56, "qiskit_algorithms.VQD", false]], "vqdresult (class in qiskit_algorithms)": [[57, "qiskit_algorithms.VQDResult", false]], "vqe (class in qiskit_algorithms)": [[58, "qiskit_algorithms.VQE", false]], "vqeresult (class in qiskit_algorithms)": [[59, "qiskit_algorithms.VQEResult", false]], "wrap_function() (adam static method)": [[82, "qiskit_algorithms.optimizers.ADAM.wrap_function", false]], "wrap_function() (aqgd static method)": [[83, "qiskit_algorithms.optimizers.AQGD.wrap_function", false]], "wrap_function() (bobyqa static method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.wrap_function", false]], "wrap_function() (cg static method)": [[86, "qiskit_algorithms.optimizers.CG.wrap_function", false]], "wrap_function() (cobyla static method)": [[87, "qiskit_algorithms.optimizers.COBYLA.wrap_function", false]], "wrap_function() (crs static method)": [[88, "qiskit_algorithms.optimizers.CRS.wrap_function", false]], "wrap_function() (direct_l static method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.wrap_function", false]], "wrap_function() (direct_l_rand static method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.wrap_function", false]], "wrap_function() (esch static method)": [[91, "qiskit_algorithms.optimizers.ESCH.wrap_function", false]], "wrap_function() (gradientdescent static method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.wrap_function", false]], "wrap_function() (gsls static method)": [[92, "qiskit_algorithms.optimizers.GSLS.wrap_function", false]], "wrap_function() (imfil static method)": [[95, "qiskit_algorithms.optimizers.IMFIL.wrap_function", false]], "wrap_function() (isres static method)": [[96, "qiskit_algorithms.optimizers.ISRES.wrap_function", false]], "wrap_function() (l_bfgs_b static method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.wrap_function", false]], "wrap_function() (nelder_mead static method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.wrap_function", false]], "wrap_function() (nft static method)": [[100, "qiskit_algorithms.optimizers.NFT.wrap_function", false]], "wrap_function() (optimizer static method)": [[101, "qiskit_algorithms.optimizers.Optimizer.wrap_function", false]], "wrap_function() (p_bfgs static method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.wrap_function", false]], "wrap_function() (powell static method)": [[104, "qiskit_algorithms.optimizers.POWELL.wrap_function", false]], "wrap_function() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.wrap_function", false]], "wrap_function() (sbplx static method)": [[107, "qiskit_algorithms.optimizers.SBPLX.wrap_function", false]], "wrap_function() (scipyoptimizer static method)": [[111, "qiskit_algorithms.optimizers.SciPyOptimizer.wrap_function", false]], "wrap_function() (slsqp static method)": [[108, "qiskit_algorithms.optimizers.SLSQP.wrap_function", false]], "wrap_function() (snobfit static method)": [[109, "qiskit_algorithms.optimizers.SNOBFIT.wrap_function", false]], "wrap_function() (spsa static method)": [[110, "qiskit_algorithms.optimizers.SPSA.wrap_function", false]], "wrap_function() (steppableoptimizer static method)": [[112, "qiskit_algorithms.optimizers.SteppableOptimizer.wrap_function", false]], "wrap_function() (tnc static method)": [[113, "qiskit_algorithms.optimizers.TNC.wrap_function", false]], "wrap_function() (umda static method)": [[115, "qiskit_algorithms.optimizers.UMDA.wrap_function", false]], "x (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.x", false]], "x (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.x", false]], "x (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.x", false]], "x_fun (askdata attribute)": [[84, "qiskit_algorithms.optimizers.AskData.x_fun", false]], "x_jac (askdata attribute)": [[84, "qiskit_algorithms.optimizers.AskData.x_jac", false]]}, "objects": {"": [[0, 0, 0, "-", "qiskit_algorithms"]], "qiskit_algorithms": [[10, 1, 1, "", "AdaptVQE"], [11, 1, 1, "", "AdaptVQEResult"], [1, 4, 1, "", "AlgorithmError"], [12, 1, 1, "", "AlgorithmJob"], [13, 1, 1, "", "AmplificationProblem"], [14, 1, 1, "", "AmplitudeAmplifier"], [15, 1, 1, "", "AmplitudeEstimation"], [16, 1, 1, "", "AmplitudeEstimationResult"], [17, 1, 1, "", "AmplitudeEstimator"], [18, 1, 1, "", "AmplitudeEstimatorResult"], [19, 1, 1, "", "Eigensolver"], [20, 1, 1, "", "EigensolverResult"], [21, 1, 1, "", "EstimationProblem"], [22, 1, 1, "", "FasterAmplitudeEstimation"], [23, 1, 1, "", "FasterAmplitudeEstimationResult"], [24, 1, 1, "", "Grover"], [25, 1, 1, "", "GroverResult"], [26, 1, 1, "", "HamiltonianPhaseEstimation"], [27, 1, 1, "", "HamiltonianPhaseEstimationResult"], [28, 1, 1, "", "ImaginaryTimeEvolver"], [29, 1, 1, "", "IterativeAmplitudeEstimation"], [30, 1, 1, "", "IterativeAmplitudeEstimationResult"], [31, 1, 1, "", "IterativePhaseEstimation"], [32, 1, 1, "", "MaximumLikelihoodAmplitudeEstimation"], [33, 1, 1, "", "MaximumLikelihoodAmplitudeEstimationResult"], [34, 1, 1, "", "MinimumEigensolver"], [35, 1, 1, "", "MinimumEigensolverResult"], [36, 1, 1, "", "NumPyEigensolver"], [37, 1, 1, "", "NumPyEigensolverResult"], [38, 1, 1, "", "NumPyMinimumEigensolver"], [39, 1, 1, "", "NumPyMinimumEigensolverResult"], [40, 1, 1, "", "PVQD"], [41, 1, 1, "", "PVQDResult"], [42, 1, 1, "", "PhaseEstimation"], [43, 1, 1, "", "PhaseEstimationResult"], [44, 1, 1, "", "PhaseEstimationScale"], [45, 1, 1, "", "QAOA"], [46, 1, 1, "", "RealTimeEvolver"], [47, 1, 1, "", "SamplingMinimumEigensolver"], [48, 1, 1, "", "SamplingMinimumEigensolverResult"], [49, 1, 1, "", "SamplingVQE"], [50, 1, 1, "", "SamplingVQEResult"], [51, 1, 1, "", "SciPyImaginaryEvolver"], [52, 1, 1, "", "SciPyRealEvolver"], [53, 1, 1, "", "TimeEvolutionProblem"], [54, 1, 1, "", "TimeEvolutionResult"], [55, 1, 1, "", "TrotterQRTE"], [56, 1, 1, "", "VQD"], [57, 1, 1, "", "VQDResult"], [58, 1, 1, "", "VQE"], [59, 1, 1, "", "VQEResult"], [60, 1, 1, "", "VarQITE"], [61, 1, 1, "", "VarQRTE"], [62, 1, 1, "", "VarQTEResult"], [2, 0, 0, "-", "gradients"], [3, 0, 0, "-", "optimizers"], [4, 0, 0, "-", "state_fidelities"]], "qiskit_algorithms.AdaptVQE": [[10, 2, 1, "", "compute_minimum_eigenvalue"], [10, 3, 1, "", "eigenvalue_threshold"], [10, 3, 1, "", "gradient_threshold"], [10, 3, 1, "", "initial_point"], [10, 3, 1, "", "max_iterations"], [10, 3, 1, "", "solver"], [10, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.AdaptVQEResult": [[11, 3, 1, "", "aux_operators_evaluated"], [11, 2, 1, "", "combine"], [11, 3, 1, "", "cost_function_evals"], [11, 3, 1, "", "eigenvalue"], [11, 3, 1, "", "eigenvalue_history"], [11, 3, 1, "", "final_max_gradient"], [11, 3, 1, "", "num_iterations"], [11, 3, 1, "", "optimal_circuit"], [11, 3, 1, "", "optimal_parameters"], [11, 3, 1, "", "optimal_point"], [11, 3, 1, "", "optimal_value"], [11, 3, 1, "", "optimizer_evals"], [11, 3, 1, "", "optimizer_result"], [11, 3, 1, "", "optimizer_time"], [11, 3, 1, "", "termination_criterion"]], "qiskit_algorithms.AlgorithmJob": [[12, 2, 1, "", "cancel"], [12, 2, 1, "", "cancelled"], [12, 2, 1, "", "done"], [12, 2, 1, "", "in_final_state"], [12, 2, 1, "", "job_id"], [12, 2, 1, "", "result"], [12, 2, 1, "", "running"], [12, 2, 1, "", "status"]], "qiskit_algorithms.AmplificationProblem": [[13, 3, 1, "", "grover_operator"], [13, 3, 1, "", "is_good_state"], [13, 3, 1, "", "objective_qubits"], [13, 3, 1, "", "oracle"], [13, 3, 1, "", "post_processing"], [13, 3, 1, "", "state_preparation"]], "qiskit_algorithms.AmplitudeAmplifier": [[14, 2, 1, "", "amplify"]], "qiskit_algorithms.AmplitudeEstimation": [[15, 2, 1, "", "compute_confidence_interval"], [15, 2, 1, "", "compute_mle"], [15, 2, 1, "", "construct_circuit"], [15, 2, 1, "", "estimate"], [15, 2, 1, "", "evaluate_measurements"], [15, 3, 1, "", "sampler"]], "qiskit_algorithms.AmplitudeEstimationResult": [[16, 3, 1, "", "circuit_results"], [16, 2, 1, "", "combine"], [16, 3, 1, "", "confidence_interval"], [16, 3, 1, "", "confidence_interval_processed"], [16, 3, 1, "", "estimation"], [16, 3, 1, "", "estimation_processed"], [16, 3, 1, "", "max_probability"], [16, 3, 1, "", "measurements"], [16, 3, 1, "", "mle"], [16, 3, 1, "", "mle_processed"], [16, 3, 1, "", "num_evaluation_qubits"], [16, 3, 1, "", "num_oracle_queries"], [16, 3, 1, "", "post_processing"], [16, 3, 1, "", "samples"], [16, 3, 1, "", "samples_processed"], [16, 3, 1, "", "shots"]], "qiskit_algorithms.AmplitudeEstimator": [[17, 2, 1, "", "estimate"]], "qiskit_algorithms.AmplitudeEstimatorResult": [[18, 3, 1, "", "circuit_results"], [18, 2, 1, "", "combine"], [18, 3, 1, "", "confidence_interval"], [18, 3, 1, "", "confidence_interval_processed"], [18, 3, 1, "", "estimation"], [18, 3, 1, "", "estimation_processed"], [18, 3, 1, "", "num_oracle_queries"], [18, 3, 1, "", "post_processing"], [18, 3, 1, "", "shots"]], "qiskit_algorithms.Eigensolver": [[19, 2, 1, "", "compute_eigenvalues"], [19, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.EigensolverResult": [[20, 3, 1, "", "aux_operators_evaluated"], [20, 2, 1, "", "combine"], [20, 3, 1, "", "eigenvalues"]], "qiskit_algorithms.EstimationProblem": [[21, 3, 1, "", "grover_operator"], [21, 3, 1, "", "has_good_state"], [21, 3, 1, "", "is_good_state"], [21, 3, 1, "", "objective_qubits"], [21, 3, 1, "", "post_processing"], [21, 2, 1, "", "rescale"], [21, 3, 1, "", "state_preparation"]], "qiskit_algorithms.FasterAmplitudeEstimation": [[22, 2, 1, "", "construct_circuit"], [22, 2, 1, "", "estimate"], [22, 3, 1, "", "sampler"]], "qiskit_algorithms.FasterAmplitudeEstimationResult": [[23, 3, 1, "", "circuit_results"], [23, 2, 1, "", "combine"], [23, 3, 1, "", "confidence_interval"], [23, 3, 1, "", "confidence_interval_processed"], [23, 3, 1, "", "estimation"], [23, 3, 1, "", "estimation_processed"], [23, 3, 1, "", "num_first_state_steps"], [23, 3, 1, "", "num_oracle_queries"], [23, 3, 1, "", "num_steps"], [23, 3, 1, "", "post_processing"], [23, 3, 1, "", "shots"], [23, 3, 1, "", "success_probability"], [23, 3, 1, "", "theta_intervals"]], "qiskit_algorithms.Grover": [[24, 2, 1, "", "amplify"], [24, 2, 1, "", "construct_circuit"], [24, 2, 1, "", "optimal_num_iterations"], [24, 3, 1, "", "sampler"]], "qiskit_algorithms.GroverResult": [[25, 3, 1, "", "assignment"], [25, 3, 1, "", "circuit_results"], [25, 2, 1, "", "combine"], [25, 3, 1, "", "iterations"], [25, 3, 1, "", "max_probability"], [25, 3, 1, "", "oracle_evaluation"], [25, 3, 1, "", "top_measurement"]], "qiskit_algorithms.HamiltonianPhaseEstimation": [[26, 2, 1, "", "estimate"]], "qiskit_algorithms.HamiltonianPhaseEstimationResult": [[27, 2, 1, "", "combine"], [27, 2, 1, "", "filter_phases"], [27, 3, 1, "", "most_likely_eigenvalue"], [27, 3, 1, "", "phase"]], "qiskit_algorithms.ImaginaryTimeEvolver": [[28, 2, 1, "", "evolve"]], "qiskit_algorithms.IterativeAmplitudeEstimation": [[29, 2, 1, "", "construct_circuit"], [29, 3, 1, "", "epsilon_target"], [29, 2, 1, "", "estimate"], [29, 3, 1, "", "sampler"]], "qiskit_algorithms.IterativeAmplitudeEstimationResult": [[30, 3, 1, "", "alpha"], [30, 3, 1, "", "circuit_results"], [30, 2, 1, "", "combine"], [30, 3, 1, "", "confidence_interval"], [30, 3, 1, "", "confidence_interval_processed"], [30, 3, 1, "", "epsilon_estimated"], [30, 3, 1, "", "epsilon_estimated_processed"], [30, 3, 1, "", "epsilon_target"], [30, 3, 1, "", "estimate_intervals"], [30, 3, 1, "", "estimation"], [30, 3, 1, "", "estimation_processed"], [30, 3, 1, "", "num_oracle_queries"], [30, 3, 1, "", "post_processing"], [30, 3, 1, "", "powers"], [30, 3, 1, "", "ratios"], [30, 3, 1, "", "shots"], [30, 3, 1, "", "theta_intervals"]], "qiskit_algorithms.IterativePhaseEstimation": [[31, 2, 1, "", "construct_circuit"], [31, 2, 1, "", "estimate"]], "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation": [[32, 2, 1, "", "compute_confidence_interval"], [32, 2, 1, "", "compute_mle"], [32, 2, 1, "", "construct_circuits"], [32, 2, 1, "", "estimate"], [32, 3, 1, "", "sampler"]], "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult": [[33, 3, 1, "", "circuit_results"], [33, 2, 1, "", "combine"], [33, 3, 1, "", "confidence_interval"], [33, 3, 1, "", "confidence_interval_processed"], [33, 3, 1, "", "estimation"], [33, 3, 1, "", "estimation_processed"], [33, 3, 1, "", "evaluation_schedule"], [33, 3, 1, "", "fisher_information"], [33, 3, 1, "", "good_counts"], [33, 3, 1, "", "minimizer"], [33, 3, 1, "", "num_oracle_queries"], [33, 3, 1, "", "post_processing"], [33, 3, 1, "", "shots"], [33, 3, 1, "", "theta"]], "qiskit_algorithms.MinimumEigensolver": [[34, 2, 1, "", "compute_minimum_eigenvalue"], [34, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.MinimumEigensolverResult": [[35, 3, 1, "", "aux_operators_evaluated"], [35, 2, 1, "", "combine"], [35, 3, 1, "", "eigenvalue"]], "qiskit_algorithms.NumPyEigensolver": [[36, 2, 1, "", "compute_eigenvalues"], [36, 3, 1, "", "filter_criterion"], [36, 3, 1, "", "k"], [36, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.NumPyEigensolverResult": [[37, 3, 1, "", "aux_operators_evaluated"], [37, 2, 1, "", "combine"], [37, 3, 1, "", "eigenstates"], [37, 3, 1, "", "eigenvalues"]], "qiskit_algorithms.NumPyMinimumEigensolver": [[38, 2, 1, "", "compute_minimum_eigenvalue"], [38, 3, 1, "", "filter_criterion"], [38, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.NumPyMinimumEigensolverResult": [[39, 3, 1, "", "aux_operators_evaluated"], [39, 2, 1, "", "combine"], [39, 3, 1, "", "eigenstate"], [39, 3, 1, "", "eigenvalue"]], "qiskit_algorithms.PVQD": [[40, 3, 1, "", "ansatz"], [40, 3, 1, "", "evolution"], [40, 2, 1, "", "evolve"], [40, 2, 1, "", "get_loss"], [40, 3, 1, "", "initial_guess"], [40, 3, 1, "", "initial_parameters"], [40, 3, 1, "", "num_timesteps"], [40, 3, 1, "", "optimizer"], [40, 2, 1, "", "step"], [40, 3, 1, "", "use_parameter_shift"]], "qiskit_algorithms.PVQDResult": [[41, 2, 1, "", "combine"]], "qiskit_algorithms.PhaseEstimation": [[42, 2, 1, "", "construct_circuit"], [42, 2, 1, "", "estimate"], [42, 2, 1, "", "estimate_from_pe_circuit"]], "qiskit_algorithms.PhaseEstimationResult": [[43, 3, 1, "", "circuit_result"], [43, 2, 1, "", "combine"], [43, 2, 1, "", "filter_phases"], [43, 3, 1, "", "phase"], [43, 3, 1, "", "phases"]], "qiskit_algorithms.PhaseEstimationScale": [[44, 2, 1, "", "from_pauli_sum"], [44, 3, 1, "", "scale"], [44, 2, 1, "", "scale_phase"], [44, 2, 1, "", "scale_phases"]], "qiskit_algorithms.QAOA": [[45, 3, 1, "", "aggregation"], [45, 3, 1, "", "callback"], [45, 2, 1, "", "compute_minimum_eigenvalue"], [45, 3, 1, "", "initial_point"], [45, 3, 1, "", "initial_state"], [45, 3, 1, "", "mixer"], [45, 3, 1, "", "optimizer"], [45, 3, 1, "", "reps"], [45, 3, 1, "", "sampler"], [45, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.RealTimeEvolver": [[46, 2, 1, "", "evolve"]], "qiskit_algorithms.SamplingMinimumEigensolver": [[47, 2, 1, "", "compute_minimum_eigenvalue"], [47, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.SamplingMinimumEigensolverResult": [[48, 3, 1, "", "aux_operators_evaluated"], [48, 3, 1, "", "best_measurement"], [48, 2, 1, "", "combine"], [48, 3, 1, "", "eigenstate"], [48, 3, 1, "", "eigenvalue"]], "qiskit_algorithms.SamplingVQE": [[49, 3, 1, "", "aggregation"], [49, 3, 1, "", "ansatz"], [49, 3, 1, "", "callback"], [49, 2, 1, "", "compute_minimum_eigenvalue"], [49, 3, 1, "", "initial_point"], [49, 3, 1, "", "optimizer"], [49, 3, 1, "", "sampler"], [49, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.SamplingVQEResult": [[50, 3, 1, "", "aux_operators_evaluated"], [50, 3, 1, "", "best_measurement"], [50, 2, 1, "", "combine"], [50, 3, 1, "", "cost_function_evals"], [50, 3, 1, "", "eigenstate"], [50, 3, 1, "", "eigenvalue"], [50, 3, 1, "", "optimal_circuit"], [50, 3, 1, "", "optimal_parameters"], [50, 3, 1, "", "optimal_point"], [50, 3, 1, "", "optimal_value"], [50, 3, 1, "", "optimizer_evals"], [50, 3, 1, "", "optimizer_result"], [50, 3, 1, "", "optimizer_time"]], "qiskit_algorithms.SciPyImaginaryEvolver": [[51, 2, 1, "", "evolve"]], "qiskit_algorithms.SciPyRealEvolver": [[52, 2, 1, "", "evolve"]], "qiskit_algorithms.TimeEvolutionProblem": [[53, 3, 1, "", "aux_operators"], [53, 3, 1, "", "hamiltonian"], [53, 3, 1, "", "initial_state"], [53, 3, 1, "", "param_value_map"], [53, 3, 1, "", "t_param"], [53, 3, 1, "", "time"], [53, 3, 1, "", "truncation_threshold"]], "qiskit_algorithms.TimeEvolutionResult": [[54, 3, 1, "", "aux_ops_evaluated"], [54, 2, 1, "", "combine"], [54, 3, 1, "", "evolved_state"], [54, 3, 1, "", "observables"], [54, 3, 1, "", "times"]], "qiskit_algorithms.TrotterQRTE": [[55, 3, 1, "", "estimator"], [55, 2, 1, "", "evolve"], [55, 3, 1, "", "num_timesteps"], [55, 3, 1, "", "product_formula"], [55, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.VQD": [[56, 3, 1, "", "ansatz"], [56, 3, 1, "", "betas"], [56, 3, 1, "", "callback"], [56, 2, 1, "", "compute_eigenvalues"], [56, 3, 1, "", "convergence_threshold"], [56, 3, 1, "", "estimator"], [56, 3, 1, "", "fidelity"], [56, 3, 1, "", "initial_point"], [56, 3, 1, "", "k"], [56, 3, 1, "", "optimizer"], [56, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.VQDResult": [[57, 3, 1, "", "aux_operators_evaluated"], [57, 2, 1, "", "combine"], [57, 3, 1, "", "cost_function_evals"], [57, 3, 1, "", "eigenvalues"], [57, 3, 1, "", "optimal_circuits"], [57, 3, 1, "", "optimal_parameters"], [57, 3, 1, "", "optimal_points"], [57, 3, 1, "", "optimal_values"], [57, 3, 1, "", "optimizer_results"], [57, 3, 1, "", "optimizer_times"]], "qiskit_algorithms.VQE": [[58, 3, 1, "", "ansatz"], [58, 3, 1, "", "callback"], [58, 2, 1, "", "compute_minimum_eigenvalue"], [58, 3, 1, "", "estimator"], [58, 3, 1, "", "gradient"], [58, 3, 1, "", "initial_point"], [58, 3, 1, "", "optimizer"], [58, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.VQEResult": [[59, 3, 1, "", "aux_operators_evaluated"], [59, 2, 1, "", "combine"], [59, 3, 1, "", "cost_function_evals"], [59, 3, 1, "", "eigenvalue"], [59, 3, 1, "", "optimal_circuit"], [59, 3, 1, "", "optimal_parameters"], [59, 3, 1, "", "optimal_point"], [59, 3, 1, "", "optimal_value"], [59, 3, 1, "", "optimizer_evals"], [59, 3, 1, "", "optimizer_result"], [59, 3, 1, "", "optimizer_time"]], "qiskit_algorithms.VarQITE": [[60, 3, 1, "", "ansatz"], [60, 2, 1, "", "evolve"]], "qiskit_algorithms.VarQRTE": [[61, 3, 1, "", "ansatz"], [61, 2, 1, "", "evolve"]], "qiskit_algorithms.VarQTEResult": [[62, 2, 1, "", "combine"], [62, 3, 1, "", "parameter_values"]], "qiskit_algorithms.gradients": [[63, 1, 1, "", "BaseEstimatorGradient"], [64, 1, 1, "", "BaseQGT"], [65, 1, 1, "", "BaseSamplerGradient"], [66, 1, 1, "", "EstimatorGradientResult"], [67, 1, 1, "", "FiniteDiffEstimatorGradient"], [68, 1, 1, "", "FiniteDiffSamplerGradient"], [69, 1, 1, "", "LinCombEstimatorGradient"], [70, 1, 1, "", "LinCombQGT"], [71, 1, 1, "", "LinCombSamplerGradient"], [72, 1, 1, "", "ParamShiftEstimatorGradient"], [73, 1, 1, "", "ParamShiftSamplerGradient"], [74, 1, 1, "", "QFI"], [75, 1, 1, "", "QFIResult"], [76, 1, 1, "", "QGTResult"], [77, 1, 1, "", "ReverseEstimatorGradient"], [78, 1, 1, "", "ReverseQGT"], [79, 1, 1, "", "SPSAEstimatorGradient"], [80, 1, 1, "", "SPSASamplerGradient"], [81, 1, 1, "", "SamplerGradientResult"]], "qiskit_algorithms.gradients.BaseEstimatorGradient": [[63, 3, 1, "", "derivative_type"], [63, 3, 1, "", "precision"], [63, 2, 1, "", "run"]], "qiskit_algorithms.gradients.BaseQGT": [[64, 3, 1, "", "derivative_type"], [64, 3, 1, "", "precision"], [64, 2, 1, "", "run"]], "qiskit_algorithms.gradients.BaseSamplerGradient": [[65, 2, 1, "", "run"], [65, 3, 1, "", "shots"]], "qiskit_algorithms.gradients.EstimatorGradientResult": [[66, 3, 1, "", "gradients"], [66, 3, 1, "", "metadata"], [66, 3, 1, "", "precision"]], "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient": [[67, 3, 1, "", "derivative_type"], [67, 3, 1, "", "precision"], [67, 2, 1, "", "run"]], "qiskit_algorithms.gradients.FiniteDiffSamplerGradient": [[68, 2, 1, "", "run"], [68, 3, 1, "", "shots"]], "qiskit_algorithms.gradients.LinCombEstimatorGradient": [[69, 3, 1, "", "SUPPORTED_GATES"], [69, 3, 1, "", "derivative_type"], [69, 3, 1, "", "precision"], [69, 2, 1, "", "run"]], "qiskit_algorithms.gradients.LinCombQGT": [[70, 3, 1, "", "SUPPORTED_GATES"], [70, 3, 1, "", "derivative_type"], [70, 3, 1, "", "precision"], [70, 2, 1, "", "run"]], "qiskit_algorithms.gradients.LinCombSamplerGradient": [[71, 3, 1, "", "SUPPORTED_GATES"], [71, 2, 1, "", "run"], [71, 3, 1, "", "shots"]], "qiskit_algorithms.gradients.ParamShiftEstimatorGradient": [[72, 3, 1, "", "SUPPORTED_GATES"], [72, 3, 1, "", "derivative_type"], [72, 3, 1, "", "precision"], [72, 2, 1, "", "run"]], "qiskit_algorithms.gradients.ParamShiftSamplerGradient": [[73, 3, 1, "", "SUPPORTED_GATES"], [73, 2, 1, "", "run"], [73, 3, 1, "", "shots"]], "qiskit_algorithms.gradients.QFI": [[74, 3, 1, "", "precision"], [74, 2, 1, "", "run"]], "qiskit_algorithms.gradients.QFIResult": [[75, 3, 1, "", "metadata"], [75, 3, 1, "", "precision"], [75, 3, 1, "", "qfis"]], "qiskit_algorithms.gradients.QGTResult": [[76, 3, 1, "", "derivative_type"], [76, 3, 1, "", "metadata"], [76, 3, 1, "", "precision"], [76, 3, 1, "", "qgts"]], "qiskit_algorithms.gradients.ReverseEstimatorGradient": [[77, 3, 1, "", "SUPPORTED_GATES"], [77, 3, 1, "", "derivative_type"], [77, 3, 1, "", "precision"], [77, 2, 1, "", "run"]], "qiskit_algorithms.gradients.ReverseQGT": [[78, 3, 1, "", "SUPPORTED_GATES"], [78, 3, 1, "", "derivative_type"], [78, 3, 1, "", "precision"], [78, 2, 1, "", "run"]], "qiskit_algorithms.gradients.SPSAEstimatorGradient": [[79, 3, 1, "", "derivative_type"], [79, 3, 1, "", "precision"], [79, 2, 1, "", "run"]], "qiskit_algorithms.gradients.SPSASamplerGradient": [[80, 2, 1, "", "run"], [80, 3, 1, "", "shots"]], "qiskit_algorithms.gradients.SamplerGradientResult": [[81, 3, 1, "", "gradients"], [81, 3, 1, "", "metadata"], [81, 3, 1, "", "shots"]], "qiskit_algorithms.optimizers": [[82, 1, 1, "", "ADAM"], [83, 1, 1, "", "AQGD"], [84, 1, 1, "", "AskData"], [85, 1, 1, "", "BOBYQA"], [86, 1, 1, "", "CG"], [87, 1, 1, "", "COBYLA"], [88, 1, 1, "", "CRS"], [89, 1, 1, "", "DIRECT_L"], [90, 1, 1, "", "DIRECT_L_RAND"], [91, 1, 1, "", "ESCH"], [92, 1, 1, "", "GSLS"], [93, 1, 1, "", "GradientDescent"], [94, 1, 1, "", "GradientDescentState"], [95, 1, 1, "", "IMFIL"], [96, 1, 1, "", "ISRES"], [97, 1, 1, "", "L_BFGS_B"], [98, 1, 1, "", "Minimizer"], [99, 1, 1, "", "NELDER_MEAD"], [100, 1, 1, "", "NFT"], [101, 1, 1, "", "Optimizer"], [102, 1, 1, "", "OptimizerResult"], [103, 1, 1, "", "OptimizerState"], [104, 1, 1, "", "POWELL"], [105, 1, 1, "", "P_BFGS"], [106, 1, 1, "", "QNSPSA"], [107, 1, 1, "", "SBPLX"], [108, 1, 1, "", "SLSQP"], [109, 1, 1, "", "SNOBFIT"], [110, 1, 1, "", "SPSA"], [111, 1, 1, "", "SciPyOptimizer"], [112, 1, 1, "", "SteppableOptimizer"], [113, 1, 1, "", "TNC"], [114, 1, 1, "", "TellData"], [115, 1, 1, "", "UMDA"], [116, 0, 0, "-", "optimizer_utils"]], "qiskit_algorithms.optimizers.ADAM": [[82, 3, 1, "", "bounds_support_level"], [82, 2, 1, "", "get_support_level"], [82, 2, 1, "", "gradient_num_diff"], [82, 3, 1, "", "gradient_support_level"], [82, 3, 1, "", "initial_point_support_level"], [82, 3, 1, "", "is_bounds_ignored"], [82, 3, 1, "", "is_bounds_required"], [82, 3, 1, "", "is_bounds_supported"], [82, 3, 1, "", "is_gradient_ignored"], [82, 3, 1, "", "is_gradient_required"], [82, 3, 1, "", "is_gradient_supported"], [82, 3, 1, "", "is_initial_point_ignored"], [82, 3, 1, "", "is_initial_point_required"], [82, 3, 1, "", "is_initial_point_supported"], [82, 2, 1, "", "load_params"], [82, 2, 1, "", "minimize"], [82, 2, 1, "", "print_options"], [82, 2, 1, "", "save_params"], [82, 2, 1, "", "set_max_evals_grouped"], [82, 2, 1, "", "set_options"], [82, 3, 1, "", "setting"], [82, 3, 1, "", "settings"], [82, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.AQGD": [[83, 3, 1, "", "bounds_support_level"], [83, 2, 1, "", "get_support_level"], [83, 2, 1, "", "gradient_num_diff"], [83, 3, 1, "", "gradient_support_level"], [83, 3, 1, "", "initial_point_support_level"], [83, 3, 1, "", "is_bounds_ignored"], [83, 3, 1, "", "is_bounds_required"], [83, 3, 1, "", "is_bounds_supported"], [83, 3, 1, "", "is_gradient_ignored"], [83, 3, 1, "", "is_gradient_required"], [83, 3, 1, "", "is_gradient_supported"], [83, 3, 1, "", "is_initial_point_ignored"], [83, 3, 1, "", "is_initial_point_required"], [83, 3, 1, "", "is_initial_point_supported"], [83, 2, 1, "", "minimize"], [83, 2, 1, "", "print_options"], [83, 2, 1, "", "set_max_evals_grouped"], [83, 2, 1, "", "set_options"], [83, 3, 1, "", "setting"], [83, 3, 1, "", "settings"], [83, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.AskData": [[84, 3, 1, "", "x_fun"], [84, 3, 1, "", "x_jac"]], "qiskit_algorithms.optimizers.BOBYQA": [[85, 3, 1, "", "bounds_support_level"], [85, 2, 1, "", "get_support_level"], [85, 2, 1, "", "gradient_num_diff"], [85, 3, 1, "", "gradient_support_level"], [85, 3, 1, "", "initial_point_support_level"], [85, 3, 1, "", "is_bounds_ignored"], [85, 3, 1, "", "is_bounds_required"], [85, 3, 1, "", "is_bounds_supported"], [85, 3, 1, "", "is_gradient_ignored"], [85, 3, 1, "", "is_gradient_required"], [85, 3, 1, "", "is_gradient_supported"], [85, 3, 1, "", "is_initial_point_ignored"], [85, 3, 1, "", "is_initial_point_required"], [85, 3, 1, "", "is_initial_point_supported"], [85, 2, 1, "", "minimize"], [85, 2, 1, "", "print_options"], [85, 2, 1, "", "set_max_evals_grouped"], [85, 2, 1, "", "set_options"], [85, 3, 1, "", "setting"], [85, 3, 1, "", "settings"], [85, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.CG": [[86, 3, 1, "", "bounds_support_level"], [86, 2, 1, "", "get_support_level"], [86, 2, 1, "", "gradient_num_diff"], [86, 3, 1, "", "gradient_support_level"], [86, 3, 1, "", "initial_point_support_level"], [86, 3, 1, "", "is_bounds_ignored"], [86, 3, 1, "", "is_bounds_required"], [86, 3, 1, "", "is_bounds_supported"], [86, 3, 1, "", "is_gradient_ignored"], [86, 3, 1, "", "is_gradient_required"], [86, 3, 1, "", "is_gradient_supported"], [86, 3, 1, "", "is_initial_point_ignored"], [86, 3, 1, "", "is_initial_point_required"], [86, 3, 1, "", "is_initial_point_supported"], [86, 2, 1, "", "minimize"], [86, 2, 1, "", "print_options"], [86, 2, 1, "", "set_max_evals_grouped"], [86, 2, 1, "", "set_options"], [86, 3, 1, "", "setting"], [86, 3, 1, "", "settings"], [86, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.COBYLA": [[87, 3, 1, "", "bounds_support_level"], [87, 2, 1, "", "get_support_level"], [87, 2, 1, "", "gradient_num_diff"], [87, 3, 1, "", "gradient_support_level"], [87, 3, 1, "", "initial_point_support_level"], [87, 3, 1, "", "is_bounds_ignored"], [87, 3, 1, "", "is_bounds_required"], [87, 3, 1, "", "is_bounds_supported"], [87, 3, 1, "", "is_gradient_ignored"], [87, 3, 1, "", "is_gradient_required"], [87, 3, 1, "", "is_gradient_supported"], [87, 3, 1, "", "is_initial_point_ignored"], [87, 3, 1, "", "is_initial_point_required"], [87, 3, 1, "", "is_initial_point_supported"], [87, 2, 1, "", "minimize"], [87, 2, 1, "", "print_options"], [87, 2, 1, "", "set_max_evals_grouped"], [87, 2, 1, "", "set_options"], [87, 3, 1, "", "setting"], [87, 3, 1, "", "settings"], [87, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.CRS": [[88, 3, 1, "", "bounds_support_level"], [88, 2, 1, "", "get_nlopt_optimizer"], [88, 2, 1, "", "get_support_level"], [88, 2, 1, "", "gradient_num_diff"], [88, 3, 1, "", "gradient_support_level"], [88, 3, 1, "", "initial_point_support_level"], [88, 3, 1, "", "is_bounds_ignored"], [88, 3, 1, "", "is_bounds_required"], [88, 3, 1, "", "is_bounds_supported"], [88, 3, 1, "", "is_gradient_ignored"], [88, 3, 1, "", "is_gradient_required"], [88, 3, 1, "", "is_gradient_supported"], [88, 3, 1, "", "is_initial_point_ignored"], [88, 3, 1, "", "is_initial_point_required"], [88, 3, 1, "", "is_initial_point_supported"], [88, 2, 1, "", "minimize"], [88, 2, 1, "", "print_options"], [88, 2, 1, "", "set_max_evals_grouped"], [88, 2, 1, "", "set_options"], [88, 3, 1, "", "setting"], [88, 3, 1, "", "settings"], [88, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.DIRECT_L": [[89, 3, 1, "", "bounds_support_level"], [89, 2, 1, "", "get_nlopt_optimizer"], [89, 2, 1, "", "get_support_level"], [89, 2, 1, "", "gradient_num_diff"], [89, 3, 1, "", "gradient_support_level"], [89, 3, 1, "", "initial_point_support_level"], [89, 3, 1, "", "is_bounds_ignored"], [89, 3, 1, "", "is_bounds_required"], [89, 3, 1, "", "is_bounds_supported"], [89, 3, 1, "", "is_gradient_ignored"], [89, 3, 1, "", "is_gradient_required"], [89, 3, 1, "", "is_gradient_supported"], [89, 3, 1, "", "is_initial_point_ignored"], [89, 3, 1, "", "is_initial_point_required"], [89, 3, 1, "", "is_initial_point_supported"], [89, 2, 1, "", "minimize"], [89, 2, 1, "", "print_options"], [89, 2, 1, "", "set_max_evals_grouped"], [89, 2, 1, "", "set_options"], [89, 3, 1, "", "setting"], [89, 3, 1, "", "settings"], [89, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.DIRECT_L_RAND": [[90, 3, 1, "", "bounds_support_level"], [90, 2, 1, "", "get_nlopt_optimizer"], [90, 2, 1, "", "get_support_level"], [90, 2, 1, "", "gradient_num_diff"], [90, 3, 1, "", "gradient_support_level"], [90, 3, 1, "", "initial_point_support_level"], [90, 3, 1, "", "is_bounds_ignored"], [90, 3, 1, "", "is_bounds_required"], [90, 3, 1, "", "is_bounds_supported"], [90, 3, 1, "", "is_gradient_ignored"], [90, 3, 1, "", "is_gradient_required"], [90, 3, 1, "", "is_gradient_supported"], [90, 3, 1, "", "is_initial_point_ignored"], [90, 3, 1, "", "is_initial_point_required"], [90, 3, 1, "", "is_initial_point_supported"], [90, 2, 1, "", "minimize"], [90, 2, 1, "", "print_options"], [90, 2, 1, "", "set_max_evals_grouped"], [90, 2, 1, "", "set_options"], [90, 3, 1, "", "setting"], [90, 3, 1, "", "settings"], [90, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.ESCH": [[91, 3, 1, "", "bounds_support_level"], [91, 2, 1, "", "get_nlopt_optimizer"], [91, 2, 1, "", "get_support_level"], [91, 2, 1, "", "gradient_num_diff"], [91, 3, 1, "", "gradient_support_level"], [91, 3, 1, "", "initial_point_support_level"], [91, 3, 1, "", "is_bounds_ignored"], [91, 3, 1, "", "is_bounds_required"], [91, 3, 1, "", "is_bounds_supported"], [91, 3, 1, "", "is_gradient_ignored"], [91, 3, 1, "", "is_gradient_required"], [91, 3, 1, "", "is_gradient_supported"], [91, 3, 1, "", "is_initial_point_ignored"], [91, 3, 1, "", "is_initial_point_required"], [91, 3, 1, "", "is_initial_point_supported"], [91, 2, 1, "", "minimize"], [91, 2, 1, "", "print_options"], [91, 2, 1, "", "set_max_evals_grouped"], [91, 2, 1, "", "set_options"], [91, 3, 1, "", "setting"], [91, 3, 1, "", "settings"], [91, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.GSLS": [[92, 3, 1, "", "bounds_support_level"], [92, 2, 1, "", "get_support_level"], [92, 2, 1, "", "gradient_approximation"], [92, 2, 1, "", "gradient_num_diff"], [92, 3, 1, "", "gradient_support_level"], [92, 3, 1, "", "initial_point_support_level"], [92, 3, 1, "", "is_bounds_ignored"], [92, 3, 1, "", "is_bounds_required"], [92, 3, 1, "", "is_bounds_supported"], [92, 3, 1, "", "is_gradient_ignored"], [92, 3, 1, "", "is_gradient_required"], [92, 3, 1, "", "is_gradient_supported"], [92, 3, 1, "", "is_initial_point_ignored"], [92, 3, 1, "", "is_initial_point_required"], [92, 3, 1, "", "is_initial_point_supported"], [92, 2, 1, "", "ls_optimize"], [92, 2, 1, "", "minimize"], [92, 2, 1, "", "print_options"], [92, 2, 1, "", "sample_points"], [92, 2, 1, "", "sample_set"], [92, 2, 1, "", "set_max_evals_grouped"], [92, 2, 1, "", "set_options"], [92, 3, 1, "", "setting"], [92, 3, 1, "", "settings"], [92, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.GradientDescent": [[93, 2, 1, "", "ask"], [93, 3, 1, "", "bounds_support_level"], [93, 2, 1, "", "continue_condition"], [93, 2, 1, "", "create_result"], [93, 2, 1, "", "evaluate"], [93, 2, 1, "", "get_support_level"], [93, 2, 1, "", "gradient_num_diff"], [93, 3, 1, "", "gradient_support_level"], [93, 3, 1, "", "initial_point_support_level"], [93, 3, 1, "", "is_bounds_ignored"], [93, 3, 1, "", "is_bounds_required"], [93, 3, 1, "", "is_bounds_supported"], [93, 3, 1, "", "is_gradient_ignored"], [93, 3, 1, "", "is_gradient_required"], [93, 3, 1, "", "is_gradient_supported"], [93, 3, 1, "", "is_initial_point_ignored"], [93, 3, 1, "", "is_initial_point_required"], [93, 3, 1, "", "is_initial_point_supported"], [93, 2, 1, "", "minimize"], [93, 3, 1, "", "perturbation"], [93, 2, 1, "", "print_options"], [93, 2, 1, "", "set_max_evals_grouped"], [93, 2, 1, "", "set_options"], [93, 3, 1, "", "setting"], [93, 3, 1, "", "settings"], [93, 2, 1, "", "start"], [93, 3, 1, "", "state"], [93, 2, 1, "", "step"], [93, 2, 1, "", "tell"], [93, 3, 1, "", "tol"], [93, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.GradientDescentState": [[94, 3, 1, "", "fun"], [94, 3, 1, "", "jac"], [94, 3, 1, "", "learning_rate"], [94, 3, 1, "", "nfev"], [94, 3, 1, "", "nit"], [94, 3, 1, "", "njev"], [94, 3, 1, "", "stepsize"], [94, 3, 1, "", "x"]], "qiskit_algorithms.optimizers.IMFIL": [[95, 3, 1, "", "bounds_support_level"], [95, 2, 1, "", "get_support_level"], [95, 2, 1, "", "gradient_num_diff"], [95, 3, 1, "", "gradient_support_level"], [95, 3, 1, "", "initial_point_support_level"], [95, 3, 1, "", "is_bounds_ignored"], [95, 3, 1, "", "is_bounds_required"], [95, 3, 1, "", "is_bounds_supported"], [95, 3, 1, "", "is_gradient_ignored"], [95, 3, 1, "", "is_gradient_required"], [95, 3, 1, "", "is_gradient_supported"], [95, 3, 1, "", "is_initial_point_ignored"], [95, 3, 1, "", "is_initial_point_required"], [95, 3, 1, "", "is_initial_point_supported"], [95, 2, 1, "", "minimize"], [95, 2, 1, "", "print_options"], [95, 2, 1, "", "set_max_evals_grouped"], [95, 2, 1, "", "set_options"], [95, 3, 1, "", "setting"], [95, 3, 1, "", "settings"], [95, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.ISRES": [[96, 3, 1, "", "bounds_support_level"], [96, 2, 1, "", "get_nlopt_optimizer"], [96, 2, 1, "", "get_support_level"], [96, 2, 1, "", "gradient_num_diff"], [96, 3, 1, "", "gradient_support_level"], [96, 3, 1, "", "initial_point_support_level"], [96, 3, 1, "", "is_bounds_ignored"], [96, 3, 1, "", "is_bounds_required"], [96, 3, 1, "", "is_bounds_supported"], [96, 3, 1, "", "is_gradient_ignored"], [96, 3, 1, "", "is_gradient_required"], [96, 3, 1, "", "is_gradient_supported"], [96, 3, 1, "", "is_initial_point_ignored"], [96, 3, 1, "", "is_initial_point_required"], [96, 3, 1, "", "is_initial_point_supported"], [96, 2, 1, "", "minimize"], [96, 2, 1, "", "print_options"], [96, 2, 1, "", "set_max_evals_grouped"], [96, 2, 1, "", "set_options"], [96, 3, 1, "", "setting"], [96, 3, 1, "", "settings"], [96, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.L_BFGS_B": [[97, 3, 1, "", "bounds_support_level"], [97, 2, 1, "", "get_support_level"], [97, 2, 1, "", "gradient_num_diff"], [97, 3, 1, "", "gradient_support_level"], [97, 3, 1, "", "initial_point_support_level"], [97, 3, 1, "", "is_bounds_ignored"], [97, 3, 1, "", "is_bounds_required"], [97, 3, 1, "", "is_bounds_supported"], [97, 3, 1, "", "is_gradient_ignored"], [97, 3, 1, "", "is_gradient_required"], [97, 3, 1, "", "is_gradient_supported"], [97, 3, 1, "", "is_initial_point_ignored"], [97, 3, 1, "", "is_initial_point_required"], [97, 3, 1, "", "is_initial_point_supported"], [97, 2, 1, "", "minimize"], [97, 2, 1, "", "print_options"], [97, 2, 1, "", "set_max_evals_grouped"], [97, 2, 1, "", "set_options"], [97, 3, 1, "", "setting"], [97, 3, 1, "", "settings"], [97, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.NELDER_MEAD": [[99, 3, 1, "", "bounds_support_level"], [99, 2, 1, "", "get_support_level"], [99, 2, 1, "", "gradient_num_diff"], [99, 3, 1, "", "gradient_support_level"], [99, 3, 1, "", "initial_point_support_level"], [99, 3, 1, "", "is_bounds_ignored"], [99, 3, 1, "", "is_bounds_required"], [99, 3, 1, "", "is_bounds_supported"], [99, 3, 1, "", "is_gradient_ignored"], [99, 3, 1, "", "is_gradient_required"], [99, 3, 1, "", "is_gradient_supported"], [99, 3, 1, "", "is_initial_point_ignored"], [99, 3, 1, "", "is_initial_point_required"], [99, 3, 1, "", "is_initial_point_supported"], [99, 2, 1, "", "minimize"], [99, 2, 1, "", "print_options"], [99, 2, 1, "", "set_max_evals_grouped"], [99, 2, 1, "", "set_options"], [99, 3, 1, "", "setting"], [99, 3, 1, "", "settings"], [99, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.NFT": [[100, 3, 1, "", "bounds_support_level"], [100, 2, 1, "", "get_support_level"], [100, 2, 1, "", "gradient_num_diff"], [100, 3, 1, "", "gradient_support_level"], [100, 3, 1, "", "initial_point_support_level"], [100, 3, 1, "", "is_bounds_ignored"], [100, 3, 1, "", "is_bounds_required"], [100, 3, 1, "", "is_bounds_supported"], [100, 3, 1, "", "is_gradient_ignored"], [100, 3, 1, "", "is_gradient_required"], [100, 3, 1, "", "is_gradient_supported"], [100, 3, 1, "", "is_initial_point_ignored"], [100, 3, 1, "", "is_initial_point_required"], [100, 3, 1, "", "is_initial_point_supported"], [100, 2, 1, "", "minimize"], [100, 2, 1, "", "print_options"], [100, 2, 1, "", "set_max_evals_grouped"], [100, 2, 1, "", "set_options"], [100, 3, 1, "", "setting"], [100, 3, 1, "", "settings"], [100, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.Optimizer": [[101, 3, 1, "", "bounds_support_level"], [101, 2, 1, "", "get_support_level"], [101, 2, 1, "", "gradient_num_diff"], [101, 3, 1, "", "gradient_support_level"], [101, 3, 1, "", "initial_point_support_level"], [101, 3, 1, "", "is_bounds_ignored"], [101, 3, 1, "", "is_bounds_required"], [101, 3, 1, "", "is_bounds_supported"], [101, 3, 1, "", "is_gradient_ignored"], [101, 3, 1, "", "is_gradient_required"], [101, 3, 1, "", "is_gradient_supported"], [101, 3, 1, "", "is_initial_point_ignored"], [101, 3, 1, "", "is_initial_point_required"], [101, 3, 1, "", "is_initial_point_supported"], [101, 2, 1, "", "minimize"], [101, 2, 1, "", "print_options"], [101, 2, 1, "", "set_max_evals_grouped"], [101, 2, 1, "", "set_options"], [101, 3, 1, "", "setting"], [101, 3, 1, "", "settings"], [101, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.OptimizerResult": [[102, 2, 1, "", "combine"], [102, 3, 1, "", "fun"], [102, 3, 1, "", "jac"], [102, 3, 1, "", "nfev"], [102, 3, 1, "", "nit"], [102, 3, 1, "", "njev"], [102, 3, 1, "", "x"]], "qiskit_algorithms.optimizers.OptimizerState": [[103, 3, 1, "", "fun"], [103, 3, 1, "", "jac"], [103, 3, 1, "", "nfev"], [103, 3, 1, "", "nit"], [103, 3, 1, "", "njev"], [103, 3, 1, "", "x"]], "qiskit_algorithms.optimizers.POWELL": [[104, 3, 1, "", "bounds_support_level"], [104, 2, 1, "", "get_support_level"], [104, 2, 1, "", "gradient_num_diff"], [104, 3, 1, "", "gradient_support_level"], [104, 3, 1, "", "initial_point_support_level"], [104, 3, 1, "", "is_bounds_ignored"], [104, 3, 1, "", "is_bounds_required"], [104, 3, 1, "", "is_bounds_supported"], [104, 3, 1, "", "is_gradient_ignored"], [104, 3, 1, "", "is_gradient_required"], [104, 3, 1, "", "is_gradient_supported"], [104, 3, 1, "", "is_initial_point_ignored"], [104, 3, 1, "", "is_initial_point_required"], [104, 3, 1, "", "is_initial_point_supported"], [104, 2, 1, "", "minimize"], [104, 2, 1, "", "print_options"], [104, 2, 1, "", "set_max_evals_grouped"], [104, 2, 1, "", "set_options"], [104, 3, 1, "", "setting"], [104, 3, 1, "", "settings"], [104, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.P_BFGS": [[105, 3, 1, "", "bounds_support_level"], [105, 2, 1, "", "get_support_level"], [105, 2, 1, "", "gradient_num_diff"], [105, 3, 1, "", "gradient_support_level"], [105, 3, 1, "", "initial_point_support_level"], [105, 3, 1, "", "is_bounds_ignored"], [105, 3, 1, "", "is_bounds_required"], [105, 3, 1, "", "is_bounds_supported"], [105, 3, 1, "", "is_gradient_ignored"], [105, 3, 1, "", "is_gradient_required"], [105, 3, 1, "", "is_gradient_supported"], [105, 3, 1, "", "is_initial_point_ignored"], [105, 3, 1, "", "is_initial_point_required"], [105, 3, 1, "", "is_initial_point_supported"], [105, 2, 1, "", "minimize"], [105, 2, 1, "", "print_options"], [105, 2, 1, "", "set_max_evals_grouped"], [105, 2, 1, "", "set_options"], [105, 3, 1, "", "setting"], [105, 3, 1, "", "settings"], [105, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.QNSPSA": [[106, 3, 1, "", "bounds_support_level"], [106, 2, 1, "", "calibrate"], [106, 2, 1, "", "estimate_stddev"], [106, 2, 1, "", "get_fidelity"], [106, 2, 1, "", "get_support_level"], [106, 2, 1, "", "gradient_num_diff"], [106, 3, 1, "", "gradient_support_level"], [106, 3, 1, "", "initial_point_support_level"], [106, 3, 1, "", "is_bounds_ignored"], [106, 3, 1, "", "is_bounds_required"], [106, 3, 1, "", "is_bounds_supported"], [106, 3, 1, "", "is_gradient_ignored"], [106, 3, 1, "", "is_gradient_required"], [106, 3, 1, "", "is_gradient_supported"], [106, 3, 1, "", "is_initial_point_ignored"], [106, 3, 1, "", "is_initial_point_required"], [106, 3, 1, "", "is_initial_point_supported"], [106, 2, 1, "", "minimize"], [106, 2, 1, "", "print_options"], [106, 2, 1, "", "set_max_evals_grouped"], [106, 2, 1, "", "set_options"], [106, 3, 1, "", "setting"], [106, 3, 1, "", "settings"], [106, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SBPLX": [[107, 3, 1, "", "bounds_support_level"], [107, 2, 1, "", "get_nlopt_optimizer"], [107, 2, 1, "", "get_support_level"], [107, 2, 1, "", "gradient_num_diff"], [107, 3, 1, "", "gradient_support_level"], [107, 3, 1, "", "initial_point_support_level"], [107, 3, 1, "", "is_bounds_ignored"], [107, 3, 1, "", "is_bounds_required"], [107, 3, 1, "", "is_bounds_supported"], [107, 3, 1, "", "is_gradient_ignored"], [107, 3, 1, "", "is_gradient_required"], [107, 3, 1, "", "is_gradient_supported"], [107, 3, 1, "", "is_initial_point_ignored"], [107, 3, 1, "", "is_initial_point_required"], [107, 3, 1, "", "is_initial_point_supported"], [107, 2, 1, "", "minimize"], [107, 2, 1, "", "print_options"], [107, 2, 1, "", "set_max_evals_grouped"], [107, 2, 1, "", "set_options"], [107, 3, 1, "", "setting"], [107, 3, 1, "", "settings"], [107, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SLSQP": [[108, 3, 1, "", "bounds_support_level"], [108, 2, 1, "", "get_support_level"], [108, 2, 1, "", "gradient_num_diff"], [108, 3, 1, "", "gradient_support_level"], [108, 3, 1, "", "initial_point_support_level"], [108, 3, 1, "", "is_bounds_ignored"], [108, 3, 1, "", "is_bounds_required"], [108, 3, 1, "", "is_bounds_supported"], [108, 3, 1, "", "is_gradient_ignored"], [108, 3, 1, "", "is_gradient_required"], [108, 3, 1, "", "is_gradient_supported"], [108, 3, 1, "", "is_initial_point_ignored"], [108, 3, 1, "", "is_initial_point_required"], [108, 3, 1, "", "is_initial_point_supported"], [108, 2, 1, "", "minimize"], [108, 2, 1, "", "print_options"], [108, 2, 1, "", "set_max_evals_grouped"], [108, 2, 1, "", "set_options"], [108, 3, 1, "", "setting"], [108, 3, 1, "", "settings"], [108, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SNOBFIT": [[109, 3, 1, "", "bounds_support_level"], [109, 2, 1, "", "get_support_level"], [109, 2, 1, "", "gradient_num_diff"], [109, 3, 1, "", "gradient_support_level"], [109, 3, 1, "", "initial_point_support_level"], [109, 3, 1, "", "is_bounds_ignored"], [109, 3, 1, "", "is_bounds_required"], [109, 3, 1, "", "is_bounds_supported"], [109, 3, 1, "", "is_gradient_ignored"], [109, 3, 1, "", "is_gradient_required"], [109, 3, 1, "", "is_gradient_supported"], [109, 3, 1, "", "is_initial_point_ignored"], [109, 3, 1, "", "is_initial_point_required"], [109, 3, 1, "", "is_initial_point_supported"], [109, 2, 1, "", "minimize"], [109, 2, 1, "", "print_options"], [109, 2, 1, "", "set_max_evals_grouped"], [109, 2, 1, "", "set_options"], [109, 3, 1, "", "setting"], [109, 3, 1, "", "settings"], [109, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SPSA": [[110, 3, 1, "", "bounds_support_level"], [110, 2, 1, "", "calibrate"], [110, 2, 1, "", "estimate_stddev"], [110, 2, 1, "", "get_support_level"], [110, 2, 1, "", "gradient_num_diff"], [110, 3, 1, "", "gradient_support_level"], [110, 3, 1, "", "initial_point_support_level"], [110, 3, 1, "", "is_bounds_ignored"], [110, 3, 1, "", "is_bounds_required"], [110, 3, 1, "", "is_bounds_supported"], [110, 3, 1, "", "is_gradient_ignored"], [110, 3, 1, "", "is_gradient_required"], [110, 3, 1, "", "is_gradient_supported"], [110, 3, 1, "", "is_initial_point_ignored"], [110, 3, 1, "", "is_initial_point_required"], [110, 3, 1, "", "is_initial_point_supported"], [110, 2, 1, "", "minimize"], [110, 2, 1, "", "print_options"], [110, 2, 1, "", "set_max_evals_grouped"], [110, 2, 1, "", "set_options"], [110, 3, 1, "", "setting"], [110, 3, 1, "", "settings"], [110, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SciPyOptimizer": [[111, 3, 1, "", "bounds_support_level"], [111, 2, 1, "", "get_support_level"], [111, 2, 1, "", "gradient_num_diff"], [111, 3, 1, "", "gradient_support_level"], [111, 3, 1, "", "initial_point_support_level"], [111, 3, 1, "", "is_bounds_ignored"], [111, 3, 1, "", "is_bounds_required"], [111, 3, 1, "", "is_bounds_supported"], [111, 3, 1, "", "is_gradient_ignored"], [111, 3, 1, "", "is_gradient_required"], [111, 3, 1, "", "is_gradient_supported"], [111, 3, 1, "", "is_initial_point_ignored"], [111, 3, 1, "", "is_initial_point_required"], [111, 3, 1, "", "is_initial_point_supported"], [111, 2, 1, "", "minimize"], [111, 2, 1, "", "print_options"], [111, 2, 1, "", "set_max_evals_grouped"], [111, 2, 1, "", "set_options"], [111, 3, 1, "", "setting"], [111, 3, 1, "", "settings"], [111, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SteppableOptimizer": [[112, 2, 1, "", "ask"], [112, 3, 1, "", "bounds_support_level"], [112, 2, 1, "", "continue_condition"], [112, 2, 1, "", "create_result"], [112, 2, 1, "", "evaluate"], [112, 2, 1, "", "get_support_level"], [112, 2, 1, "", "gradient_num_diff"], [112, 3, 1, "", "gradient_support_level"], [112, 3, 1, "", "initial_point_support_level"], [112, 3, 1, "", "is_bounds_ignored"], [112, 3, 1, "", "is_bounds_required"], [112, 3, 1, "", "is_bounds_supported"], [112, 3, 1, "", "is_gradient_ignored"], [112, 3, 1, "", "is_gradient_required"], [112, 3, 1, "", "is_gradient_supported"], [112, 3, 1, "", "is_initial_point_ignored"], [112, 3, 1, "", "is_initial_point_required"], [112, 3, 1, "", "is_initial_point_supported"], [112, 2, 1, "", "minimize"], [112, 2, 1, "", "print_options"], [112, 2, 1, "", "set_max_evals_grouped"], [112, 2, 1, "", "set_options"], [112, 3, 1, "", "setting"], [112, 3, 1, "", "settings"], [112, 2, 1, "", "start"], [112, 3, 1, "", "state"], [112, 2, 1, "", "step"], [112, 2, 1, "", "tell"], [112, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.TNC": [[113, 3, 1, "", "bounds_support_level"], [113, 2, 1, "", "get_support_level"], [113, 2, 1, "", "gradient_num_diff"], [113, 3, 1, "", "gradient_support_level"], [113, 3, 1, "", "initial_point_support_level"], [113, 3, 1, "", "is_bounds_ignored"], [113, 3, 1, "", "is_bounds_required"], [113, 3, 1, "", "is_bounds_supported"], [113, 3, 1, "", "is_gradient_ignored"], [113, 3, 1, "", "is_gradient_required"], [113, 3, 1, "", "is_gradient_supported"], [113, 3, 1, "", "is_initial_point_ignored"], [113, 3, 1, "", "is_initial_point_required"], [113, 3, 1, "", "is_initial_point_supported"], [113, 2, 1, "", "minimize"], [113, 2, 1, "", "print_options"], [113, 2, 1, "", "set_max_evals_grouped"], [113, 2, 1, "", "set_options"], [113, 3, 1, "", "setting"], [113, 3, 1, "", "settings"], [113, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.TellData": [[114, 3, 1, "", "eval_fun"], [114, 3, 1, "", "eval_jac"]], "qiskit_algorithms.optimizers.UMDA": [[115, 3, 1, "", "ELITE_FACTOR"], [115, 3, 1, "", "STD_BOUND"], [115, 3, 1, "", "alpha"], [115, 3, 1, "", "bounds_support_level"], [115, 2, 1, "", "get_support_level"], [115, 2, 1, "", "gradient_num_diff"], [115, 3, 1, "", "gradient_support_level"], [115, 3, 1, "", "initial_point_support_level"], [115, 3, 1, "", "is_bounds_ignored"], [115, 3, 1, "", "is_bounds_required"], [115, 3, 1, "", "is_bounds_supported"], [115, 3, 1, "", "is_gradient_ignored"], [115, 3, 1, "", "is_gradient_required"], [115, 3, 1, "", "is_gradient_supported"], [115, 3, 1, "", "is_initial_point_ignored"], [115, 3, 1, "", "is_initial_point_required"], [115, 3, 1, "", "is_initial_point_supported"], [115, 3, 1, "", "maxiter"], [115, 2, 1, "", "minimize"], [115, 2, 1, "", "print_options"], [115, 2, 1, "", "set_max_evals_grouped"], [115, 2, 1, "", "set_options"], [115, 3, 1, "", "setting"], [115, 3, 1, "", "settings"], [115, 3, 1, "", "size_gen"], [115, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.optimizer_utils": [[117, 1, 1, "", "LearningRate"]], "qiskit_algorithms.optimizers.optimizer_utils.LearningRate": [[117, 2, 1, "", "close"], [117, 3, 1, "", "current"], [117, 2, 1, "", "send"], [117, 2, 1, "", "throw"]], "qiskit_algorithms.state_fidelities": [[118, 1, 1, "", "BaseStateFidelity"], [119, 1, 1, "", "ComputeUncompute"], [120, 1, 1, "", "StateFidelityResult"]], "qiskit_algorithms.state_fidelities.BaseStateFidelity": [[118, 2, 1, "", "create_fidelity_circuit"], [118, 2, 1, "", "run"]], "qiskit_algorithms.state_fidelities.ComputeUncompute": [[119, 2, 1, "", "create_fidelity_circuit"], [119, 2, 1, "", "run"], [119, 3, 1, "", "shots"]], "qiskit_algorithms.state_fidelities.StateFidelityResult": [[120, 3, 1, "", "fidelities"], [120, 3, 1, "", "metadata"], [120, 3, 1, "", "raw_fidelities"], [120, 3, 1, "", "shots"]], "qiskit_algorithms.time_evolvers": [[5, 0, 0, "-", "variational"]], "qiskit_algorithms.time_evolvers.variational": [[121, 1, 1, "", "ForwardEulerSolver"], [122, 1, 1, "", "ImaginaryMcLachlanPrinciple"], [123, 1, 1, "", "ImaginaryVariationalPrinciple"], [124, 1, 1, "", "RealMcLachlanPrinciple"], [125, 1, 1, "", "RealVariationalPrinciple"], [126, 1, 1, "", "VariationalPrinciple"]], "qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver": [[121, 3, 1, "", "TOO_SMALL_STEP"], [121, 3, 1, "", "step_size"]], "qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple": [[122, 2, 1, "", "evolution_gradient"]], "qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple": [[124, 2, 1, "", "evolution_gradient"]], "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple": [[126, 2, 1, "", "evolution_gradient"], [126, 3, 1, "", "gradient"], [126, 2, 1, "", "metric_tensor"], [126, 3, 1, "", "qgt"]], "qiskit_algorithms.utils": [[6, 0, 0, "-", "algorithm_globals"]], "qiskit_algorithms.utils.algorithm_globals": [[6, 3, 1, "", "random"], [6, 3, 1, "", "random_seed"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception"}, "terms": {"": [3, 7, 9, 11, 15, 22, 24, 26, 29, 31, 32, 36, 40, 42, 45, 49, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 97, 98, 100, 106, 107, 112, 118, 119, 122, 124, 127, 128, 129, 130, 131, 134, 135, 136, 137], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "00": [132, 134, 135, 136], "000": 133, "00000000e": [135, 136], "0001": [99, 104], "0005055": [15, 22, 24, 29, 32, 132], "00071": 129, "001": [82, 136], "001100": 137, "00178893": 134, "002689j": 137, "00609873": 134, "00638458": 134, "00745": 83, "00811432": 137, "00918": 129, "00946808": 134, "00951318": 134, "00962316": 134, "0097479079521183": 135, "0097479079521197": 135, "00975647": 134, "009_ask_and_tel": [93, 112], "00j": 135, "01": [40, 60, 61, 92, 93, 128, 132, 134, 135, 136, 137], "01037215": 134, "011": 133, "01128010425623538": [115, 127, 128, 129, 130], "01276915": 134, "01332": 92, "01647088": 134, "01893616": 134, "01915373": 134, "01924631": 134, "01951295": 134, "01_algorithms_introduct": 127, "01j": [135, 136], "02": 134, "0207443": 134, "023780107498168945": 128, "02417": 22, "02553831": 134, "02684303": 134, "02823": 77, "02840425": 134, "02886947": 134, "02895926": 137, "02926942": 134, "02991": 78, "02_vqe_advanced_opt": 128, "03": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "03111646": 134, "03116953": 134, "03192288": 134, "032309": 83, "032331": 83, "034007": 45, "03452755": 134, "03489": 45, "03721519": 134, "03787233": 134, "03830746": 134, "03849263": 134, "03902589": 134, "03_vqe_simulation_with_nois": 129, "04": [110, 134], "04088": 132, "04146339": 134, "04148861": 134, "04469204": 134, "04677262": 127, "04677262492578556": 127, "04691844": 127, "046918441129523": 127, "04734041": 134, "04769": 49, "04811579": 134, "04878237": 134, "04_vqd": 130, "05": [10, 15, 86, 134, 136], "05018v2": 110, "05107662": 134, "05186076": 134, "052373245772859": [115, 127, 128, 129, 130], "05559": [15, 22, 29], "05680849": 134, "05746119": 134, "05773894": 134, "05853884": 134, "05_qaoa": 131, "06": [15, 82, 83, 92, 108, 134], "0610214": 31, "06223291": 134, "06384577": 134, "06433216": 134, "06627658": 134, "06703079": 134, "0673621": 134, "06829532": 134, "06_grover": 132, "07": [60, 61, 93, 134], "07023035": 134, "07260506": 134, "07312552": 134, "07574466": 134, "07661492": 134, "07698526": 134, "07805179": 134, "07_grover_exampl": 133, "08": [82, 86, 92, 97, 108, 113, 134], "08297721": 134, "0829995": 134, "08521274": 134, "08660841": 134, "08738739j": 137, "08780826": 134, "089342235489793": 127, "08934224": 127, "08938408": 134, "09": 134, "091": 5, "09232": 106, "09237": 82, "09294783": 128, "092947832766964": 128, "09334937": 134, "09468082": 134, "09576865": 134, "09623157": 134, "09697": 26, "09756474": 134, "09768317": 134, "09928329": 134, "0_i": 119, "0qiskit_aer0": [131, 132], "0system": [127, 128, 129, 130, 133, 134, 135, 136, 137], "0x7f8d7144d5a0": 134, "0x7fd55d6660e0": 128, "0x7fd55d6cde40": 128, "0x7fd5b43ba740": 128, "0x7fd5b43bace0": 128, "0x7fe418327340": 127, "0x7fe4183273d0": 127, "0x7fe41a42ee30": 127, "0x7fe41a56b430": 127, "0x7fe46842bbb0": 127, "0x7fe468462230": 127, "1": [5, 10, 15, 16, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 36, 40, 42, 43, 44, 45, 49, 55, 56, 58, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "10": [79, 80, 82, 83, 92, 106, 109, 110, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "100": [40, 93, 97, 105, 106, 108, 110, 112, 113, 115, 127, 128, 134, 137], "1000": [83, 85, 87, 88, 89, 90, 91, 95, 96, 99, 104, 105, 107, 109, 127, 128], "10000": [82, 92], "10008343": 134, "1001": 135, "10033367": 134, "10075063": 134, "10095": 45, "100_000": 136, "101": [9, 106, 110, 133, 137], "10133412": 134, "102": 137, "10208391": 134, "10215323": 134, "1024": 100, "10246": 32, "10297441482543945": 127, "10299967": 134, "10372152": 134, "10408103": 134, "1041489": 134, "10448386": 134, "10532751": 134, "10585473": 134, "10598": 131, "1067386": 134, "10732121": 134, "10831369": 134, "10853781": 134, "10_000": 134, "10_pvqd": 134, "10th": 42, "11": [127, 128, 129, 130, 131, 132, 134, 135, 136, 137], "110": 132, "1100521": 134, "1109": [79, 80], "111": 132, "11184": [69, 70, 71, 83], "11195309": 134, "11326v2": 119, "11361699": 134, "11401582": 134, "11409367": 134, "1145": 115, "11492238": 134, "11547789": 134, "11623941": 134, "11707768": 134, "11862286": 134, "11_varqt": 135, "12": [9, 53, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137], "12116513": 134, "12130696": 134, "12166": 100, "12308507": 134, "12386509": 134, "12446582": 134, "125": 129, "12510104": 134, "12672152": 134, "12683416": 134, "12769154": 134, "12973312": 134, "12_gradients_framework": 136, "13": [9, 127, 128, 129, 132, 134, 135, 136, 137], "1301594477013905": 127, "13015945": 127, "1304": 58, "13120664": 134, "13126979": 134, "13255315": 134, "13289852": 134, "13345": 131, "13407611": 134, "1347242": 134, "13483797": 134, "13552284": 134, "13621626": 134, "13659063": 134, "13968479": 134, "13_trotterqrt": 137, "14": [9, 129, 132, 134, 135, 136, 137], "14046069": 134, "1411": 45, "1412": 82, "1417": 110, "14202123": 134, "1424": 110, "14330249": 134, "14434736": 134, "14521013": 134, "1463471": 134, "14684527": 134, "14706763": 134, "15": [97, 105, 121, 132, 134, 135, 137], "15000": 97, "1509784": 134, "15148932": 134, "15322985": 134, "15397051": 134, "15503292": 134, "15558228": 134, "15569019317626953": 128, "15610358": 134, "15922918": 134, "15961442": 134, "16": [132, 134, 135, 136, 137], "1609574": 134, "16297525": 134, "16356511": 134, "16359367": 134, "16488654": 134, "16586005": 134, "16595443": 134, "165999": 134, "16622702": 134, "16803853": 134, "17": [127, 129, 131, 132, 134, 135, 136, 137], "170": [129, 137], "1704": 110, "17042548": 134, "1709": 45, "17238358": 134, "17264717": 134, "17321683": 134, "17561653": 134, "17632658": 134, "17738865": 134, "17876815": 134, "17989356": 134, "17j": 135, "18": [132, 134, 135, 137], "180": 137, "1803": 83, "1804": 119, "1809": 26, "18093119978423156": [115, 127, 128, 129, 130], "1811": [69, 70, 71, 83], "18226052": 134, "18283999": 134, "1839": [79, 80], "18515273": 134, "1853": [79, 80], "185373": 134, "18669873": 134, "1872602": 134, "18936164": 134, "18oslinuxw": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "19": [110, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "1903": 100, "1904": [32, 82], "1905": 92, "1907": 49, "191": 135, "1912": [15, 22, 29, 132], "19153731": 134, "19238503": 134, "19246314": 134, "19438475": 134, "19512947": 134, "1954": 137, "19658112": 134, "19671483": 127, "196714834986046": 127, "19707089": 134, "19763223": 134, "19792188": 134, "19870674": 134, "19882973": 134, "1996": [24, 132], "1997": 110, "1998": 110, "19j": 136, "1d": 92, "1e": [9, 10, 15, 53, 60, 61, 82, 83, 86, 92, 93, 97, 108, 113, 127, 129, 137], "1j": [134, 137], "1qiskit_algorithms0": [127, 129], "1system": [131, 132], "2": [5, 15, 22, 24, 26, 29, 31, 32, 40, 42, 43, 44, 45, 49, 56, 58, 63, 69, 72, 82, 93, 97, 105, 106, 109, 110, 112, 113, 115, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "20": [86, 93, 112, 115, 132, 134, 135, 136, 137], "200": [110, 127], "2000": [15, 22, 24, 29, 32, 79, 80, 132], "2002": 22, "2005": 137, "2006": 31, "2009": [45, 77], "2011": [42, 78], "2013": 137, "2014": 82, "2017": [110, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "2018": [69, 70, 71, 82, 83], "2019": [15, 22, 29, 32, 83, 100, 119], "2020": [22, 77, 78, 79, 80], "2020863": 134, "2021": [40, 134], "2022": 115, "2024": 9, "2025": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "20299893": 134, "20430646": 134, "20488595": 134, "20744304": 134, "20829781": 134, "20848215": 134, "209": 119, "20_recip": [93, 112], "21": [132, 134, 135, 137], "2103": 106, "21069104": 134, "21170946": 134, "212": [119, 132], "21407882": 134, "21464242": 134, "21707561": 134, "21776589": 134, "21781519": 134, "219": 132, "21978573": 134, "22": [132, 134, 135, 137], "220446049250313e": [97, 105], "22133261": 134, "22346019": 134, "22439889": 134, "2252": 5, "22548357": 134, "2255996": 134, "22657003": 134, "22723397": 134, "22818734": 134, "22984477": 134, "23": [132, 134, 135, 137], "23095577": 134, "23151701": 134, "23265099": 134, "23415537": 134, "23622935": 134, "23670206": 134, "23753446": 134, "23855949": 134, "24": [109, 132, 134, 135, 137], "24057893": 134, "24261392": 134, "24364832": 134, "24391184": 134, "24458455": 130, "24519007": 130, "246": 110, "24617014": 134, "24893164": 134, "2489985": 134, "24985486": 134, "25": [9, 83, 106, 110, 127, 134, 135, 137], "25000000e": 136, "25020209": 134, "25060864": 127, "250608642026019": 127, "25265130662141283": 127, "25265131": 127, "25366832": 134, "25538308": 134, "25563822": 134, "25615024": 134, "2561788": 134, "25625717": 134, "2593038": 134, "25982524": 134, "26": [134, 135], "26176765": 134, "26253049": 134, "26281135": 127, "2628113522144826": 127, "26342479": 134, "265": 137, "2651063": 134, "26670297": 134, "26815223": 134, "26899156": 134, "2694484": 134, "26967595": 134, "27": [134, 135, 137], "27318126": 134, "27453681": 134, "27457439": 134, "27552927": 134, "27907156": 134, "28": 134, "2800481": 134, "28092138": 134, "28213934": 134, "28293774": 134, "28404247": 134, "28539266": 134, "2866912": 134, "28730596": 134, "28869471": 134, "28881735": 134, "28th": 132, "29": 134, "29042025": 134, "29269421": 134, "29351055": 134, "29369054": 134, "29555882": 134, "29651945": 128, "296519450348767": 128, "29831787": 134, "2d": 92, "2e": [67, 68], "2nd": 137, "2p": 45, "2x": 136, "3": [10, 22, 24, 45, 110, 115, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137], "30": [115, 128, 137], "300": [106, 110], "30007511": 134, "3007924": 134, "3008463": 134, "30235911": 134, "30245068": 134, "30297863": 134, "3061": 58, "30645969": 134, "30794103": 134, "30921351": 134, "31": 134, "31116456": 134, "31187756j": 137, "31220716": 134, "31244671": 134, "31284427": 134, "31419704": 134, "31611717": 134, "3167715": 134, "31756419": 134, "31922884": 134, "32": [100, 134], "32153671": 134, "3219148": 134, "32196363": 134, "32306515": 134, "32561342": 134, "32718734": 134, "33": [134, 135], "33005241": 134, "33138288": 134, "3317201": 134, "33190886": 134, "331998": 134, "33506448": 134, "3368105": 134, "33707378": 134, "33838258": 134, "34": [134, 137], "34085096": 134, "34147658": 134, "34228101": 134, "34257753": 134, "3435": 5, "34412402": 134, "34476715": 134, "34643366": 134, "34648412": 134, "35": 129, "35000000000000003": 134, "35031904": 134, "35115173": 134, "35119775": 134, "35123305": 134, "3520304": 115, "35265316": 134, "3533963": 115, "354085": 136, "35605681": 134, "35753631": 134, "35828952": 134, "35978713": 134, "36": 134, "36021017": 128, "36021017470900696": 128, "36091734": 127, "360917340032191": 127, "36098953": 134, "36302532": 134, "36392088": 134, "36539376": 134, "36567997": 134, "36925521": 134, "36934099": 134, "36th": 110, "37": [134, 135, 137], "37030546": 134, "37051997": 134, "370746": 134, "37250481": 134, "37339747": 134, "37530313": 134, "37581534": 134, "37669004": 134, "37872329": 134, "37961694": 134, "38": 134, "38050247": 134, "38268343": 137, "38307461": 134, "38376962": 134, "38492629": 134, "38672429": 134, "38819137": 134, "38945919": 134, "39": [127, 128, 129, 132, 134, 136, 137], "39025895": 134, "39382093": 134, "39414177": 134, "39454944": 134, "39584377": 134, "39765945": 134, "39793742484318045": [115, 127, 128, 129, 130], "39801036": 134, "3qiskit_aer0": [127, 129], "3qiskit_algorithms0": [128, 130, 131, 132, 133, 134, 135, 136, 137], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "40001542": 134, "40090084": 134, "40222834": 134, "4028": 45, "40365923": 134, "4041726": 134, "40451392": 134, "40475162": 134, "40712754": 134, "40795792": 134, "40861292": 134, "40939552": 127, "4093955213233516": 127, "40977189": 134, "41000000000000003": 134, "41379576": 134, "41421333": 136, "41421356": 136, "41488607": 134, "41498599": 134, "4149975": 134, "41659562": 134, "41887871": 127, "4188787133348249": 127, "41952837": 134, "42": [130, 131, 134, 136], "42138208": 134, "4219788": 134, "42341891": 134, "42503495": 134, "42525823": 134, "42535972595214844": 127, "4260637": 134, "426962358395508": 128, "42696236": 128, "42776665": 134, "42892999": 134, "42928484": 134, "43": [134, 136], "43304207": 134, "43327968": 134, "43415123": 134, "4347": 5, "43553178": 134, "43563038": 134, "43583319": 134, "43800256": 134, "43904131": 134, "44": 134, "44053581": 134, "44142500693458986": 127, "44142501": 127, "44266523": 134, "44268191": 134, "44499987": 134, "44600253": 134, "44692038": 134, "44879779": 134, "44946964": 134, "45": [79, 80, 127, 134], "4515802": 134, "45228839": 134, "45330496": 134, "45446795": 134, "45618978": 134, "45637468": 134, "45855426": 134, "45968954": 134, "46": [9, 134], "46138645": 134, "46191154": 134, "46283569": 134, "46393603": 134, "46607411": 134, "46674683": 134, "46831074": 134, "46940069": 134, "47000000000000003": 134, "4715347": 134, "47235432": 134, "47245869": 134, "47340411": 134, "47587805": 134, "47711899": 134, "47763282": 134, "47806721": 134, "47884327": 134, "48": [131, 134], "48115786": 134, "482": 110, "482261": 134, "48287219": 134, "48522784": 134, "48749114": 134, "48782368": 134, "48854274": 134, "4890591": 134, "49": 134, "4901161193847656e": [86, 108], "49078101": 134, "49161242": 134, "492": 110, "49234028": 134, "49412973": 127, "4941297315850157": 127, "49471642": 134, "49758016": 134, "49786329": 134, "497997": 134, "4th": 137, "5": [10, 29, 40, 45, 93, 110, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "50": [92, 115, 128, 136, 137], "50000000e": 136, "50040417": 134, "50077521": 134, "501": 135, "50180836": 134, "50274614e": 136, "50317973": 134, "50438157": 134, "50669779": 134, "50671223": 134, "50733663": 134, "50823544": 134, "51": 134, "51002733": 134, "51076615": 134, "51127644": 134, "512": [40, 134], "5125206": 134, "5170931": 134, "51715073": 134, "51819342": 134, "51860759": 134, "51965049": 134, "52": [132, 134], "52074452": 134, "52353531": 134, "52372381": 134, "52684958": 134, "52820812": 134, "52897974": 134, "52910489": 134, "52927364": 134, "52991988": 134, "53": [134, 137], "53021261": 134, "53432978": 134, "53630446": 134, "53660605": 134, "5388968": 134, "5393519": 134, "53939164": 134, "53968069": 134, "54": [127, 129, 131, 132, 134], "54101626": 134, "54268904": 134, "54428363": 134, "54636253": 134, "54707776": 128, "5470777607660052": 128, "54851996": 134, "54884100e": 136, "54899896": 134, "549": 110, "54907361": 134, "54914877": 134, "54972405": 134, "55": [134, 137], "55111512e": 135, "55270542": 134, "55353088": 134, "55545819": 134, "556119": 134, "55787267": 134, "55814311": 134, "55861685": 134, "56": [133, 134], "5600962": 134, "56184277": 134, "56201767": 134, "56587547": 134, "56595928": 134, "567": 119, "56776627": 134, "56808493": 134, "56822734": 134, "5683250498282177": 128, "56832505": 128, "56969095": 134, "57": [127, 128, 129, 130, 131, 132, 133], "5700000000000001": 134, "57046835": 134, "5716": 5, "57320623": 134, "57461192": 134, "575293": 134, "57563195": 134, "57649872": 134, "57665933": 134, "57738943": 134, "57755302": 134, "57956212": 134, "58": 134, "5808405": 134, "5809965": 134, "58239023": 134, "58497693": 134, "58538842": 134, "58701259": 134, "5870211": 134, "58738107": 134, "59": 134, "59121266": 134, "59376565": 134, "59514489": 134, "59648918": 134, "59663574": 134, "59832665": 128, "598326651673286": 128, "5f": [128, 129], "6": [24, 93, 109, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "60": [115, 128, 137], "6000578": 134, "60015023": 134, "60114156": 127, "601141564620746": 127, "60158481": 134, "602": [106, 110, 134], "60490137": 134, "60595726": 134, "6062589": 134, "60653481": 134, "60951126": 134, "61": [134, 137], "61195696": 134, "61291938": 134, "61465784": 134, "61542535": 134, "61588206": 134, "61930396": 134, "62": 134, "62232911": 134, "62288908": 134, "62441431": 134, "62489343": 134, "62550521": 134, "62568854": 134, "63": 134, "63207311": 134, "63270126": 134, "63417079": 134, "63436151": 134, "63512837": 134, "63845769": 134, "64": 134, "64246458": 127, "6424645845042996": 127, "64307342": 134, "64365431": 134, "64382959": 134, "64392726": 134, "64475153": 134, "64514168": 134, "649": 137, "65": 134, "65329767": 134, "65344557": 134, "65368374": 134, "65437469": 134, "66": 134, "66276576": 134, "66344021": 134, "6635256855144047": 127, "66352569": 127, "66381772": 134, "66399784": 134, "66431534848416": 127, "66431535": 127, "66533454e": 135, "66680439": 134, "67": [134, 137], "67223384": 134, "673": 137, "67319668": 134, "673621": 134, "67418987": 134, "67770545": 134, "68": [134, 137], "68170192": 134, "68295316": 134, "68324416": 134, "68456202": 134, "6878663": 134, "6900000000000001": 134, "69117": 134, "69270963": 134, "69286731": 134, "69493417": 134, "6980": 82, "7": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "7000000000000001": 134, "70063809": 134, "7024661": 134, "70249047": 134, "70530633": 134, "70710631": 136, "70710666": 136, "70710678": 136, "70831682": 134, "71": 134, "71010617": 134, "71164799": 134, "71211363": 134, "71222258": 134, "71567848": 134, "717616147449723": 128, "71761615": 128, "71957425": 134, "72": 134, "72173679": 134, "72197905": 134, "72605063": 134, "72814562": 134, "72904233": 134, "73": 134, "73135994": 134, "73173552": 134, "735a": 127, "73642278": 134, "73851041": 134, "74": 134, "7409831": 134, "741492": 134, "74546526": 134, "74679493": 134, "74734271": 134, "7479785": 134, "75": 134, "75060626": 134, "75124847": 134, "75686535e": 136, "75716709": 134, "75744658": 134, "76": 134, "76022941": 134, "76100495": 134, "76589842": 134, "76691466": 134, "76753924": 134, "76776695e": 136, "76985257": 134, "77": 134, "77076142": 134, "7747": 119, "77638274": 134, "77791139": 134, "77914066": 134, "77938109": 127, "779381093605483": 127, "77947573": 134, "78": 134, "78051789": 134, "78380336": 134, "78585083": 134, "78828354": 134, "78909889": 134, "79": 134, "79027437": 134, "79531891": 134, "79865569": 134, "79872204": 134, "8": [9, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137], "80": [128, 134], "80003084": 134, "80104852": 134, "80478699": 134, "8083452": 134, "80902785": 134, "80978731": 134, "81": 134, "81265762": 134, "81425507": 134, "81762517": 134, "81796836": 134, "8194": 134, "81954379": 134, "8199999999071228": 136, "8199999999902006": 136, "8200000000000001": 134, "82372316": 134, "82759151": 134, "82930026": 134, "82977215": 134, "8300000000000001": 134, "83227805658591": 127, "83227806": 127, "83319124": 134, "83352495": 134, "83721467": 134, "83905674": 134, "84": 134, "8401443": 134, "84265932": 134, "84599964": 134, "8462038084902009": 127, "84620381": 127, "84683783": 134, "84873982": 134, "84881321": 134, "85": 134, "85051645": 134, "8521274": 134, "85646099": 134, "85727": 127, "857274975005136": 127, "85727501": 130, "8572750175655812": 128, "85727503": [130, 136], "85728": [128, 129], "85798": 129, "85856968": 134, "86": 134, "8608886": 134, "86159548": 134, "86326209": 134, "865991232447525": 127, "86608414": 134, "86645": 129, "86832616": 134, "8684914773209087": 127, "8690758455243723": 127, "86907585": 127, "87": 134, "87106357": 134, "87126076": 134, "8757073": 134, "87708442": 134, "87808263": 134, "87915027": 134, "88": 134, "88053165": 134, "880982": [79, 80], "88163291": 134, "88272215": 130, "8838798": 130, "88533046": 134, "8878391": 134, "88999973": 134, "89": 134, "89019982": 134, "89200506": 134, "89495361": 134, "89759558": 134, "89946781": 134, "9": [82, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137], "90237721": 134, "90260165": 134, "90457677": 134, "90653688": 127, "90653688450011": 127, "90735205": 134, "9089359": 134, "9098813533782959": 127, "91": 134, "91209317": 134, "91274936": 134, "91419993": 134, "91428364": 134, "91710852": 134, "91840398": 134, "92": 134, "92312152": 134, "92382309": 134, "92387953": 137, "92523988": 134, "926865": 134, "92787206": 134, "93": 134, "93344624": 134, "93349367": 134, "93546482": 134, "93662147": 134, "93734014": 134, "9400000000000001": 134, "9411211": 137, "9430694": 134, "94386582": 134, "94481206": 134, "94495328": 134, "94637795": 134, "94680822": 134, "95": [16, 18, 23, 30, 33], "9500000000000001": 134, "95014457": 127, "9501445709840155": 127, "95269256": 134, "95370047": 134, "95423797": 134, "95613442": 134, "96": 134, "9605034": [24, 132], "9605043": [24, 132], "96170194": 134, "96231571": 134, "96461012": 134, "96589089": 134, "96895365": 134, "97": 134, "97498227": 134, "97545192": 134, "97564737": 134, "97729075": 134, "98": [83, 134, 137], "98119346": 134, "98535443": 134, "98617535": 134, "99": [82, 83, 97, 105, 134], "99039509": 134, "99385052": 134, "99572658": 134, "99653989": 134, "9969700897864191": 127, "99697009": 127, "99846185": 134, "99961541": 134, "A": [9, 12, 13, 15, 21, 22, 24, 26, 27, 29, 31, 32, 34, 38, 40, 42, 43, 44, 45, 47, 49, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 86, 87, 92, 93, 97, 99, 100, 104, 105, 106, 108, 110, 111, 112, 113, 115, 118, 119, 126, 128, 129, 131, 132, 137], "AND": 133, "And": [44, 130, 133, 134, 137], "As": [9, 110, 127, 129, 130, 132, 133, 134, 135, 136, 137], "At": [9, 134], "BY": 85, "But": [44, 127, 131, 132, 134], "By": [13, 77, 78, 87, 106, 110, 128, 129, 132, 137], "For": [0, 1, 9, 19, 24, 31, 34, 36, 38, 42, 44, 53, 55, 56, 58, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "If": [7, 9, 10, 13, 15, 19, 21, 22, 24, 26, 27, 29, 31, 32, 34, 36, 38, 40, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 86, 92, 93, 97, 99, 104, 105, 106, 109, 110, 112, 113, 115, 118, 119, 122, 124, 126, 130, 132, 137], "In": [9, 10, 26, 32, 40, 42, 43, 44, 48, 49, 88, 93, 95, 100, 110, 112, 115, 127, 128, 129, 130, 131, 132, 133, 135, 137], "Ising": [0, 40, 127, 131, 134, 135, 137], "It": [10, 13, 21, 29, 43, 44, 49, 56, 58, 60, 61, 70, 86, 93, 94, 96, 99, 106, 110, 112, 113, 121, 122, 124, 126, 127, 131, 132, 133, 134], "Its": 136, "NOT": 133, "OR": 83, "Of": 9, "On": [24, 82, 137], "One": 5, "Or": 133, "Such": 127, "That": [21, 117, 132], "The": [0, 3, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 137], "Then": [44, 106, 129, 132, 135, 136], "There": [0, 26, 127, 128, 130, 136, 137], "These": [0, 9, 11, 20, 35, 37, 39, 41, 45, 48, 49, 50, 54, 56, 57, 58, 59, 62, 112, 127, 136, 137], "To": [3, 15, 24, 93, 106, 110, 112, 127, 128, 132, 137], "Will": 117, "With": [5, 24, 127, 133, 134, 137], "_": [10, 64, 70, 74, 131, 135], "_0": 24, "__": 127, "__call__": 110, "__init__": 110, "__name__": 128, "__str__": 9, "_bound_support_level": 101, "_count": 130, "_f": 24, "_gradient_support_level": 101, "_imaginary_": 5, "_initial_point_support_level": 101, "_option": 92, "_real_": 5, "_valu": 130, "a_j": 137, "a_k": [106, 110], "ab": [24, 83, 100, 128, 132], "abc": [14, 17, 19, 28, 34, 46, 47, 63, 64, 65, 74, 84, 101, 114, 118, 123, 125, 126], "abil": 137, "abl": [82, 115, 127, 129, 137], "about": [7, 9, 10, 13, 24, 66, 75, 76, 81, 93, 112, 120, 132, 135, 136], "abov": [9, 49, 56, 58, 92, 109, 127, 128, 129, 131, 132, 133, 135, 136, 137], "absenc": 93, "absolut": [10, 26, 44, 99], "abstract": [14, 17, 19, 28, 34, 46, 47, 101, 112, 118, 123, 126, 136], "acceler": 110, "accept": [9, 60, 61, 99, 104, 106, 110], "access": [7, 9, 43, 45, 49, 56, 58, 117, 129], "accompani": 132, "accord": [5, 9, 26, 32, 112, 122, 124, 126, 127], "accordingli": [9, 112], "account": 110, "accumul": 137, "accur": [99, 132, 137], "accuraci": [15, 31, 87, 106, 113, 135, 137], "achiev": [40, 60, 61, 106, 131], "across": [6, 42], "act": [0, 13, 21, 24, 42, 136, 137], "action": 24, "activ": [9, 12, 97, 105], "actual": [9, 26, 44, 127, 131, 132, 133], "ad": [9, 27, 106, 110, 129], "adam_param": 82, "adapt": [10, 79, 80, 82, 93, 99, 110, 132], "adapt_vq": [9, 10], "adaptvq": [9, 11], "adaptvqeresult": 10, "add": [9, 93, 110, 129, 132], "addit": [7, 9, 10, 12, 15, 22, 27, 32, 42, 66, 75, 76, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 120, 130, 132, 133], "addition": [9, 110, 132, 136], "address": [9, 137], "adjac": 131, "adjust": 132, "advanc": [112, 132], "aer": 127, "aerestim": 129, "affect": 45, "afford": 9, "after": [9, 16, 18, 23, 24, 30, 33, 44, 55, 62, 82, 92, 106, 109, 110, 113, 132, 134, 137], "afterward": 40, "again": [128, 129, 135, 137], "aggreg": [45, 49], "agre": 133, "aim": [122, 124, 136, 137], "al": [22, 24, 31, 45, 58, 69, 70, 71, 106, 110, 132, 134, 135, 136], "algebra": 137, "algo_migr": 9, "algorithm": [1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 32, 34, 36, 38, 40, 41, 42, 43, 45, 49, 53, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 128, 129, 134, 135, 136], "algorithm_glob": [9, 92, 105, 106, 110, 115, 128, 129, 130, 131], "algorithmerror": [9, 10, 15, 22, 24, 29, 31, 32, 42, 83, 109, 122, 124, 126], "algorithmjob": [63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 118, 119], "algorithmresult": [9, 18, 20, 27, 35, 48, 54, 102], "algorithms_glob": 9, "align": 136, "all": [0, 3, 9, 10, 13, 17, 21, 24, 25, 26, 31, 41, 42, 43, 44, 49, 56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 93, 94, 98, 101, 106, 110, 112, 118, 119, 122, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "allow": [0, 7, 9, 15, 19, 22, 24, 26, 29, 31, 32, 34, 36, 38, 40, 42, 45, 49, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 88, 89, 90, 91, 96, 99, 104, 105, 106, 107, 110, 112, 113, 118, 119, 121, 128, 129, 132, 136], "allowed_increas": [106, 110], "almost": [130, 137], "along": [9, 11, 15, 50, 57, 59, 104, 130], "alongsid": 137, "alpha": [15, 29, 30, 32, 45, 49, 106, 110, 115, 137], "alpha_str": 137, "alreadi": [9, 42, 82, 115, 128, 130], "also": [0, 3, 5, 9, 10, 40, 45, 48, 49, 56, 58, 70, 90, 94, 97, 103, 105, 106, 110, 112, 113, 117, 118, 119, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "alter": [9, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "altern": [9, 24, 45, 121, 131], "although": [26, 44], "alwai": 118, "among": [3, 38, 110, 127, 128], "amount": [60, 61, 93, 97, 136], "amplif": [0, 13, 14, 15, 22, 24, 29, 32], "amplifi": [14, 24, 132, 133], "amplification_problem": [14, 24], "amplificationproblem": [9, 14, 24, 25, 132, 133], "amplificationresult": 14, "amplitud": [13, 15, 16, 17, 18, 21, 22, 23, 24, 29, 30, 32, 33, 42, 127], "amplitude_amplifi": 132, "amplitudeamplifi": 24, "amplitudeamplifierresult": [14, 25], "amplitudeestim": [9, 16, 21, 22, 29, 32], "amplitudeestimationresult": 15, "amplitudeestimatorresult": [16, 17, 23, 30, 33], "amplitudes_dict": 137, "amsgrad": 82, "an": [0, 3, 5, 6, 9, 10, 13, 15, 17, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 86, 91, 92, 93, 94, 95, 96, 97, 99, 102, 106, 110, 112, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "analog": 136, "analyt": [69, 70, 71, 72, 73, 82, 83, 93, 106, 136], "angl": [23, 30, 31, 33, 137], "ani": [0, 9, 11, 13, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 93, 102, 103, 106, 107, 108, 111, 118, 119, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "anneal": [45, 137], "anniversari": 42, "annual": 132, "anoth": [24, 44, 101, 112, 131, 132, 137], "ansatz": [5, 9, 10, 40, 45, 48, 49, 50, 53, 56, 58, 60, 61, 106, 110, 122, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136], "ansatz1": 128, "answer": 132, "anymor": 10, "apach": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "api": [0, 9, 27], "apl": 110, "appear": 132, "append": [82, 110, 128, 129, 130, 131, 134, 137], "appendix": 15, "appli": [7, 13, 15, 16, 18, 21, 23, 24, 29, 30, 32, 33, 42, 60, 61, 113, 128, 136, 137], "applic": [0, 99, 127, 137], "apply_post_process": [15, 32], "approach": [5, 32, 56, 58, 119, 131, 132, 136], "appropri": 110, "approx": [127, 136, 137], "approxim": [40, 42, 45, 48, 50, 60, 61, 79, 80, 85, 86, 87, 92, 93, 95, 97, 106, 108, 110, 113, 121, 132, 136, 137], "aqgd": 9, "ar": [0, 3, 7, 9, 10, 11, 15, 19, 20, 22, 24, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 86, 92, 93, 95, 96, 97, 99, 101, 104, 106, 108, 110, 112, 115, 118, 119, 121, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137], "arang": [134, 137], "arbitrari": [31, 45, 96, 133], "arcco": 132, "aren": [93, 112], "arg": [12, 49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131, 134], "argmin": 135, "argument": [9, 10, 11, 13, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 42, 43, 45, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 121, 127, 128, 130, 131, 133, 135, 137], "aris": 9, "armijo": 92, "armijo_paramet": 92, "around": [26, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 135], "arrai": [43, 45, 54, 56, 62, 92, 93, 110, 117, 127, 128, 131, 134, 135, 136, 137], "array_lik": 121, "artifact": 44, "arxiv": [15, 22, 24, 26, 29, 31, 32, 45, 49, 58, 69, 70, 71, 77, 78, 82, 83, 92, 100, 106, 110, 119, 132], "as_float": [27, 43], "asarrai": [128, 130], "ask": [84, 93, 112], "ask_data": [93, 112], "askdata": [93, 112], "aspect": [9, 137], "assembli": 110, "assess": 9, "assign": [25, 129, 131, 132, 133], "assign_paramet": [134, 135], "associ": [22, 29, 133], "assum": [9, 43, 44, 53, 132, 137], "assumpt": 137, "asynchron": [118, 119], "atom": 128, "attempt": [3, 12, 40, 92, 97, 106], "attribut": [9, 10, 11, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 132, 137], "author": 107, "auto": 130, "autom": 132, "automat": [27, 36, 40, 56, 58, 60, 61, 79, 80, 106, 110, 127, 131, 132], "aux": [11, 20, 35, 37, 39, 48, 50, 57, 59], "aux_op": 135, "aux_oper": [10, 19, 34, 36, 38, 40, 45, 47, 49, 53, 55, 56, 58, 60, 61, 134, 135, 137], "aux_operators_evalu": [11, 20, 35, 37, 39, 48, 50, 57, 59, 127, 128], "aux_ops_evalu": [41, 54, 62, 134], "aux_valu": [36, 38], "auxiliari": [10, 19, 34, 36, 38, 40, 45, 47, 49, 53, 55, 56, 58, 132, 135], "avail": [44, 95, 129, 130, 132, 134, 136], "averag": [56, 79, 80, 83, 106, 110, 119], "avg": [106, 110], "avoid": [9, 44, 105, 136], "awar": [26, 107], "ax": [60, 61, 137], "axi": 137, "b": [9, 26, 49, 58, 60, 61, 97, 131, 132, 136, 137], "ba": 82, "back": [9, 127], "backend": [9, 42, 127, 131, 132, 133, 134], "backend_opt": 129, "backward": [67, 68], "bad": 13, "balanc": [56, 130, 131], "bar": 137, "bar_width": 137, "barison": [40, 134], "barkoutso": 49, "barrier": [9, 55], "base": [0, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135], "baseestimatorgradi": [58, 67, 69, 72, 77, 79, 122, 123, 124, 125, 126, 136], "baseestimatorv2": [40, 55, 56, 58, 60, 61, 63, 64, 67, 69, 70, 72, 79], "baseoper": [10, 19, 34, 36, 38, 40, 44, 45, 47, 49, 53, 56, 58, 63, 67, 69, 72, 77, 79, 122, 124, 126], "baseqgt": [70, 74, 78, 122, 123, 124, 125, 126, 136], "basesamplergradi": [68, 71, 73, 80, 136], "basesamplerv2": [15, 22, 24, 26, 29, 31, 32, 42, 45, 49, 65, 68, 71, 73, 80, 106, 119], "basestatefidel": [40, 56, 119], "basi": [26, 31, 42, 45, 49, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 118, 119, 129, 137], "basic": [128, 131], "batch": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "batch_siz": [79, 80, 136], "bbox_to_anchor": 137, "becaus": [9, 24, 26, 44], "becom": 137, "been": [3, 7, 9, 10, 12, 16, 18, 23, 24, 25, 30, 32, 33, 40, 43, 45, 49, 54, 56, 58, 62, 106, 110, 112, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "befor": [7, 9, 15, 40, 86, 93, 106, 110, 112, 127, 129, 134], "beforehand": [127, 131, 132], "begin": [128, 132, 135, 136], "behav": [93, 94, 112], "behavior": [9, 92, 105, 106, 110, 115], "behind": 24, "being": [9, 10, 21, 40, 56, 58, 94, 103, 104, 132, 137], "believ": 56, "belong": [106, 115], "below": [3, 10, 15, 92, 121, 127, 129, 131, 133], "benchmark": 31, "bergholm": [72, 73, 83], "berlin": 137, "besid": 136, "best": [15, 26, 44, 48, 50, 93, 112, 115, 134], "best_measur": [48, 50], "beta": [29, 45, 56, 130], "beta_1": 82, "beta_2": 82, "better": [9, 44, 97, 99, 115], "between": [9, 24, 29, 40, 99, 118, 119, 121, 122, 124, 128, 129, 131, 132, 135, 136], "bewar": 134, "beyond": [12, 82, 121, 129], "bfg": [49, 58, 97, 105, 134], "bia": 83, "bias": [89, 90], "bielza": 115, "big": [106, 115], "bigg": 135, "bigger": 115, "bigotim": 136, "binari": [24, 26, 42, 131, 132, 133], "binary_repr": 131, "bind": 136, "bit": [26, 27, 42, 43, 44, 131, 132, 133, 134], "bit_rep": 132, "bitfield": 131, "bitstr": [13, 21, 25, 42, 48, 50, 132], "black": 24, "bloch": 136, "block": [0, 10, 106, 110, 127, 132, 134], "blueprintcircuit": 9, "blueprintscircuit": 9, "boltzmann": 0, "bool": [10, 12, 13, 15, 19, 21, 22, 24, 27, 29, 31, 32, 34, 36, 38, 40, 43, 45, 47, 49, 55, 56, 58, 64, 70, 78, 82, 86, 87, 92, 93, 99, 100, 104, 106, 108, 109, 110, 112, 113, 119, 121, 131], "boolean": [15, 22, 24, 29, 31, 32, 36, 38], "boolean_express": [13, 133], "booleanexpress": 133, "both": [0, 24, 29, 42, 44, 92, 93, 99, 104, 110, 122, 124, 127, 128, 129, 132, 133, 135, 136], "bound": [9, 10, 24, 26, 32, 44, 45, 49, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 122, 124, 126, 128, 132], "boundari": 121, "bounds_support_level": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "box": 24, "boyer": [24, 132], "branch": 109, "brassard": [15, 22, 24, 29, 32, 132], "break": 9, "breakdown": 137, "brien": 26, "broader": 127, "brought": 9, "broyden": 97, "brute": [32, 131], "build": [0, 10, 13, 21, 42, 95, 127, 129, 134], "built": [3, 9, 100], "busi": 137, "c": [15, 29, 72, 73, 79, 80, 106, 110, 113, 132, 133, 137], "c_j": [26, 42], "c_k": [106, 110], "cach": 9, "calcul": [0, 2, 24, 40, 41, 49, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 106, 110, 113, 118, 119, 120, 122, 124, 126, 129, 130, 132, 134], "calibr": [106, 110], "call": [7, 9, 24, 27, 29, 32, 40, 43, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 121, 127, 128, 131, 132, 133, 135, 137], "callabl": [12, 13, 21, 36, 38, 40, 45, 49, 56, 58, 60, 61, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 121, 132, 136], "callable_good_st": 132, "callback": [9, 45, 49, 56, 58, 93, 106, 110, 115, 127, 129, 130, 131, 132], "cambridg": [24, 42], "can": [0, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 21, 23, 24, 29, 30, 32, 33, 34, 36, 38, 40, 43, 44, 45, 47, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 69, 70, 72, 77, 78, 92, 93, 94, 99, 101, 103, 105, 106, 110, 112, 115, 117, 118, 119, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "cancel": 12, "candid": [3, 10], "cannot": [7, 26, 128], "canon": [15, 43, 112], "capabl": 121, "capac": 136, "captur": 129, "care": [9, 132], "carefulli": 29, "carleo": 40, "carlo": 106, "carri": [0, 24, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "case": [5, 10, 24, 26, 27, 40, 42, 43, 44, 45, 53, 60, 61, 88, 98, 99, 107, 115, 127, 128, 132, 135, 137], "catch": [93, 112], "categori": [3, 5, 127], "caught": 9, "caus": 9, "ccx": [69, 70, 71], "ccz": 132, "cd": 7, "cell": [129, 131, 134, 135], "center": 137, "central": [67, 68, 92, 136], "certain": [45, 49, 58, 106, 110, 137], "cf": 112, "cg": [113, 136], "ch": 132, "chain": 135, "chanc": [93, 112], "chang": [7, 9, 10, 83, 87, 97, 103, 105, 127, 128], "chapter": 24, "characterist": 128, "check": [7, 13, 21, 24, 56, 127, 132, 135], "chemistri": [0, 10, 19, 34, 36, 38, 56, 58, 127, 128], "chernoff": 29, "choic": [5, 10, 93, 110, 112, 121, 127, 128, 129, 134, 137], "choos": [129, 130, 131, 132, 134, 135, 136, 137], "chosen": [5, 26, 49, 106, 110, 115, 130], "chow": 119, "christian": 83, "chuang": [24, 42], "circ": 137, "circuit": [0, 2, 5, 8, 9, 10, 11, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 40, 42, 43, 45, 49, 50, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 83, 106, 110, 115, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "circuit_1": [118, 119], "circuit_2": [118, 119], "circuit_result": [15, 16, 18, 23, 25, 30, 32, 33, 43, 133], "circuits_1": [118, 119], "circuits_2": [118, 119], "circumv": 15, "claim": 107, "clarifi": 9, "class": [5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137], "classic": [0, 3, 24, 25, 40, 45, 48, 49, 50, 51, 52, 56, 58, 77, 78, 100, 105, 127, 128, 129, 131, 134], "classifi": 115, "classmethod": [10, 19, 34, 36, 38, 44, 45, 47, 49, 55, 56, 58], "claus": 133, "clone": 7, "clopper": 29, "close": [40, 42, 44, 56, 82, 117, 127, 128, 129, 135], "closer": [44, 129], "cloud": 9, "cluster": 10, "cm": 137, "cmap": 137, "cnf": [132, 133], "co": 137, "cobyla": [128, 130, 131], "code": [7, 9, 43, 110, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "codebas": 9, "coeff": [106, 110, 131, 135, 137], "coeffici": [26, 27, 44, 56, 83, 106, 110, 137], "coincid": 119, "collect": 24, "color": [131, 134, 137], "colorbar": 137, "column": 121, "com": [7, 9, 85, 95, 109, 115], "combin": [11, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 69, 70, 71, 96, 102, 108, 119, 137], "combinatori": 45, "come": [93, 127, 128], "command": 7, "common": [0, 6, 9, 10], "commonli": [63, 72], "commun": [7, 127, 137], "compact": 10, "compar": [24, 77, 78, 93, 106, 115, 128, 129, 130, 131, 135, 137], "comparison": [32, 95, 130], "compat": [9, 133], "competit": 115, "compil": 9, "complement": 44, "complementari": 131, "complet": [9, 43, 110, 128, 133], "complex": [22, 36, 41, 49, 53, 54, 62, 63, 64, 67, 69, 70, 72, 77, 78, 79, 115, 121, 128, 132, 136], "compliant": 5, "complic": [93, 112], "compon": [15, 92, 105, 106, 110, 115, 132, 133], "compos": [93, 112], "composit": 132, "comprehens": 137, "compris": 45, "comput": [0, 4, 9, 10, 11, 15, 19, 24, 26, 27, 29, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 55, 56, 58, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137], "compute_confidence_interv": [15, 32], "compute_eigenvalu": [19, 36, 56, 130], "compute_minimum_eigenvalu": [9, 10, 34, 38, 45, 47, 49, 58, 115, 127, 128, 129, 131, 136], "compute_mininum_eigenvalu": 127, "compute_ml": [15, 32], "computeuncomput": [9, 40, 130, 134], "concentr": 43, "conceptu": 137, "concha": 115, "conclud": 127, "concret": 24, "condit": [93, 100, 112, 132], "confer": [110, 115], "confid": [15, 16, 18, 22, 23, 29, 30, 32, 33], "confidence_interv": [16, 18, 23, 30, 33], "confidence_interval_process": [16, 18, 23, 30, 33], "configur": [45, 127, 128, 133], "confint_method": 29, "conform": 0, "confus": 9, "conjug": [86, 104, 113, 136], "conjunct": [9, 133], "connect": 131, "consecut": 132, "consid": [10, 26, 38, 56, 93, 115, 122, 123, 124, 125, 132, 135, 137], "consider": [99, 135], "consist": [9, 40, 129, 135, 137], "constant": [93, 106, 110, 131, 134], "constant_coeff": 93, "constrain": [45, 87, 95, 96, 132], "constraint": [15, 85, 91, 96, 97, 99, 104, 108], "construct": [10, 13, 15, 22, 24, 29, 31, 32, 40, 42, 44, 45, 49, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 130, 132, 133, 134, 135, 136], "construct_circuit": [15, 22, 24, 29, 31, 32, 42], "constructor": [9, 42, 127, 131, 132], "consult": 129, "contain": [3, 13, 15, 17, 21, 26, 32, 40, 42, 45, 47, 48, 49, 53, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 122, 124, 131, 133, 134, 136, 137], "content": 24, "continu": [9, 93, 108, 109, 112, 115, 121, 131], "continue_condit": [93, 112], "contrarili": 9, "contrast": [48, 49, 97], "contribut": [56, 130], "control": [9, 79, 80, 88, 93, 97, 105, 110, 112], "converg": [9, 10, 56, 82, 83, 86, 87, 92, 93, 96, 99, 104, 106, 107, 108, 110, 113, 128, 129, 130, 135], "converge_count": 128, "converge_v": 128, "convergence_threshold": 56, "convers": [9, 24, 36, 131], "convert": [13, 36, 44, 108, 131, 132, 137], "convex": 85, "coordin": [92, 95], "cope": 82, "copi": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "copyright": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "core": [3, 42], "correct": [9, 27, 132, 135], "correl": 137, "correlation_op": 137, "correspond": [26, 27, 39, 42, 43, 44, 56, 58, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 92, 112, 118, 119, 121, 128, 131, 132, 133, 135, 137], "cost": [11, 50, 56, 57, 59, 127, 128, 130], "cost_function_ev": [11, 50, 57, 59, 127, 128], "cost_function_evals1": 128, "costli": [36, 137], "could": [9, 24, 92, 127, 129], "count": [9, 15, 16, 18, 19, 23, 27, 30, 32, 33, 34, 36, 38, 42, 43, 45, 49, 56, 58, 127, 128, 129, 130, 131, 132, 137], "count_nonzero": 131, "count_op": 137, "counter": [93, 112], "counterpart": [0, 9], "coupl": [9, 10, 129], "coupling_map": [9, 127, 129, 131, 132], "cours": [106, 110], "cover": 128, "coverag": 127, "cp": [77, 78], "creat": [7, 9, 10, 44, 93, 112, 117, 118, 119, 127, 129, 130, 131, 132, 133, 135, 137], "create_fidelity_circuit": [118, 119], "create_result": [93, 112], "crimson": 134, "criterion": [10, 11, 21, 36, 38, 83, 92, 108, 110, 113], "critic": 137, "cross": 131, "crx": [77, 78], "cry": [77, 78], "crz": [77, 78], "csr_matrix": 9, "csv": 82, "cur": 131, "cur_v": 131, "current": [13, 40, 55, 56, 82, 83, 93, 94, 103, 112, 117, 128, 129, 136], "current_paramet": 40, "curvatur": 110, "custom": [9, 15, 21, 45, 83, 93, 110, 112, 127, 128, 129, 131, 132], "customiz": 112, "cut": 131, "cutoff": [27, 43], "cvar": [45, 49], "cx": [69, 70, 71, 72, 73, 129, 136, 137], "cy": [69, 70, 71, 72, 73], "cycl": 9, "cz": [69, 70, 71, 72, 73, 127, 128, 129, 130, 131, 132], "c\u00f3rcole": 119, "d": [15, 22, 24, 29, 45, 106, 119, 135, 136], "dagger": [24, 106, 132], "damp": 137, "darkmagenta": 137, "data": [9, 45, 49, 56, 58, 93, 106, 110, 112, 128], "databas": [24, 132], "dataclass": [94, 103], "deal": [93, 112, 127, 136], "debug": 109, "decid": [112, 135], "decis": [9, 90, 92, 110], "decompos": [132, 136, 137], "decomposit": [40, 137], "decreas": [42, 44, 92, 129], "deeper": 137, "def": [9, 49, 58, 93, 106, 110, 112, 127, 128, 129, 130, 131, 132, 134, 137], "default": [3, 7, 9, 10, 13, 15, 16, 18, 21, 23, 27, 29, 30, 32, 33, 40, 43, 55, 56, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 121, 127, 128, 129, 132, 137], "default_precis": [127, 129], "default_shot": [134, 136], "defin": [9, 40, 53, 55, 56, 60, 61, 64, 74, 77, 98, 118, 119, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137], "definit": [28, 46, 51, 52, 86, 106, 110, 131], "deflat": 56, "degener": 26, "degre": 137, "delai": 129, "deleg": 9, "delta": [22, 129, 134, 135], "delta_t": 134, "demonstr": [128, 129, 130, 131, 133, 135, 136], "denot": [56, 136], "denser": 137, "density_matrix": 129, "depend": [3, 7, 10, 49, 51, 52, 53, 112, 115, 118, 119, 120, 128, 136], "deprec": [10, 32, 133], "depth": [8, 45, 127, 137], "deriv": [9, 27, 63, 64, 67, 69, 70, 72, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 104, 107, 109, 112, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "derivative_typ": [63, 64, 67, 69, 70, 72, 76, 77, 78, 79, 135, 136], "derivativetyp": [63, 64, 69, 70, 72, 76, 77, 78, 135, 136], "descent": [83, 92, 93, 97, 106, 110, 134], "describ": [44, 77, 78, 92, 137], "descript": [44, 107], "design": [0, 3], "desir": [3, 6, 44, 115, 132], "detail": [7, 15, 24, 31, 40, 83, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 104, 105, 107, 108, 109, 110, 111, 113, 127, 132, 134], "detect": 9, "determin": [10, 32, 40, 43, 44, 78, 92, 106, 110, 112, 121, 126, 134, 135], "determinist": 89, "dev": 7, "develop": [7, 9], "deviat": [41, 54, 62, 106, 110], "devic": [0, 5, 8, 110, 127, 129, 136, 137], "diag": 49, "diagnost": 26, "diagon": [0, 45, 47, 49, 82], "dict": [10, 15, 19, 22, 24, 26, 27, 29, 31, 32, 34, 36, 38, 40, 42, 43, 44, 45, 47, 49, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119], "dictat": [45, 133], "dictionari": [9, 11, 15, 16, 18, 22, 23, 24, 26, 29, 30, 31, 32, 33, 40, 42, 45, 49, 50, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 127, 129, 131, 132, 135, 136, 137], "did": 10, "diederik": 82, "dieter": 108, "differ": [0, 9, 19, 24, 26, 27, 29, 32, 34, 40, 45, 57, 63, 67, 68, 72, 82, 92, 93, 106, 110, 113, 115, 121, 127, 128, 129, 130, 133, 134, 135, 137], "differenti": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 137], "difficulti": 9, "diffus": [24, 132], "digest": 110, "digit": 131, "dim": [135, 137], "dimac": [132, 133], "dimens": [36, 92, 93, 106, 110], "dimension": [99, 104], "dimensionless": 137, "dipol": [19, 34, 36, 38, 56, 58], "direct": [9, 89, 90, 92, 93, 97, 104, 106, 110, 121, 135, 137], "direct_l": 90, "directli": [5, 9, 15, 45, 93, 100, 128, 137], "directori": [82, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "discard": 15, "discontinu": 107, "discret": 44, "discuss": 137, "disentangler_dg": 137, "disp": [86, 87, 92, 99, 100, 104, 108, 113], "displai": [92, 132, 133, 136], "dissoci": 128, "distanc": [42, 122, 124, 127, 128, 135, 136], "distinct": 9, "distinguish": [9, 26, 44], "distribut": [0, 48, 50, 65, 68, 71, 73, 80, 115, 131, 136], "dive": 7, "divid": [3, 5, 55, 89, 90], "divis": 89, "do": [0, 7, 9, 10, 21, 93, 112, 127, 131, 135], "dobsicek": 31, "doc": [9, 86, 87, 97, 99, 100, 104, 105, 108, 111, 113, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "docstr": 93, "document": [127, 129], "doe": [9, 15, 22, 24, 27, 29, 32, 45, 49, 51, 52, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 122, 124, 128, 134, 137], "doesn": [9, 93, 101, 112, 131, 132, 137], "doi": [72, 73, 79, 80, 115], "domain": [0, 89, 121], "don": [7, 9, 132], "done": [9, 12, 27, 112, 131], "dot": 135, "down": 137, "downarrow": 137, "downgrad": 9, "draw": [127, 130, 131, 132, 134, 135, 136, 137], "draw_networkx_edge_label": 131, "drop": 9, "dt": [40, 135, 137], "dtype": [128, 131, 137], "due": [6, 22, 42, 129], "dure": [41, 56, 103, 117, 129, 137], "dynam": [40, 122, 123, 124, 125, 135, 137], "d\u03c9": [63, 69, 72], "e": [0, 5, 7, 14, 24, 26, 45, 49, 53, 56, 58, 63, 67, 68, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 121, 127, 128, 131, 132, 134, 136, 137], "each": [0, 6, 23, 24, 26, 29, 30, 40, 41, 42, 45, 49, 54, 55, 56, 57, 58, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 86, 92, 93, 104, 106, 110, 113, 115, 120, 121, 128, 130, 131, 132, 133, 134, 135, 136, 137], "eas": 132, "easi": [132, 133], "easili": [115, 128, 129, 132, 135], "ed": 42, "eda": 115, "edaspi": 115, "edg": 131, "edge_label": 131, "edit": [7, 42], "edu": 110, "eff": 135, "effect": [9, 137], "effici": [9, 40, 77, 78, 89, 107, 110, 132, 136], "efficient_su2": [5, 40, 134, 135], "egger": 45, "eigen": 127, "eigenphas": [26, 31, 42], "eigensolv": [9, 10, 20, 34, 35, 36, 37, 38, 39, 45, 47, 48, 49, 56, 58, 59, 110, 127, 129, 136], "eigensolverresult": [19, 37, 57], "eigenst": [0, 11, 19, 31, 36, 37, 38, 39, 42, 44, 45, 47, 48, 49, 50, 56, 57, 59, 130, 131], "eigenvalu": [0, 10, 11, 19, 20, 26, 27, 31, 34, 35, 36, 37, 38, 39, 42, 44, 45, 47, 48, 49, 50, 56, 57, 58, 59, 127, 128, 129, 130, 136], "eigenvalue_histori": 11, "eigenvalue_threshold": [9, 10], "eigenvector": 44, "either": [10, 15, 40, 45, 49, 56, 58, 63, 64, 69, 70, 72, 83, 93, 98, 106, 110, 121, 131, 136], "el": 135, "elabor": 132, "electron": 127, "element": [0, 24, 32, 36, 38, 40, 63, 67, 69, 72, 77, 79, 92, 110, 132], "elit": 115, "elite_factor": 115, "ell": 134, "els": [93, 112, 131, 132], "elsewher": [9, 137], "embed": [42, 115], "emploi": [69, 70, 71, 96, 136], "empti": [36, 38, 101, 128, 137], "en": [9, 88, 89, 90, 91, 93, 96, 107, 112], "enabl": 129, "encod": [15, 21, 24, 137], "encount": 9, "end": [9, 93, 106, 110, 112, 128, 132, 135, 136, 137], "endpoint": 26, "energ": 134, "energi": [45, 49, 56, 58, 63, 72, 86, 98, 115, 127, 128, 129, 130, 134, 135, 136, 137], "energies_gd": 134, "enforc": 9, "enhanc": 119, "enough": 92, "ensur": [9, 44, 56, 106, 110, 120, 130], "entangl": [129, 131], "entanglement_block": [128, 129, 130], "entir": [48, 50, 132], "entri": [9, 131, 136], "enumer": [128, 132, 137], "environ": 7, "ep": [82, 86, 97, 108, 113, 137], "epoch": 83, "epsilon": [29, 67, 68, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 128, 136, 137], "epsilon_estim": 30, "epsilon_estimated_process": 30, "epsilon_target": [29, 30], "equal": [24, 44, 55, 96, 108], "equat": [5, 60, 61, 86, 122, 124, 135, 137], "equiv": 135, "equival": [9, 135, 136], "error": [1, 9, 12, 15, 22, 29, 32, 41, 93, 99, 104, 112, 120, 129, 134, 135, 137], "escap": 96, "especi": [99, 132, 137], "establish": 128, "estim": [9, 13, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 40, 41, 42, 49, 55, 56, 58, 60, 61, 63, 64, 67, 69, 70, 72, 74, 77, 78, 79, 82, 92, 97, 100, 106, 110, 115, 122, 124, 127, 128, 129, 130, 132, 134, 137], "estimate_from_pe_circuit": 42, "estimate_interv": 30, "estimate_stddev": [106, 110], "estimated_error": [41, 134], "estimation_problem": [15, 17, 22, 29, 32], "estimation_process": [16, 18, 23, 30, 33], "estimationproblem": [15, 17, 22, 29, 32], "estimator1": 128, "estimatorgradi": [63, 66], "estimatorv1": 9, "estimatorv2": [127, 129, 135], "et": [22, 24, 31, 45, 58, 69, 70, 71, 106, 110, 132, 134, 135, 136], "eta": 83, "eta_k": 134, "eta_n": 93, "etc": [0, 128], "euler": [5, 121], "ev": [106, 110], "eval": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 128, 129, 130], "eval_count": [128, 129, 130], "eval_fun": 114, "eval_jac": [93, 112, 114], "evalu": [9, 10, 11, 15, 16, 19, 22, 25, 29, 32, 33, 34, 36, 38, 40, 41, 45, 47, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128, 130, 134, 137], "evaluate_measur": 15, "evaluated_gradi": [93, 112], "evaluation_schedul": [32, 33], "even": [36, 38, 96, 127, 132], "eventu": 137, "everi": [9, 55, 56, 58, 82, 97, 105, 127], "evolut": [5, 10, 26, 28, 40, 45, 46, 51, 52, 53, 54, 55, 60, 61, 62, 88, 96, 122, 124, 126, 127, 134], "evolution_gradi": [122, 124, 126], "evolution_problem": [5, 28, 40, 46, 51, 52, 55, 60, 61, 135], "evolution_result": [5, 135], "evolution_result_eff": 135, "evolution_result_r": 135, "evolution_result_re_eff": 135, "evolutionari": [91, 115], "evolutionsynthesi": [26, 40], "evolv": [26, 28, 40, 41, 45, 46, 51, 52, 53, 54, 55, 60, 61, 62, 88, 127, 134, 135, 137], "evolved_operator_ansatz": [9, 10], "evolved_st": [41, 54, 55, 62, 134, 137], "evolvedop": 10, "evolvedoperatoransatz": [9, 10], "ex": [132, 133], "exact": [106, 110, 127, 128, 129, 130, 134, 137], "exact_correl": 137, "exact_energi": [134, 137], "exact_evol": 135, "exact_evolut": 137, "exact_h_exp_v": 135, "exact_h_exp_val_eff": 135, "exact_magnet": [134, 137], "exact_mz_exp_val_r": 135, "exact_result": 130, "exact_solv": 130, "exact_st": 134, "exact_tim": [134, 137], "exactli": [42, 43, 44, 130, 137], "examin": 133, "exampl": [0, 5, 6, 9, 24, 40, 44, 55, 83, 93, 98, 106, 110, 112, 115, 128, 129, 132, 134, 135], "except": [1, 9, 97, 105, 117, 132, 133], "exchang": 132, "excit": [0, 10, 56, 130], "execut": [0, 12, 42, 49, 58, 66, 75, 76, 81, 106, 110, 120, 132, 134, 135, 136], "exhaust": 131, "exist": [9, 11, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 82, 102, 128, 137], "exp": [26, 28, 40, 42, 46, 51, 52, 137], "expand": 132, "expans": 134, "expect": [0, 9, 10, 11, 19, 20, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 72, 74, 77, 78, 79, 106, 127, 128, 130, 134, 135, 137], "expectation_valu": [134, 137], "experi": [26, 107, 115, 128], "explain": [132, 136], "explan": [131, 136], "explanatori": 133, "explicit": 93, "explicitli": [3, 9, 132], "explor": [128, 134, 137], "expm": [134, 137], "expon": [106, 110], "exponenti": [26, 32, 44, 77, 78, 137], "expos": [0, 5, 131, 132], "express": [127, 132, 137], "extend": [9, 10, 45, 97, 130, 135, 136], "extern": [135, 137], "extract": [26, 129, 137], "extrapol": 128, "f": [9, 24, 45, 67, 68, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128, 129, 130, 131, 132, 133, 137], "f_": 135, "face": [127, 137], "facil": 107, "fact": [11, 20, 35, 37, 39, 41, 54, 57, 59, 62, 99], "factor": [21, 26, 29, 44, 82, 113, 132, 135], "factori": 93, "fae": 22, "fail": [24, 42, 93, 107, 112, 122, 124, 126], "failur": [109, 132], "fake": 129, "fake_provid": [9, 127, 129, 131, 132], "fals": [10, 13, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 34, 36, 38, 40, 43, 45, 47, 49, 55, 56, 58, 82, 86, 87, 92, 93, 99, 100, 104, 106, 108, 109, 110, 112, 113, 119, 121, 132, 133], "famili": [88, 106, 112, 115], "familiar": [93, 112, 130], "famou": 132, "far": [94, 103, 137], "farhi": 45, "fashion": 121, "fast": [24, 77, 78, 109, 132, 134], "faster": [22, 23, 93, 105, 121, 128], "fasteramplitudeestim": 9, "fasteramplitudeestimationresult": 22, "favor": 9, "fde_grad_result": 136, "feasibl": [36, 38, 45], "featur": [7, 55, 56, 110, 119, 128, 137], "feedback": 31, "fetch": 9, "few": [26, 89, 134], "fewer": [36, 44], "fi": 32, "fidel": [9, 40, 41, 56, 80, 106, 118, 119, 120, 130, 134], "field": [9, 134, 135, 137], "fig": [31, 137], "figsiz": [128, 129, 130, 137], "figur": [128, 129, 130, 133, 135, 137], "file": [82, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "filippo": 40, "filter": [27, 36, 38, 43, 95], "filter_criterion": [36, 38], "filter_phas": [27, 43], "filtertyp": [36, 38], "final": [10, 11, 12, 22, 32, 36, 45, 47, 48, 49, 50, 87, 92, 97, 102, 105, 115, 128, 129, 130, 134, 137], "final_max_gradi": 11, "final_tim": [134, 137], "financi": 127, "find": [0, 3, 7, 10, 15, 24, 26, 29, 32, 44, 45, 49, 56, 58, 85, 93, 99, 110, 127, 129, 130, 131, 132, 135, 137], "findnextk": 29, "fine": 45, "finer": 15, "finish": [93, 135], "finit": [40, 63, 67, 68, 72, 82, 93, 106, 110, 113, 121, 128, 135], "finitediffestimatorgradi": [9, 128, 136], "finitediffsamplergradi": 9, "first": [7, 9, 10, 23, 24, 32, 36, 40, 42, 55, 99, 104, 106, 110, 112, 118, 119, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137], "firstli": [132, 135], "fisher": [15, 32, 33, 74, 106], "fisher_inform": 33, "fit": [96, 109], "five": [56, 132], "fix": [64, 70, 78, 106, 110, 127], "flag": [15, 22, 24, 29, 31, 32], "flatten": 10, "fletcher": 97, "flip": [24, 132], "float": [10, 15, 21, 22, 24, 26, 27, 29, 31, 32, 40, 41, 43, 44, 45, 48, 49, 50, 53, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126], "float64": [97, 105, 127, 128, 134, 137], "fmin_l_bfgs_b": [97, 105], "focus": 7, "folder": 7, "follow": [3, 7, 9, 10, 40, 45, 49, 56, 58, 93, 95, 98, 119, 128, 129, 131, 132, 134, 135, 136, 137], "forc": [131, 137], "form": [24, 40, 55, 97, 122, 124, 126, 127, 129, 133, 134, 136, 137], "format": [9, 11, 20, 35, 37, 39, 41, 48, 50, 54, 57, 59, 62, 101, 106, 112, 128, 132, 133, 136], "former": [9, 10], "formul": 131, "formula": [40, 55, 136], "forward": [5, 67, 68, 93, 121], "forward_euler_solv": [60, 61], "forwardeulersolv": [60, 61], "found": [9, 26, 32, 56, 93, 112, 115, 127, 128, 130, 132, 134, 137], "four": [56, 127, 131], "fourier": 15, "fourth": 137, "fourth_order_formula": 137, "frac": [67, 68, 106, 110, 119, 135, 136], "framealpha": 137, "framework": [5, 100, 128], "free": [9, 53, 88, 89, 90, 91, 96, 107, 109], "frequenc": [42, 43, 97, 105], "frequent": [0, 25], "from": [3, 5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 23, 25, 26, 27, 29, 30, 33, 35, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 54, 55, 57, 58, 59, 62, 86, 92, 93, 102, 106, 110, 112, 113, 115, 118, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "from_backend": 129, "from_dimac": 133, "from_label": [132, 137], "from_list": [5, 127, 128, 129, 130, 136], "from_numpy_arrai": 131, "from_pauli_sum": 44, "from_sparse_list": [134, 137], "ftol": [97, 105, 108, 113], "fujii": [83, 100], "full": [45, 55, 83, 112, 127, 128], "fulli": 128, "fun": [49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 121], "func": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "function": [0, 3, 7, 9, 10, 12, 13, 16, 18, 21, 23, 24, 25, 30, 32, 33, 40, 45, 49, 56, 58, 63, 72, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 127, 128, 130, 131, 132, 134, 136, 137], "function_wrapp": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "functool": [49, 58], "further": [9, 13, 21, 83, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 104, 105, 107, 108, 109, 110, 111, 113, 119, 129, 131, 136], "furthermor": [44, 82], "g": [0, 5, 14, 15, 22, 24, 29, 32, 49, 53, 63, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 131, 132, 134, 136], "gacon": [15, 29, 77, 106], "gambetta": 119, "gamma": [45, 106, 110], "gap": 129, "gate": [9, 13, 77, 78, 83, 129, 132, 136, 137], "gaussian": 92, "gd": 134, "gecco": 115, "gener": [0, 6, 9, 24, 43, 44, 45, 49, 56, 58, 82, 86, 87, 92, 93, 94, 99, 100, 104, 105, 106, 108, 110, 111, 113, 115, 117, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "generalis": 56, "generate_preset_pass_manag": [9, 127, 131, 132], "generatorexit": 117, "genericbackendv2": [9, 127, 129, 131, 132], "genet": 115, "geodes": 136, "geometr": [64, 70, 74, 106], "get": [8, 10, 13, 15, 19, 21, 22, 24, 29, 32, 34, 36, 38, 40, 56, 58, 93, 94, 95, 105, 106, 110, 112, 115, 127, 133, 134, 135, 137], "get_edge_attribut": 131, "get_fidel": [9, 106], "get_hamiltonian": 137, "get_legend_handles_label": 137, "get_loss": 40, "get_nlopt_optim": [88, 89, 90, 91, 96, 107], "get_oper": 131, "get_support_level": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "gilliam": 132, "git": 7, "github": [7, 85, 95, 109, 115, 127], "giusepp": 40, "give": [27, 56, 127, 129, 130, 136], "given": [3, 15, 24, 31, 49, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 122, 124, 126, 127, 130, 135, 136], "global": [6, 45, 88, 89, 90, 91, 96, 107, 119], "goal": [24, 97, 108, 113, 131], "gogolin": [72, 73, 83], "goldfarb": 97, "goldston": 45, "gonciulea": 132, "good": [13, 15, 21, 24, 32, 33, 115, 128, 132, 134, 137], "good_count": 33, "good_stat": 24, "gov": [85, 95, 109], "govern": 135, "gqt": [122, 123, 124, 125, 126], "grad": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 136], "grad_f": 93, "gradient": [9, 10, 11, 40, 49, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 123, 124, 125, 126], "gradient1": 128, "gradient_approxim": 92, "gradient_num_diff": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "gradient_param": [122, 124, 126], "gradient_support_level": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "gradient_threshold": [9, 10], "gradientdesc": [94, 112, 117, 134], "gradientdescentst": 117, "graph": [128, 129, 131], "greater": [31, 44], "grid": [15, 32, 137], "grinko": [15, 22, 29], "ground": [0, 19, 34, 36, 38, 56, 58, 106, 110, 127, 128, 129, 130, 135], "group": [0, 9, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 137], "grover": [9, 13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 32, 33, 127], "grover_op": 132, "grover_oper": [13, 15, 21, 132], "groveroper": [24, 132], "groverresult": [24, 132], "growth_rat": 24, "gsl": 9, "gt": [127, 128, 132, 134], "gtol": [86, 113], "guarante": [24, 87, 96, 137], "guess": [40, 86, 106, 110, 128], "guid": 9, "guidelin": 9, "gutmann": 45, "h": [9, 24, 26, 28, 40, 46, 51, 52, 56, 58, 69, 70, 71, 72, 73, 130, 131, 132, 134, 135, 136, 137], "h2": [115, 127, 128, 129, 130], "h2_energi": 136, "h2_hamiltonian": 136, "h2_op": [115, 127, 128, 129, 130], "h_": [49, 136], "h_a": 131, "h_alpha": 137, "h_arrai": 137, "h_b": 131, "h_exp_val": 135, "h_exp_val_eff": 135, "h_j": 137, "h_p": 136, "ha": [0, 3, 7, 9, 10, 12, 13, 16, 18, 23, 24, 29, 30, 33, 36, 38, 40, 43, 44, 45, 49, 54, 56, 58, 62, 92, 93, 96, 105, 106, 110, 112, 115, 117, 127, 128, 129, 131, 132, 133, 134, 136, 137], "had": [9, 129], "hadamard": [13, 132], "hadfield": 45, "half": [29, 30], "hamiltonian": [0, 10, 26, 27, 28, 40, 44, 45, 46, 49, 51, 52, 53, 55, 56, 58, 115, 122, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137], "hamiltonianphaseestim": [9, 27], "hamiltonianphaseestimationresult": 26, "hand": [9, 121, 135], "handi": 128, "handl": [9, 13, 16, 18, 21, 23, 30, 33, 93, 97, 106, 108, 112, 122, 124], "happen": 53, "hardwar": [43, 69, 70, 71, 72, 73, 83, 105, 110, 127, 131, 132, 137], "harrow": 119, "has_good_st": 21, "hasn": [9, 32], "hat": [119, 136, 137], "hatano": 137, "have": [6, 7, 9, 10, 24, 25, 36, 43, 49, 56, 58, 93, 100, 112, 115, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "havl\u00ed\u010dek": 119, "hbar": 135, "heavier": 115, "heidelberg": 137, "help": [105, 128, 135], "hen": 45, "henc": [3, 127, 134], "here": [0, 3, 6, 7, 9, 19, 26, 34, 36, 38, 44, 56, 58, 110, 115, 121, 127, 128, 129, 132, 134, 135], "hermitian": [26, 44, 136], "hessian": [97, 106, 110], "hessian_delai": [106, 110], "heurist": [88, 96, 99], "hi": [93, 112], "high": [24, 127, 133], "higher": [26, 56, 80, 95, 119, 130, 137], "highest": [32, 43], "highli": 9, "hilbert": 45, "histori": 11, "hit": 24, "hold": [13, 21, 54, 101, 112, 132], "hopkin": 110, "how": [0, 9, 24, 45, 49, 93, 106, 110, 112, 128, 129, 130, 132, 133, 134, 135, 137], "how_many_nonzero": 131, "howev": [9, 44, 45, 77, 78, 99, 107, 115, 127, 128, 131, 132, 134, 137], "hoyer": [15, 24, 29, 32, 132], "html": [86, 87, 93, 97, 99, 100, 104, 105, 108, 111, 112, 113, 127], "http": [7, 9, 24, 31, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 104, 105, 107, 108, 109, 111, 112, 113, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "hybrid": [49, 58, 100], "hyper": [56, 89], "hyperparamet": 56, "i": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 121, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "ibm": [9, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "id": [9, 12, 32, 129], "id_coeffici": [27, 44], "idea": 26, "ideal": [42, 108], "ident": [9, 13, 21, 24, 27, 106, 110], "identifi": [12, 15, 97], "idx": 31, "ieee": [79, 80, 110], "ignor": [9, 10, 19, 34, 36, 38, 45, 47, 49, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 132], "ii": [5, 127, 128, 129, 130, 136], "ij": [64, 70, 74, 135], "illustr": [129, 135, 137], "im": [63, 64, 69, 70, 72, 135, 136], "imag": [63, 64, 69, 70, 72, 114, 135], "imag_part_tol": [60, 61], "imagin": 132, "imaginari": [0, 5, 28, 51, 60, 61, 63, 67, 69, 72, 77, 78, 79, 122, 123, 136], "imaginarymclachlanprincipl": [5, 60, 135], "imaginarytimeevolv": [51, 60], "imaginaryvariationalprincipl": [60, 122], "implement": [5, 9, 10, 15, 19, 21, 24, 29, 32, 34, 45, 49, 56, 58, 60, 61, 77, 78, 92, 108, 110, 113, 115, 118, 119, 121, 127, 130, 131, 132, 134, 136, 137], "implicit": 95, "implicitli": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "import": [5, 6, 9, 10, 40, 44, 49, 55, 58, 93, 106, 110, 112, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "importerror": 133, "improv": [10, 15, 49, 82, 86, 96, 106, 109, 110, 119], "in_final_st": 12, "includ": [0, 6, 9, 10, 11, 15, 22, 24, 26, 28, 29, 31, 32, 42, 43, 46, 51, 52, 55, 60, 61, 78, 96, 97, 105, 110, 128, 132, 137], "incorpor": 137, "incorrect": 9, "increas": [15, 24, 44, 83, 106, 110, 115, 119], "increasingli": 89, "inde": 133, "independ": 137, "index": [7, 21, 132], "indic": [13, 15, 21, 22, 24, 29, 31, 32, 36, 38, 56, 60, 61, 93, 110, 112, 130, 135, 137], "indicatingthat": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "individu": [103, 115, 132, 137], "inequ": [96, 108], "inf": [92, 131], "infer": 112, "infidel": 40, "infin": 9, "infinit": 108, "info": 44, "inform": [0, 7, 9, 10, 13, 17, 21, 24, 26, 32, 33, 40, 42, 53, 66, 74, 75, 76, 81, 83, 93, 94, 99, 103, 106, 110, 112, 113, 115, 120, 127, 128, 129, 132, 134, 137], "informationpython": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "informationsoftwareversionqiskit2": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "ingredi": 127, "inherit": [12, 45], "init_circ": 135, "init_param_valu": [5, 135], "init_st": [55, 135], "initi": [9, 10, 28, 31, 40, 45, 46, 49, 51, 52, 53, 55, 56, 58, 60, 61, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 121, 132, 134, 135, 136, 137], "initial_guess": 40, "initial_hessian": [106, 110], "initial_paramet": [40, 60, 61, 134], "initial_point": [10, 45, 49, 56, 58, 92, 93, 106, 110, 112, 128], "initial_point_support_level": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "initial_pt": 128, "initial_st": [9, 10, 45, 53, 55, 60, 61, 134, 135, 137], "initial_step_s": 92, "inject": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "inner": 137, "input": [0, 9, 13, 21, 25, 26, 31, 42, 44, 53, 56, 106, 118, 120, 129, 130, 132, 133, 134, 136], "input_3sat_inst": 133, "insert": 55, "insert_barri": [9, 10, 55, 132], "insid": [112, 117], "inspect": [43, 128], "inspir": 115, "instal": [3, 85, 88, 89, 90, 91, 95, 96, 107, 109, 127], "instanc": [9, 10, 19, 24, 26, 34, 36, 38, 42, 43, 49, 55, 56, 58, 60, 61, 101, 112, 118, 119, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 137], "instanti": [9, 27, 43, 44, 70, 127, 128, 129, 130, 131, 132, 135, 136], "instead": [7, 9, 24, 27, 106, 110, 112, 115, 119, 127, 129, 132, 133, 136], "instruct": [3, 7, 42, 112, 129], "int": [6, 10, 13, 15, 21, 22, 24, 26, 29, 31, 32, 36, 40, 42, 43, 45, 49, 51, 52, 55, 56, 58, 60, 61, 65, 68, 71, 73, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 131, 137], "integ": [13, 16, 21, 24, 32, 45, 51, 52, 56, 65, 68, 71, 73, 80, 92, 106, 110, 118, 119, 132], "integr": [41, 121, 134], "intend": 9, "inter": 128, "interact": [135, 137], "interatom": 127, "interchang": [0, 19, 34, 127], "interest": [44, 131], "interfac": [0, 5, 14, 17, 19, 28, 34, 43, 46, 47, 60, 61, 93, 98, 112, 118, 121, 127, 134], "intermedi": [45, 49, 56, 58, 130, 137], "intern": [9, 10, 70, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 132], "interpol": 95, "interpret": [106, 110, 137], "interv": [15, 16, 18, 21, 22, 23, 26, 29, 30, 32, 33, 40, 44, 92], "introduc": [9, 12, 15, 32, 56, 129, 130, 132, 133, 135, 136], "introduct": [115, 128, 129, 137], "invalid": [63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80], "invari": 82, "invers": [15, 44, 106, 110, 137], "investig": [0, 134], "invok": 128, "involv": 110, "io": [88, 89, 90, 91, 93, 96, 107, 112, 127], "iprint": [97, 105], "ipynb": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "iqa": 29, "iqft": 15, "is_bounds_ignor": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "is_bounds_requir": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "is_bounds_support": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "is_good_st": [13, 15, 21, 24, 132], "is_gradient_ignor": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "is_gradient_requir": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "is_gradient_support": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "is_initial_point_ignor": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "is_initial_point_requir": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "is_initial_point_support": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "isaac": 42, "isn": [133, 137], "issu": 109, "iswap": [69, 70, 71], "item": [24, 131, 137], "iter": [10, 11, 15, 22, 23, 24, 25, 29, 30, 31, 40, 41, 56, 77, 78, 82, 83, 86, 92, 93, 97, 99, 100, 102, 104, 105, 106, 108, 110, 112, 115, 117, 128, 129, 130, 134, 136], "iterativeamplitudeestim": [9, 30], "iterativeamplitudeestimationresult": 29, "iterativephaseestim": 9, "iterativephaseestimationresult": 31, "its": [7, 9, 10, 12, 45, 56, 93, 95, 112, 127, 128, 131, 132, 133, 136, 137], "itself": 106, "iv": 110, "ix": [40, 135, 137], "iz": [5, 127, 128, 129, 130, 134, 135, 136, 137], "izaac": [72, 73, 83], "j": [15, 29, 45, 63, 65, 67, 68, 69, 71, 72, 73, 77, 79, 80, 82, 106, 110, 119, 131, 135, 136, 137], "jac": [49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "jacobian": [84, 94, 103, 108, 113, 114, 121], "jhuapl": 110, "jimmi": 82, "job": [9, 12, 15, 24, 29, 32, 42, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 110, 118, 119, 120, 122, 124, 126], "job_id": 12, "jobstatu": 12, "john": 110, "johnson": 107, "join": 137, "jone": [77, 78], "josh": 83, "json": [101, 112], "juli": 115, "just": [110, 128, 132, 136], "k": [22, 24, 29, 31, 36, 49, 56, 83, 97, 100, 105, 106, 110, 119, 121, 130, 132, 134, 136, 137], "k_": [29, 30], "k_i": 29, "k_p": 136, "kale": 82, "kandala": [110, 119], "keep": [27, 36, 40, 43, 77, 78, 130, 134, 137], "kei": [9, 27, 43, 44, 48, 50, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131, 137], "kept": [134, 137], "keyword": [9, 15, 22, 24, 26, 27, 29, 31, 32, 40, 42, 45, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 106, 118, 119, 127, 128, 131, 132], "killoran": [72, 73, 83], "kind": [15, 32], "kingma": 82, "kitagawa": 83, "kl": 136, "know": [128, 132, 137], "knowledg": [0, 24, 93, 112], "known": [24, 45, 87, 99, 132], "kraft": 108, "kth": [31, 56], "kumar": 82, "kwarg": [9, 12, 13, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 131, 132], "l": [24, 42, 49, 58, 89, 90, 97, 131, 132, 135, 137], "l_bfgs_b": [40, 105, 128, 134], "label": [128, 130, 131, 134, 135, 137], "lack": 9, "lambda": [26, 131, 134], "lambda_j": 26, "langl": [58, 64, 70, 74, 106, 118, 119, 134, 135, 136, 137], "languag": 110, "larg": [26, 108, 110, 128, 131, 134], "larger": [24, 26, 36, 43, 44, 55, 83, 129, 137], "largest": [10, 44], "larra\u00f1aga": 115, "last": [40, 94, 97, 105, 106, 110, 117, 132, 137], "last_avg": 110, "last_valu": 110, "later": [9, 127, 129, 132, 134, 135], "latest": [7, 88, 89, 90, 91, 96, 107], "latter": [10, 42, 107, 127, 129], "lattic": 137, "layer": [9, 13, 115], "layout": 131, "lbfgsb": 97, "lbl": [85, 95, 109], "lce_grad_result": 136, "ldot": [24, 137], "lead": [10, 106, 122, 124, 131, 132, 137], "learn": [0, 24, 82, 83, 93, 94, 106, 110, 117, 119, 127, 128, 134], "learning_r": [93, 94, 106, 110, 117, 134], "learningr": 94, "least": [29, 108], "leav": [42, 137], "left": [56, 135, 136, 137], "legend": [128, 130, 134, 135, 137], "len": [5, 110, 128, 131, 135, 137], "length": [11, 45, 49, 56, 58, 83, 92, 93, 130, 136], "leq": [21, 36, 97, 110], "less": [10, 22, 86, 93, 110, 121], "let": [106, 112, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "level": [15, 29, 30, 32, 63, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 136], "leverag": [0, 119, 128, 129, 135], "librari": [0, 5, 7, 8, 9, 10, 15, 24, 40, 88, 89, 90, 91, 93, 96, 106, 107, 110, 112, 115, 128, 129, 130, 131, 132, 133, 134, 135, 137], "licens": [3, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "lie": [10, 40, 55, 137], "lietrott": [55, 137], "life": 9, "like": [9, 10, 13, 14, 24, 25, 27, 43, 53, 63, 72, 94, 97, 103, 107, 127, 128, 131, 132, 134, 137], "likelihood": [15, 32, 33], "likelihood_ratio": [15, 32], "limegreen": 137, "limit": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 129, 137], "limits_": 136, "limits_pi": 136, "linalg": [60, 61, 93, 110, 112, 134, 137], "lincombestimatorgradi": [9, 122, 124, 136], "lincombqgt": [9, 122, 124, 136], "lincombsamplergradi": 9, "line": [9, 92, 97, 105], "linear": [24, 60, 61, 69, 70, 71, 86, 87, 97, 122, 124, 131, 135, 137], "linearli": [29, 77, 96], "linestyl": 135, "link": 127, "linspac": 137, "lint": 7, "list": [9, 10, 13, 19, 21, 22, 24, 32, 34, 36, 38, 41, 43, 44, 45, 47, 49, 53, 54, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 124, 126, 128, 129, 130, 131, 132, 134, 136, 137], "listordict": [53, 54, 62], "liter": [67, 68], "littl": 82, "ll": [127, 129, 132, 134, 135, 136], "load": 82, "load_dir": 82, "load_param": 82, "loc": [128, 130, 134, 135, 137], "local": [7, 9, 85, 88, 89, 90, 96, 105, 107, 109, 110, 119, 129], "log": [24, 128], "logarithm": 29, "logic": [0, 3, 9, 112, 132, 136], "long": [82, 133], "longer": [9, 129], "longitudin": 137, "look": [9, 45, 49, 56, 58, 127, 128, 130, 132, 133, 134, 137], "loop": [10, 93, 104, 112, 137], "loss": [40, 106, 110, 127, 134], "lov": 132, "lower": [56, 80, 82, 87, 92, 113, 119, 133], "lowest": [56, 130], "lpha": 115, "lr": [32, 82], "ls_optim": 92, "lse": [106, 110], "lse_solv": [60, 61, 106, 110], "lstsq": [60, 61], "lt": [127, 128, 132, 134], "lvert": 137, "lw": 137, "ly": 136, "m": [15, 24, 26, 29, 32, 45, 72, 73, 83, 100, 107, 119, 132, 134, 136], "m_": 136, "m_p": 136, "m_z": 135, "machin": [0, 105], "machine_precis": 113, "made": [3, 7, 9], "magn": 134, "magnet": [40, 110, 134, 135], "magnetization_op": 137, "magnetizations_gd": 134, "magnitud": [106, 110, 137], "magnu": 137, "mai": [0, 7, 9, 19, 26, 34, 42, 44, 45, 56, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 128, 131, 132, 135], "main": [7, 9, 10, 19, 34, 36, 38, 42, 43, 45, 47, 49, 56, 58, 104, 110, 115], "maintain": 9, "make": [9, 44, 89, 93, 112, 128, 129, 131, 136], "manag": [7, 26], "mani": [26, 42, 43, 99, 107, 110, 131], "manipul": [9, 27, 43, 77, 78], "manner": 9, "manual": [93, 112, 136], "map": [13, 21, 26, 27, 44, 53, 60, 61, 120, 129, 132], "mapsto": 132, "marecek": 45, "margin": 115, "mari": 136, "maria": 83, "mark": 132, "marker": 137, "masuo": 137, "match": [9, 11, 45, 49, 56, 58, 128, 129, 130, 131], "math": 137, "mathbb": [24, 136], "mathcal": [13, 21, 24, 29, 106, 132], "mathemat": [108, 137], "mathrm": [63, 64, 69, 70, 72, 74, 135], "matplotlib": [134, 137], "matric": [86, 92, 136, 137], "matrix": [36, 97, 106, 110, 131, 136, 137], "max": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131], "max_ev": [88, 89, 90, 91, 92, 96, 107], "max_evals_group": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "max_failed_rejection_sampl": 92, "max_grouped_ev": 9, "max_iter": 10, "max_prob": [16, 25], "max_process": 105, "maxfail": 109, "maxfev": [99, 100, 104], "maxfun": [97, 105], "maxim": [22, 40, 56, 106, 110], "maximum": [10, 11, 15, 16, 24, 25, 32, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 104, 105, 106, 107, 108, 109, 110, 113, 115, 128, 131], "maximumlikelihoodamplitudeestim": [9, 33], "maximumlikelihoodamplitudeestimationresult": 32, "maxit": [22, 82, 83, 85, 86, 87, 92, 93, 95, 97, 99, 100, 104, 106, 108, 109, 110, 112, 113, 115, 127, 128, 129, 134, 136], "maxmp": 109, "mayb": 127, "mayobtain": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "mclachlan": [122, 124, 135], "mcx_mode": 132, "mead": [9, 99, 107], "mean": [7, 11, 20, 21, 35, 37, 39, 41, 48, 50, 54, 56, 57, 58, 59, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 97, 105, 106, 110, 122, 123, 124, 125, 127, 128, 129, 131, 133, 137], "meant": 27, "measur": [13, 15, 16, 21, 22, 24, 25, 26, 29, 31, 32, 42, 44, 48, 49, 50, 110, 129, 132, 133, 136, 137], "measure_al": 136, "mechan": [24, 132], "media": 137, "memori": [36, 82, 97, 105], "mention": [132, 134], "mesh": 137, "meshgrid": 137, "messag": [1, 9, 86, 87, 92, 99, 104, 108, 113], "met": 83, "meta": [130, 132], "metadata": [20, 37, 45, 48, 49, 50, 56, 57, 58, 66, 75, 76, 81, 120], "method": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137], "metric": [126, 136], "metric_tensor": 126, "michael": 42, "middl": 137, "might": [0, 5, 9, 53, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 119, 120, 128, 132, 134], "migrat": 9, "min": 105, "min_": [58, 134], "min_gradient_norm": 92, "min_ratio": 29, "min_step_s": 92, "minim": [9, 10, 13, 21, 29, 32, 33, 40, 45, 49, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 122, 124, 130, 131, 135, 136], "minima": 89, "minimis": 56, "minimum": [10, 11, 19, 27, 32, 34, 35, 36, 38, 39, 43, 45, 47, 48, 49, 50, 56, 58, 59, 92, 93, 97, 99, 100, 105, 110, 115, 127, 128, 129], "minimum_eigensolv": [9, 10], "minimumeigensolv": [0, 10, 38, 48, 58], "minimumeigensolverresult": [34, 39, 59], "minu": [32, 41, 44], "minut": [134, 135], "mismatch": 92, "missingoptionallibraryerror": [85, 88, 89, 90, 91, 95, 96, 107, 109, 132, 133], "mitarai": 83, "mitig": [120, 129], "mixer": 45, "mle": [15, 16, 32], "mle_process": 16, "mode": [7, 77, 78], "model": [5, 40, 106, 109, 110, 115, 129, 135, 137], "modelspac": [106, 110], "modif": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "modifi": [9, 24, 56, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "modul": [9, 98, 127, 131, 135, 136], "molecul": [0, 110, 115, 127, 128, 129, 130], "moment": 82, "momentum": 83, "monitor": 128, "mont": 106, "more": [0, 7, 9, 15, 24, 89, 93, 107, 109, 112, 115, 127, 128, 129, 132, 133, 135, 137], "mosca": [15, 24, 29, 32, 132], "most": [7, 9, 13, 14, 24, 25, 27, 42, 43, 110, 131, 132, 133, 137], "most_likely_eigenvalu": 27, "most_likely_phas": 27, "mostli": 36, "move": 9, "mpl": [127, 130, 132, 134, 135, 136, 137], "much": [93, 106, 107, 110, 115], "multi": 42, "multidimension": 99, "multipl": [26, 105, 110], "multiplex1_reverse_dg": 137, "multipli": [9, 44, 92, 106, 110, 132, 137], "must": [3, 9, 13, 15, 24, 26, 27, 29, 32, 36, 38, 44, 45, 49, 53, 56, 58, 83, 86, 106, 110, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "mutat": [88, 96], "my": [107, 115], "my_minim": [49, 58], "mz_exp_val_r": 135, "mz_exp_val_re_eff": 135, "n": [24, 32, 36, 72, 73, 92, 93, 97, 105, 110, 119, 121, 131, 132, 134, 136, 137], "n_local": [127, 128, 129, 130, 131], "nabla": [93, 134], "nakaji": 22, "nakanishi": 100, "name": [10, 32, 49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "nannicini": 49, "naomichi": 137, "nathan": 83, "natur": [0, 10, 78, 106, 110, 115, 119, 127, 128, 129], "navig": 9, "ndarrai": [40, 41, 43, 45, 49, 54, 56, 58, 60, 61, 62, 66, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 122, 124, 126], "nearest": [92, 137], "nearli": [26, 27], "necessari": 135, "need": [6, 9, 26, 36, 44, 49, 58, 84, 93, 104, 112, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "neg": [26, 32, 60, 61, 93, 133], "neglect": [60, 61], "negoro": 83, "neighbor": [3, 40, 44, 134, 137], "neither": [13, 21, 110], "nelder": [9, 99, 107], "nelder_mead": 88, "neq": 132, "network": [0, 136], "networkx": 131, "neural": 0, "new": [7, 42, 115, 129, 137], "newer": [9, 133], "newli": 137, "newton": [97, 113], "next": [10, 40, 84, 94, 106, 110, 112, 117, 127, 128, 130, 134, 135, 136], "nfev": [93, 94, 102, 103, 110], "nielsen": [24, 42], "nisq": 137, "nit": [93, 94, 102, 103, 110, 112], "njev": [93, 94, 102, 103, 112], "nlopt": [3, 7, 9, 88, 89, 90, 91, 96, 107], "nlopt_algorithm": [88, 89, 90, 91, 96, 107], "nloptoptim": [88, 89, 90, 91, 96, 107], "nloptoptimizertyp": [88, 89, 90, 91, 96, 107], "node": 131, "node_color": 131, "nois": [5, 42, 82, 110, 127, 131, 137], "noise_factor": 82, "noise_model": 129, "noiseless": [43, 129], "noiseless_estim": 129, "noisemodel": [127, 129, 131], "noisi": [26, 82, 109, 127, 129], "noisy_estim": 129, "non": [32, 43, 53, 60, 61, 82, 85, 96, 97, 99], "none": [6, 9, 10, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 126, 127, 128, 133], "nonlinear": [85, 91, 96], "nonloc": 137, "nor": [9, 13, 21, 110], "norm": [83, 86, 92, 93, 94, 110, 112, 135], "normal": [5, 9, 44, 92, 93, 105, 106, 110, 112, 115, 133], "notabl": [9, 110], "notat": [32, 133], "note": [26, 49, 51, 52, 58, 93, 98, 100, 106, 108, 110, 117, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137], "notebook": [129, 130, 131, 133, 135], "notic": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "notimplementederror": [15, 32, 40], "notion": 136, "now": [0, 9, 127, 128, 129, 132, 133, 134, 135, 136, 137], "np": [5, 6, 40, 41, 45, 49, 54, 56, 58, 60, 61, 62, 92, 93, 97, 105, 106, 110, 112, 115, 117, 127, 128, 130, 131, 132, 134, 135, 136, 137], "npme": 131, "nrefer": 136, "num_eval_qubit": 15, "num_evaluation_qubit": [16, 26, 42, 43], "num_first_state_step": 23, "num_instability_tol": [60, 61], "num_iter": [11, 31], "num_nod": 131, "num_nonlocal_g": 137, "num_oracle_queri": [16, 18, 23, 30, 33], "num_paramet": [40, 106, 110, 134], "num_point": 92, "num_qubit": [5, 9, 24, 127, 129, 131, 132, 134, 135, 137], "num_solut": [24, 132], "num_state_qubit": 32, "num_step": 23, "num_t_step": 121, "num_timestep": [40, 51, 52, 55, 60, 61, 134, 135, 137], "number": [6, 9, 10, 11, 15, 16, 18, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 36, 40, 42, 43, 45, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 127, 128, 129, 130, 131, 134, 135, 136], "numer": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 136], "numpi": [5, 36, 37, 38, 39, 40, 43, 93, 106, 109, 110, 112, 128, 130, 131, 132, 134, 135, 136, 137], "numpy_solv": [128, 129], "numpyeigensolv": [9, 130], "numpyeigensolverresult": 36, "numpyminimumeigensolv": [0, 128, 129, 131], "numpyminimumeigensolverresult": 38, "nutshel": 132, "nx": 131, "ny": 42, "o": [24, 26, 32, 63, 69, 72, 106, 119, 134, 136, 137], "ob": 134, "obj": 131, "obj_fun": 92, "object": [9, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 40, 41, 42, 43, 44, 45, 49, 53, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 92, 93, 96, 98, 99, 101, 103, 106, 107, 108, 109, 110, 112, 118, 119, 120, 127, 128, 131, 132, 134], "objective_qubit": [13, 15, 21], "objective_valu": [49, 131], "observ": [5, 19, 34, 36, 38, 40, 41, 54, 56, 58, 60, 61, 62, 63, 67, 69, 72, 77, 79, 106, 110, 127, 132, 134, 135, 136, 137], "observables_order4": 137, "observed_fish": [15, 32], "obtain": [26, 27, 44, 48, 50, 55, 62, 115, 132, 133, 135], "occur": [9, 10, 83], "oct": [79, 80], "octob": 9, "od": [60, 61, 121], "ode_solv": [60, 61], "odesolv": [60, 61, 121], "off": 127, "offer": [60, 61, 131, 132, 136], "offset": [67, 68, 79, 80, 131, 136], "often": [6, 24, 86, 127], "oi": 32, "oldest": [9, 10], "omega": [31, 136], "omega_k": 136, "omit": [26, 31, 42], "onc": [9, 10, 40, 45, 49, 56, 58, 100, 112, 128, 129], "one": [9, 10, 24, 26, 41, 42, 44, 49, 56, 58, 92, 93, 97, 104, 105, 106, 110, 112, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137], "ones": [9, 86, 137], "onli": [0, 3, 6, 9, 13, 21, 24, 26, 27, 29, 36, 38, 43, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 91, 97, 105, 106, 110, 127, 128, 129, 132, 135, 137], "onlin": 110, "onodera": 32, "onto": [5, 40, 134], "op": 132, "oper": [0, 9, 10, 11, 13, 15, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 106, 115, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136], "operand": 24, "opt": [85, 95, 109, 115], "optim": [7, 9, 10, 11, 13, 24, 40, 45, 47, 48, 49, 50, 56, 57, 58, 59, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 127, 128, 129, 130, 132, 137], "optima": [96, 105], "optimal_circuit": [11, 50, 57, 59, 127, 128], "optimal_num_iter": [24, 132], "optimal_paramet": [11, 50, 57, 59, 127, 128], "optimal_point": [11, 50, 57, 59, 127, 128], "optimal_valu": [11, 50, 57, 59, 127, 128, 136], "optimization_level": [9, 127, 131, 132], "optimizer1": 128, "optimizer_ev": [11, 50, 59, 127, 128], "optimizer_result": [11, 50, 57, 59, 127, 128], "optimizer_tim": [11, 50, 57, 59, 127, 128], "optimizerclass": [101, 112], "optimizerresult": [49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128], "optimizerst": 94, "option": [3, 9, 10, 15, 19, 22, 24, 26, 29, 31, 32, 34, 36, 38, 40, 41, 42, 45, 47, 49, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 129, 130, 136], "optuna": [93, 112], "oracl": [13, 15, 16, 18, 23, 24, 25, 30, 32, 33, 131, 133], "oracle_evalu": [25, 132], "orbit": 10, "order": [15, 24, 26, 40, 44, 55, 80, 82, 93, 106, 110, 115, 119, 127, 130, 131, 132, 133, 135, 137], "ordinari": 49, "org": [24, 31, 83, 86, 87, 92, 97, 99, 100, 104, 105, 108, 110, 111, 113, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "orient": 137, "origin": [9, 15, 22, 29, 32, 44, 107, 108, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "orthogon": [56, 135], "oscil": 137, "other": [10, 24, 43, 44, 93, 99, 103, 112, 127, 128, 133, 136, 137], "otherwis": [10, 13, 19, 21, 34, 36, 38, 45, 47, 49, 55, 56, 58, 65, 73, 93, 112, 132], "otim": [24, 119, 132], "our": [5, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137], "out": [0, 3, 7, 9, 24, 43, 100, 127, 131, 132, 133, 137], "outcom": [6, 13, 21, 32, 131], "outer": 131, "outlin": 136, "output": [25, 29, 42, 97, 105, 106, 109, 132, 136], "outsid": 22, "over": [9, 24, 38, 48, 50, 56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 83, 106, 110, 112, 119, 128, 130, 134, 135, 137], "overal": [41, 48], "overlap": [40, 56, 118, 119, 130, 134, 135], "overrid": [74, 80, 119, 128], "overridden": 9, "overview": [110, 127], "overwritten": [82, 106, 110], "own": [7, 9, 10, 45, 129, 130], "p": [15, 24, 29, 32, 40, 41, 45, 49, 72, 73, 105, 115, 132, 133, 134, 136], "p_1": 136, "p_2": 136, "p_j": 136, "pack": 134, "packag": [0, 3, 7, 9, 115, 131], "page": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "pages242": 110, "pair": [0, 4, 31, 118, 120], "paper": [56, 130, 131, 134], "parallel": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "param": [11, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 83, 102, 130, 136], "param_tol": 83, "param_v": 136, "param_valu": [122, 124, 126], "param_value_map": 53, "paramet": [5, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 137], "parameter": [40, 45, 48, 49, 50, 56, 58, 64, 70, 74, 77, 78, 83, 106, 127, 134, 136], "parameter_prefix": 10, "parameter_valu": [62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80], "parametervector": [134, 136], "parametervectorel": [127, 128], "parametr": [115, 118, 119, 122, 124, 126, 136], "paramshiftestimatorgradi": [9, 136], "paramshiftsamplergradi": [9, 136], "parent": [9, 12], "pars": [132, 133], "part": [0, 44, 60, 61, 77, 78, 88, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "partial": [49, 58, 135, 136], "partial_i": [64, 70, 74], "partial_j": [64, 70, 74], "partial_k": 136, "partial_l": 136, "particl": [19, 34, 36, 38, 56, 58], "particular": [24, 56, 118, 119, 128, 133], "particularli": [56, 128], "partit": 131, "pass": [9, 13, 15, 22, 24, 26, 29, 31, 32, 40, 42, 44, 45, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 127, 128, 129, 130, 131, 132, 137], "passmanag": [127, 131, 132], "past": 82, "path": [9, 128], "pauli": [26, 40, 44, 55, 83, 106, 115, 127, 129, 131, 135, 136, 137], "pauli_list": 131, "pauli_sum": 44, "pauli_two_design": [106, 110], "paulievolutiong": [134, 137], "pauliop": 44, "pcolor": 137, "pdf": [31, 92], "pe_circuit": 42, "pearson": 29, "pedro": 115, "per": [31, 33, 56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 92, 97, 101, 106, 110, 112, 115, 118, 119, 132], "percentag": [33, 115], "perform": [5, 10, 24, 26, 28, 36, 40, 46, 51, 52, 56, 83, 86, 93, 94, 97, 99, 100, 103, 104, 105, 106, 108, 111, 112, 113, 115, 127, 133, 134, 135, 137], "perhap": [107, 128], "person": 115, "perturb": [79, 80, 93, 106, 110, 136], "perturbation_dim": [106, 110], "peruzzo": 58, "ph": [15, 22, 24, 29, 31, 32, 119, 132], "phase": [13, 15, 21, 22, 24, 26, 27, 29, 31, 32, 42, 43, 44, 64, 70, 78, 110, 132], "phase_estimation_circuit": 15, "phase_estimation_result": 27, "phase_estimation_scal": 27, "phase_fix": [64, 70, 78], "phase_oracl": [9, 132, 133], "phaseestim": [9, 15, 26, 27, 31, 43], "phaseestimationresult": [27, 42], "phaseestimationscal": [26, 27], "phaseestimatorresult": [27, 43], "phaseoracl": [9, 13, 132, 133], "phaseoracleg": [9, 13, 132, 133], "phenomena": 136, "phi": [27, 44, 106, 118, 119, 134], "phi_j": 42, "phy": 83, "physic": [136, 137], "physrevappli": 45, "pi": [5, 15, 26, 43, 44, 45, 49, 56, 58, 106, 110, 135, 136, 137], "pip": [3, 7, 85, 95, 109], "plai": 26, "platform": 7, "pleas": [85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 104, 105, 107, 108, 109, 110, 111, 113, 127, 129, 130, 132], "plot": [128, 129, 130, 133, 134, 135], "plot_histogram": 133, "plt": [134, 137], "plu": [77, 94], "pm": [9, 26, 127, 131, 132, 136], "pm45": 137, "pm90": 137, "po": 131, "point": [9, 10, 11, 15, 32, 40, 45, 49, 50, 56, 57, 58, 59, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 132, 136], "polyfit": 110, "polynomi": 132, "popul": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "popular": 128, "posit": [9, 26, 51, 52, 53, 67, 68, 79, 80, 86, 106, 110, 128], "possess": [48, 50], "possibl": [0, 3, 9, 10, 42, 44, 56, 129, 131, 132, 133], "possibli": 42, "post": [13, 15, 16, 18, 21, 23, 25, 30, 32, 33, 132], "post_process": [13, 16, 18, 21, 23, 25, 30, 33], "potenti": [9, 105], "power": [22, 24, 25, 29, 30, 32, 33, 93, 106, 110, 132], "power_law": 93, "pp": [79, 80, 110, 132], "practic": [42, 137], "preced": [63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79], "precis": [29, 51, 52, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 87, 108, 113, 129, 134], "precondit": 110, "precondition": [106, 110], "predefin": 115, "prefer": [5, 56, 99], "prepar": [13, 17, 21, 26, 31, 40, 42, 49, 58, 106, 118, 119, 134, 135, 136, 137], "prepend": [9, 10, 45], "preprint": 100, "presenc": [5, 27, 110], "present": [0, 26, 110, 136, 137], "preserv": 134, "preset_passmanag": [9, 127, 131, 132], "press": [24, 42], "pretti": 134, "prevent": [26, 106, 110], "previou": [40, 56, 83, 86, 93, 115, 128, 129, 130, 135], "previous": [9, 56, 130], "previous_param": 83, "primit": [0, 9, 10, 15, 22, 26, 29, 31, 32, 40, 42, 45, 49, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 106, 110, 115, 118, 119, 120, 128, 130, 131, 132, 133, 134, 135, 137], "primitivejob": 12, "primitivesv2": 9, "princip": 45, "principl": [60, 61, 122, 123, 124, 125, 126, 135], "print": [9, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "print_opt": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "prior": [9, 24, 128], "prioriti": [80, 119], "probabilist": 115, "probabilities_dict": [131, 137], "probabl": [0, 15, 16, 22, 23, 24, 25, 26, 29, 42, 43, 44, 48, 49, 50, 65, 68, 71, 73, 80, 81, 133, 136, 137], "problem": [0, 3, 9, 13, 14, 15, 17, 21, 22, 24, 26, 28, 29, 32, 40, 45, 46, 51, 52, 53, 55, 60, 61, 85, 86, 87, 92, 95, 96, 97, 99, 106, 108, 109, 110, 127, 128, 129, 131, 132, 134, 135, 137], "proce": 97, "proceed": [110, 129, 132], "process": [9, 13, 15, 16, 18, 21, 23, 25, 30, 32, 33, 93, 94, 105, 110, 112, 115, 117, 129, 132, 136], "processor": 58, "prod_j": 137, "produc": [15, 22, 24, 26, 29, 31, 32, 42, 45, 55, 69, 70, 71, 106, 118, 119, 129], "product": [41, 55, 134], "product_formula": 55, "productformula": 55, "profil": 128, "program": [7, 108], "progress": 128, "proj": [97, 105], "project": [5, 7, 40, 113, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137], "projector": 119, "proof": 107, "propag": 126, "properti": [6, 11, 15, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 82, 93, 102, 129, 131, 132], "proport": 93, "propos": [22, 29, 96, 106, 110, 132], "protocol": [40, 45, 49, 58, 98], "provid": [0, 3, 5, 9, 10, 12, 13, 15, 22, 24, 28, 29, 31, 32, 40, 42, 45, 46, 51, 52, 53, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 93, 106, 109, 110, 112, 115, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 136], "pse_grad_result": 136, "psi": [26, 28, 40, 42, 46, 49, 51, 52, 56, 58, 64, 70, 74, 118, 119, 135, 136, 137], "pss_grad_result": 136, "public": 0, "pure": [64, 70, 74, 136, 137], "purpos": [9, 12, 137], "put": [127, 129, 133], "pvqd": [9, 119, 134], "pvqdresult": 134, "pylab": [128, 129, 130, 135], "pypi": 7, "pyplot": [134, 137], "python": [7, 9, 115, 133], "q": [13, 21, 22, 24, 29, 32, 132, 136], "qae": [15, 22, 29, 32], "qaoa": [9, 115, 128, 131], "qasm": [110, 129], "qat4chem": [85, 95, 109], "qc": 136, "qc_sampl": 136, "qfi": [75, 122, 124, 126], "qfi_": 136, "qfi_result": 136, "qft": 15, "qgt": [64, 70, 74, 76, 78, 122, 123, 124, 125, 126, 135], "qgt_": 136, "qgt_result": 136, "qisk": 9, "qiskit": [3, 5, 7, 9, 10, 15, 24, 40, 42, 49, 55, 56, 58, 98, 106, 110, 111, 115, 128, 130, 131, 132, 133, 134, 135, 137], "qiskit_a": [127, 129, 131], "qiskit_algorithm": [6, 9, 10, 40, 49, 55, 58, 60, 61, 92, 93, 105, 106, 110, 112, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "qiskit_copyright": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "qiskit_ibm_runtim": 127, "qiskit_version_t": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "qiskiterror": 9, "qn": 106, "qnspsa": 9, "qpe": [22, 26, 31, 32, 42, 43], "qpt": 135, "quadrat": [24, 78, 85, 110], "qualiti": 45, "quant": [3, 7, 15, 22, 24, 29, 31, 32, 85, 95, 109, 119, 132], "quantiti": [60, 61, 134], "quantum": [3, 4, 5, 8, 9, 10, 15, 22, 24, 26, 28, 29, 31, 32, 40, 41, 42, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 83, 100, 105, 106, 110, 115, 118, 119, 122, 124, 126, 127, 129, 132, 133], "quantum_info": [5, 40, 55, 106, 110, 115, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137], "quantumcircuit": [9, 10, 13, 15, 21, 22, 24, 26, 29, 31, 32, 40, 41, 42, 45, 49, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 106, 118, 119, 122, 124, 126, 127, 128, 131, 132, 134, 136, 137], "quantuminst": 9, "quantumregist": 136, "quasi": [15, 48, 50, 65, 68, 71, 73, 80, 97, 131, 136], "quasidistribut": 131, "qubit": [9, 13, 15, 16, 17, 19, 21, 22, 24, 26, 31, 32, 34, 36, 38, 42, 43, 45, 47, 49, 56, 58, 77, 78, 119, 127, 128, 129, 130, 131, 132, 134, 136, 137], "qubit_op": 131, "queri": [14, 16, 18, 23, 24, 30, 33], "quickli": 137, "quit": [115, 128, 133, 134], "r": [7, 32, 122, 124, 126, 131, 134, 135, 136, 137], "radian": 137, "radiu": 92, "rais": [9, 10, 11, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 83, 85, 88, 89, 90, 91, 92, 93, 95, 96, 102, 107, 109, 110, 117, 119, 122, 124, 126], "rand": [90, 110], "random": [6, 9, 24, 40, 45, 49, 56, 58, 79, 80, 88, 90, 92, 93, 105, 106, 110, 112, 115, 127, 128, 132, 136], "random_layout": 131, "random_se": [6, 9, 92, 105, 106, 110, 115, 128, 129, 130, 131], "randomli": 88, "rang": [5, 44, 82, 110, 128, 130, 131, 135, 137], "rangl": [21, 22, 24, 26, 28, 29, 40, 42, 46, 49, 51, 52, 56, 58, 64, 70, 74, 106, 118, 119, 132, 134, 135, 136, 137], "rank": 96, "rare": 9, "rate": [82, 93, 94, 106, 110, 117, 134], "rather": [9, 26, 27, 128, 136], "ratio": [29, 30], "raw": [44, 120], "raw_fidel": 120, "raymond": 32, "rcparam": [128, 129, 130], "rdbu": 137, "re": [9, 63, 64, 69, 70, 72, 74, 127, 129, 134, 135, 136], "reach": [9, 24, 99, 104, 105, 109], "read": [6, 9, 10, 40, 42, 43, 44, 45, 49, 56, 58], "readabl": 132, "readi": [127, 128, 130], "readout": [43, 44], "readthedoc": [88, 89, 90, 91, 93, 96, 107, 112], "real": [0, 5, 40, 46, 52, 55, 61, 63, 64, 67, 69, 70, 72, 77, 78, 79, 110, 124, 125, 127, 128, 129, 130, 134, 136], "realist": 129, "realmclachlanprincipl": [61, 135], "realtimeevolv": [40, 52, 55, 61], "realvariationalprincipl": [61, 124], "reason": [56, 87, 128], "recal": 44, "receiv": [11, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 102], "recent": [7, 133], "recommend": [9, 110, 113, 133], "reconstruct": [95, 101, 112], "record": [24, 42], "recov": [26, 27, 44], "rectangl": [89, 90], "recurs": 137, "reddi": 82, "reduc": [44, 134, 135], "reduct": 92, "ref": [9, 26, 40], "ref_valu": [128, 129, 130], "refer": [0, 7, 9, 13, 15, 21, 22, 24, 26, 29, 32, 40, 42, 45, 49, 53, 58, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 119, 127, 128, 129, 130, 131, 132, 134, 136], "refin": [56, 97], "reflect": [13, 24, 132], "reflection_qubit": 132, "regard": [0, 136], "regardless": [9, 110], "region": 87, "regist": [42, 43, 44], "regular": [106, 110], "reinstal": 7, "rel": [44, 104, 113, 129], "relat": 128, "relev": [17, 60, 61, 112, 137], "reli": [9, 10, 29, 32, 82, 127], "reliabl": 26, "remain": [106, 110], "rememb": 137, "remot": 129, "remov": [9, 137], "remove_ident": 10, "rep": [5, 10, 40, 45, 55, 106, 110, 115, 130, 131, 134, 135, 137], "repeat": [24, 112], "repetit": [55, 132, 135], "replac": [9, 127, 135, 137], "repositori": 7, "repres": [13, 21, 26, 31, 36, 42, 43, 44, 48, 50, 103, 117, 132, 133, 135, 136, 137], "represent": [42, 132, 136, 137], "reproduc": [6, 9, 92, 105, 106, 110, 115], "request": [36, 109], "requir": [0, 7, 9, 10, 13, 19, 21, 22, 24, 27, 32, 34, 36, 38, 40, 43, 49, 53, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 121, 127, 130, 132, 133], "resampl": [106, 110], "rescal": [21, 22, 82], "research": 0, "reserv": 9, "reset": 129, "reset_interv": 100, "resilience_level": 129, "resolut": 26, "resolv": 9, "resourc": 131, "respect": [5, 15, 25, 32, 44, 63, 67, 69, 72, 77, 79, 118, 119, 122, 124, 126, 133, 136, 137], "rest": 110, "restart": 129, "restrict": [15, 44, 110], "result": [6, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137], "result1": [128, 129], "result_class": 136, "result_gd": 134, "resultt": 12, "retain": [107, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "retriev": [11, 27, 50, 57, 59], "return": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 122, 124, 126, 127, 131, 132, 133, 134, 136, 137], "return_count": 32, "rev": 83, "revers": [77, 78, 136], "reverseestimatorgradi": 135, "reverseqgt": 135, "rhobeg": 87, "right": [93, 121, 128, 130, 132, 135, 136, 137], "rightarrow": 24, "rk45": 5, "robert": 49, "robust": [99, 107, 109], "role": 26, "root": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "roptim": 128, "rotat": [5, 45, 83, 122], "rotation_block": [128, 129, 130], "round": [31, 60, 61, 92, 137], "routin": [10, 40, 93, 102, 106, 110, 134], "row": 92, "royalblu": 134, "rte": 137, "rtev": 135, "rule": [40, 72, 73, 88, 96, 122, 124, 126, 134], "run": [7, 8, 9, 12, 13, 14, 15, 17, 21, 22, 24, 26, 27, 29, 31, 32, 40, 42, 43, 45, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 92, 105, 106, 110, 115, 118, 119, 128, 129, 130, 131, 133, 134, 136], "runarsson": 96, "runtim": [9, 10, 115, 127, 129], "runtimeerror": 92, "rust": 9, "rx": [69, 70, 71, 72, 73, 77, 78, 134, 136], "rxx": [69, 70, 71, 72, 73], "ry": [69, 70, 71, 72, 73, 77, 78, 127, 128, 129, 130, 131, 132, 136], "ryi": [69, 70, 71, 72, 73], "rz": [69, 70, 71, 72, 73, 77, 78, 129, 130, 136, 137], "rzx": [69, 70, 71, 72, 73], "rzz": [69, 70, 71, 72, 73, 134], "s_0": 132, "s_f": [24, 132], "sacrif": 106, "sai": [127, 136], "said": [127, 131, 132], "same": [0, 6, 7, 9, 25, 26, 27, 83, 93, 105, 106, 110, 112, 115, 127, 128, 129, 131, 133, 135], "sampl": [15, 16, 24, 25, 26, 31, 42, 45, 47, 48, 49, 50, 65, 68, 71, 73, 80, 81, 92, 106, 110, 115, 127, 129, 132], "sample_from_iter": [24, 132], "sample_most_lik": 131, "sample_point": 92, "sample_set": 92, "sample_set_i": 92, "sample_set_x": 92, "sample_size_factor": 92, "sampler": [0, 9, 15, 22, 24, 26, 29, 31, 32, 40, 42, 45, 49, 65, 68, 71, 73, 80, 106, 118, 119, 130, 131, 132, 133, 134], "samplergradi": [65, 81], "samplerv1": 9, "samples_process": 16, "sampling_radiu": 92, "sampling_vq": 131, "samplingminimumeigensolv": 49, "samplingminimumeigensolverresult": [9, 45, 47, 49, 50], "samplingvq": [9, 45, 50, 131, 136], "sandwich": 132, "sanjiv": 82, "sashank": 82, "sat": 132, "satisfi": [36, 43, 100, 127, 131, 132, 133], "satyen": 82, "save": 82, "save_param": 82, "sbplx": 9, "sc": [134, 137], "scalar": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 121], "scale": [21, 26, 27, 29, 44, 77, 78, 110, 113, 128], "scale_phas": 44, "scaling_factor": 21, "schedul": [32, 33, 83], "scheme": [63, 72, 93], "schroedig": 5, "schroeding": 5, "schr\u00f6dinger": [122, 124, 135, 137], "schuld": [69, 70, 71, 72, 73, 83, 136], "scienc": 137, "scikit": [3, 7, 85, 95, 109], "scipi": [5, 9, 36, 49, 56, 58, 60, 61, 86, 87, 97, 98, 99, 100, 104, 105, 108, 111, 113, 121, 134, 136, 137], "scipyimaginaryevolv": 135, "scipyoptim": [86, 87, 97, 99, 100, 104, 105, 108, 113], "scipyrealevolv": 135, "scope": 129, "scratch": 129, "sdg": [69, 70, 71], "search": [22, 24, 32, 33, 38, 56, 88, 89, 92, 93, 95, 99, 112, 115, 132, 133], "second": [32, 40, 42, 64, 70, 97, 99, 106, 110, 118, 119, 131, 137], "second_ord": 110, "second_order_formula": 137, "section": [3, 24, 110, 128, 132, 136], "see": [3, 7, 15, 24, 31, 40, 83, 90, 93, 99, 100, 104, 106, 108, 109, 110, 112, 113, 119, 121, 127, 128, 130, 132, 134, 136, 137], "seed": [6, 9, 79, 80, 92, 105, 106, 110, 115, 127, 129, 130, 131, 132, 134, 136], "seem": [107, 115], "seen": [9, 112, 127, 128, 131, 133], "select": [9, 10, 29, 40, 43, 60, 61, 115, 128, 134, 135, 137], "self": [92, 110, 133], "send": [101, 112, 117], "sep": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "separ": [9, 127, 131], "sequenc": [10, 41, 56, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 97, 107, 118, 119, 120, 121, 122, 124, 126, 137], "sequenti": [100, 104, 108, 137], "seri": [9, 106, 110, 127], "serial": [101, 112], "serializ": [101, 112], "server": [101, 112], "set": [0, 1, 3, 9, 10, 11, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 127, 128, 129, 130, 131, 132, 134, 135], "set_max_evals_group": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "set_opt": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "set_xlabel": 137, "set_ylabel": 137, "setup": [40, 106], "sever": [108, 130, 131, 132], "shallow": 0, "shanno": 97, "shape": [121, 137], "share": 105, "sharex": 137, "shift": [26, 27, 40, 44, 72, 73, 131, 134], "ship": 127, "short": [8, 9, 106, 110, 115], "shorter": 135, "shorthand": 32, "shot": [11, 16, 18, 23, 30, 33, 35, 39, 43, 59, 65, 68, 71, 73, 80, 81, 118, 119, 120, 127, 129, 134, 137], "should": [7, 9, 13, 15, 22, 24, 26, 29, 31, 32, 45, 49, 55, 56, 92, 93, 105, 106, 110, 112, 115, 121, 122, 124, 126, 129, 130, 133, 134, 135], "show": [9, 128, 129, 131, 134, 135, 137], "showcas": 9, "shown": [9, 129, 131, 132, 133], "side": [121, 122, 124, 135], "sigma_": [136, 137], "sigma_i": 137, "sign": 137, "signatur": [36, 38, 49, 58, 121], "signific": 10, "significantli": [10, 106], "similar": [22, 128, 135, 136], "similarli": [9, 56, 135], "simpl": [97, 130, 132, 135], "simplest": 7, "simplex": 99, "simpli": [9, 56, 96, 127, 128, 129], "simplic": 128, "simplifi": 137, "simul": [0, 9, 15, 16, 18, 23, 30, 33, 43, 51, 52, 77, 105, 110, 127, 129, 134, 135, 136, 137], "simultan": [79, 80, 83, 86, 97, 105, 106, 108, 110, 111, 113, 136], "sin": [15, 137], "sinc": [7, 9, 40, 128, 131, 132, 133, 134], "singl": [9, 21, 32, 40, 43, 45, 55, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 118, 119, 121, 132, 136, 137], "site": [40, 110, 137], "situat": 110, "size": [36, 67, 68, 77, 78, 79, 80, 83, 86, 87, 92, 93, 97, 108, 112, 113, 115, 121, 131, 137], "size_gen": 115, "skquant": [85, 95, 109], "slice": 137, "slightli": [127, 137], "slope": 110, "slsqp": [9, 10, 127, 128, 130], "small": [26, 44, 77, 78, 93, 106, 110, 115, 128, 132, 137], "smaller": [10, 15, 24, 32, 36, 89, 93, 106, 110, 127, 137], "smallest": [38, 44, 127], "smooth": 92, "snapshot_dir": 82, "snippet": 40, "snobfit": [7, 9], "so": [9, 19, 24, 26, 27, 34, 36, 38, 43, 44, 56, 58, 89, 93, 94, 103, 115, 117, 127, 128, 129, 131, 132, 134], "softwar": [85, 95, 109], "sol": [131, 135], "sole": 32, "soloviev": 115, "solut": [3, 24, 45, 56, 85, 86, 104, 109, 115, 127, 128, 130, 131, 132, 137], "solv": [0, 24, 26, 60, 61, 86, 95, 97, 106, 110, 130, 132, 135, 137], "solver": [9, 10, 58, 60, 61, 86, 87, 97, 99, 100, 104, 105, 106, 108, 110, 111, 113, 121, 122, 124], "some": [0, 7, 9, 13, 21, 90, 92, 105, 106, 107, 110, 115, 127, 129, 132, 137], "sometim": [9, 24, 44], "sort": 24, "sourc": [1, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "space": [45, 93, 99, 106, 110, 112, 119, 121], "spall": [79, 80, 110], "spars": [82, 137], "sparsepauliop": [5, 26, 40, 44, 55, 110, 127, 128, 129, 130, 131, 134, 135, 136, 137], "speak": 26, "specif": [0, 1, 7, 9, 13, 21, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 127, 128, 129, 132, 135], "specifi": [9, 10, 13, 15, 21, 22, 24, 26, 29, 32, 40, 45, 49, 58, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 92, 106, 110, 127, 129, 131, 133, 134, 137], "spedalieri": 45, "speed": [106, 135], "speedup": [24, 135], "sphere": [92, 136], "spin": [134, 135, 137], "spirit": [93, 112], "spmatrix": 36, "spread": 42, "springer": 137, "spsa": [49, 58, 79, 80, 106, 127, 129], "spsae_grad_result": 136, "spsaestimatorgradi": [9, 136], "spsasamplergradi": 9, "sqrt": [24, 113, 132, 135], "sqsnobfit": [7, 109], "squar": [36, 56, 108], "stability_const": [106, 110], "stabl": [32, 93, 106, 109, 110, 112], "stand": 135, "standalon": 9, "standard": [5, 15, 41, 54, 62, 93, 106, 110, 119, 132, 136, 137], "start": [8, 40, 45, 56, 88, 93, 97, 106, 110, 112, 127, 128, 129, 132, 137], "stat": 137, "state": [5, 9, 10, 12, 13, 14, 15, 17, 19, 21, 24, 25, 26, 28, 31, 34, 36, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 70, 74, 84, 93, 94, 103, 106, 110, 112, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137], "state_fidel": [0, 40, 130, 134], "state_grad": 136, "state_prepar": [13, 15, 21, 26, 31, 32, 42, 132], "state_vector": 131, "statefidel": [120, 130], "statefidelityresult": [118, 119], "statement": 9, "statevector": [9, 13, 15, 16, 18, 23, 26, 30, 32, 33, 53, 54, 77, 78, 127, 129, 132, 134, 135, 137], "statevectorestim": [9, 10, 40, 55, 106, 110, 127, 128, 130, 134, 135, 136, 137], "statevectorsampl": [9, 40, 106, 115, 130, 131, 132, 133, 134, 136], "static": [15, 24, 32, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 132], "stationari": [82, 99], "statist": 29, "statu": 12, "std": [128, 129], "std_bound": 115, "steepest": 97, "stefano": 40, "step": [23, 40, 41, 45, 49, 52, 55, 56, 57, 58, 62, 82, 83, 86, 92, 93, 94, 97, 103, 106, 108, 110, 112, 113, 115, 121, 127, 128, 130, 131, 132, 134, 135, 137], "step_siz": 121, "step_size_multipli": 92, "steppabl": 112, "steppableoptim": 93, "stepsiz": [93, 94, 106, 110], "steven": 107, "still": [0, 9, 106, 110, 127, 128, 129, 131, 132, 134], "stoc": 132, "stochast": [79, 80, 82, 96, 106, 110, 115, 136], "stop": [92, 93, 97, 99, 104, 105, 108, 109, 112, 113], "stopiter": 117, "store": [27, 43, 82, 103, 112, 120, 128, 130, 134, 135, 137], "store_intermediate_result": [128, 129], "str": [10, 12, 13, 15, 19, 21, 22, 24, 26, 27, 29, 31, 32, 34, 36, 38, 40, 42, 43, 45, 47, 49, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 92, 106, 111, 118, 119, 120], "strategi": 96, "string": [9, 13, 21, 26, 27, 42, 43, 60, 61, 131, 132, 133, 137], "strongli": 133, "structur": [45, 136], "stub": 127, "stuck": 105, "studi": 137, "style": 106, "sub": [42, 135], "subcompon": 56, "subject": 113, "submit": 137, "subplex": 107, "subplot": 137, "subroutin": [108, 130, 132], "subsequ": 9, "subspac": [45, 107], "succe": 24, "succeed": 132, "success": [23, 56, 86, 130, 132, 137], "success_prob": 23, "successfulli": 12, "suffici": [26, 32, 92], "suggest": 137, "suit": 110, "suitabl": [8, 44, 135], "sum": [26, 44, 56, 127, 131, 136, 137], "sum_": [119, 131, 135, 137], "sum_i": [135, 137], "sum_j": [26, 42, 137], "sum_pm_p": 136, "summar": 24, "summedop": 44, "superposit": [24, 132], "supersed": 9, "supervis": 119, "supplementari": 110, "suppli": [9, 10, 19, 34, 36, 38, 56, 58, 93], "support": [0, 7, 9, 10, 15, 19, 21, 24, 29, 32, 34, 36, 38, 40, 45, 47, 49, 55, 56, 58, 63, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 121, 128, 132, 133, 136], "support_complex": 121, "supported_g": [69, 70, 71, 72, 73, 77, 78], "supports_aux_oper": [10, 19, 34, 36, 38, 45, 47, 49, 55, 56, 58], "supportsfloat": [97, 105], "suptitl": 137, "sure": 131, "suzuki": [32, 55, 137], "suzukitrott": 137, "sv": 137, "swap": [69, 70, 71, 137], "sweep": [77, 78], "switch": [9, 134], "sx": 129, "symmetr": [86, 106, 110], "symposium": 132, "syntax": [9, 128], "synthesi": [26, 40, 133, 137], "system": [53, 56, 60, 61, 77, 78, 86, 110, 121, 122, 124, 127, 130, 134, 135, 136, 137], "systemat": [89, 106], "t": [7, 9, 10, 15, 22, 24, 26, 29, 31, 32, 40, 42, 45, 46, 52, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 93, 101, 106, 112, 118, 119, 121, 122, 124, 126, 131, 132, 133, 134, 135, 137], "t0": 121, "t_bound": 121, "t_param": [53, 55], "tac": [79, 80], "tackl": 129, "tailor": 5, "take": [0, 9, 13, 24, 32, 40, 42, 49, 56, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 98, 106, 110, 127, 128, 129, 133, 134, 135, 136, 137], "taken": [5, 11, 23, 50, 51, 52, 57, 59, 104], "talk": 132, "tanaka": 32, "tapp": [15, 24, 29, 32, 132], "tarasinski": 26, "target": [21, 24, 29, 30, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 129, 135, 136], "target_magnitud": [106, 110], "task": [127, 129, 135, 136], "tau": [28, 51], "tavernelli": 49, "tb": 117, "technic": 110, "techniqu": [49, 56, 58, 99, 128, 129, 130, 131, 137], "tell": [93, 112, 114], "tell_data": [93, 112], "telldata": [93, 112], "temm": 119, "temperatur": 135, "tensor": [64, 70, 74, 106, 126, 137], "terhal": 26, "term": [0, 5, 8, 26, 27, 36, 44, 56, 64, 70, 82, 83, 127, 130, 136, 137], "termin": [10, 11, 82, 86, 99, 104, 106, 108, 110, 113], "termination_check": [106, 110], "termination_criterion": 11, "terminationcheck": [106, 110], "test": [6, 7, 9, 25], "text": [49, 97, 129, 134, 135, 136, 137], "textbook": [24, 132], "th": [56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 110, 136], "than": [9, 10, 15, 24, 27, 31, 32, 36, 43, 44, 55, 86, 93, 107, 110, 121, 127, 128, 129, 132, 133, 136], "thei": [5, 9, 10, 19, 34, 36, 38, 45, 47, 49, 55, 56, 58, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "them": [0, 9, 93, 108, 112, 132, 133, 134], "theoret": 32, "theori": [24, 132], "therebi": 82, "therefor": [15, 106, 110, 137], "therein": 3, "thereof": 9, "theses": 9, "theta": [33, 40, 49, 56, 58, 93, 106, 132, 134, 135, 136], "theta_": [93, 134, 135], "theta_0": [93, 134], "theta_1": 136, "theta_2": 136, "theta_interv": [23, 30], "theta_k": 134, "theta_n": 134, "thi": [0, 3, 6, 7, 9, 10, 12, 13, 15, 19, 21, 22, 24, 26, 27, 29, 31, 32, 34, 36, 38, 40, 42, 43, 44, 45, 48, 49, 53, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "thing": [9, 127, 130, 131], "thiscopyright": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "those": [9, 115], "though": [9, 96, 133], "thread": 9, "three": [24, 56, 78, 100, 129, 130, 132, 133], "threshold": [9, 10, 15, 53, 56, 92, 93], "through": [24, 77, 78, 127, 128, 129, 133, 134], "throw": 117, "thu": [9, 10, 22, 45, 56, 128, 132, 134, 136, 137], "tick": 137, "tie": 90, "tight": [24, 132], "tight_layout": 137, "tighter": 26, "tild": 15, "tile": 137, "time": [6, 9, 11, 24, 26, 28, 36, 40, 41, 46, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 100, 106, 110, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 136], "time_evolv": [40, 60, 61, 135], "timeevolutionproblem": [5, 28, 40, 46, 51, 52, 55, 60, 61, 134, 135, 137], "timeevolutionresult": [28, 40, 41, 46, 51, 52, 55, 62], "timepoint": 134, "timestep": [40, 51, 52, 54, 55, 60, 61, 62, 134, 137], "titl": [128, 129, 130, 134], "to_diamacs_cnf_format": 132, "to_matrix": [134, 137], "todo": 100, "togeth": [26, 40, 127, 133], "toi": 115, "tol": [82, 83, 86, 87, 93, 99, 104, 108, 113], "toler": [82, 83, 86, 93, 99, 104, 108, 113], "too": [9, 134, 137], "too_small_step": 121, "took": 127, "tool": [9, 136], "top": [9, 25, 132, 136], "top_measur": [14, 24, 25, 132], "total": [19, 23, 34, 36, 38, 40, 53, 56, 58, 102, 134], "toward": [83, 89, 128], "track": [40, 77, 78, 129, 134, 137], "tractabl": [0, 128, 129], "train": [0, 129], "trainabl": 119, "transact": [79, 80], "transform": [15, 132], "transit": 9, "translat": [9, 27], "transpil": [9, 15, 22, 24, 26, 29, 31, 32, 40, 42, 45, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 106, 118, 119, 136], "transpiler_opt": [9, 15, 22, 24, 26, 29, 31, 32, 40, 42, 45, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 106, 118, 119, 127, 131, 132], "transvers": [135, 137], "treat": [9, 24], "tree": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "tri": [24, 25], "trial": [49, 56, 58, 122, 124, 127, 128], "trotter": [9, 40, 41, 53, 55, 134], "trotter_qrt": 55, "trotter_step_first_ord": 137, "trotter_step_fourth_ord": 137, "trotter_step_second_ord": 137, "trotterqrt": [9, 137], "troubleshoot": 43, "true": [10, 13, 15, 19, 21, 22, 24, 25, 27, 32, 34, 36, 38, 40, 43, 45, 47, 49, 55, 56, 58, 64, 70, 78, 82, 86, 87, 92, 93, 99, 104, 106, 107, 108, 110, 112, 113, 119, 131, 132, 133, 137], "truncat": [113, 120], "truncation_threshold": 53, "trust": [87, 99], "trust_region": 110, "try": [9, 13, 21, 127, 131, 132, 133, 134], "tune": 45, "tupl": [9, 11, 15, 20, 22, 32, 35, 37, 39, 40, 41, 49, 54, 57, 58, 59, 62, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 137], "turn": [129, 137], "tutori": [7, 8, 24, 93, 112, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "tutorial_mag": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "tweedledum": 133, "twice": [106, 108, 110], "two": [3, 5, 31, 40, 42, 44, 77, 106, 110, 118, 119, 121, 128, 129, 130, 131, 132, 134, 135, 136, 137], "two_spsa": 110, "txt": [7, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "typ": 117, "type": [6, 9, 10, 12, 14, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36, 38, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 122, 124, 126, 128, 130, 136], "typeerror": [10, 11, 16, 18, 20, 23, 24, 25, 26, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 67, 68, 102], "typic": [112, 127, 134], "u": [42, 106, 127, 131, 132, 134, 135, 136, 137], "u1": 137, "u_k": 136, "udma": 115, "unbound": 92, "uncertainti": 110, "unchang": 44, "uncomput": 119, "unconstrain": [86, 97, 99, 104], "under": [3, 5, 7, 28, 40, 46, 51, 52, 53, 56, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "underli": [10, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 129], "understand": [115, 131], "undocu": 9, "uniform": 132, "uniformli": [106, 110], "unimport": 24, "uninterest": 43, "union": 40, "uniqu": [10, 12, 136], "unit": [6, 92, 137], "unitari": [0, 10, 13, 21, 22, 26, 27, 29, 31, 42, 44, 69, 70, 71], "univari": 115, "univers": [24, 42], "unknown": [24, 110], "unlik": [9, 45, 110, 136], "uno": 32, "unscal": 44, "unstructur": [24, 132], "unsuccess": 92, "unsupport": 55, "until": [9, 24, 127], "up": [9, 29, 36, 60, 61, 106, 110, 128, 130, 134, 135, 137], "uparrow": 137, "updat": [7, 9, 10, 11, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 40, 41, 43, 45, 48, 49, 50, 54, 56, 57, 58, 59, 62, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 134, 135], "upon": [40, 43, 56, 58, 95], "upper": [26, 44, 56, 92, 113, 128, 130, 135, 137], "us": [0, 3, 5, 6, 7, 9, 10, 11, 13, 15, 16, 18, 19, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 40, 42, 43, 44, 45, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135], "usa": 42, "usag": 9, "use_parameter_shift": 40, "user": [3, 5, 9, 43, 93, 112, 115, 127, 130, 131, 132], "usual": [10, 21, 133, 134], "utc": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "util": [9, 92, 105, 106, 110, 115, 128, 129, 130, 131], "v": [72, 73, 119, 136, 137], "v1": 9, "v2": 9, "v_": 135, "v_1": 133, "v_2": 133, "v_3": 133, "val": [117, 132], "valid": [0, 9, 45, 60, 61, 133], "valu": [0, 3, 6, 10, 11, 13, 19, 20, 21, 22, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "valueerror": [15, 24, 26, 27, 29, 31, 32, 40, 44, 51, 52, 53, 55, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 92, 93, 110, 119], "values_1": [118, 119], "values_2": [118, 119], "vanilla": [93, 106], "var_lb": 92, "var_principl": [5, 135], "var_qit": [5, 135], "var_qrt": 135, "var_ub": 92, "varadarajan": 137, "vari": [49, 56, 58, 109, 127, 134, 135], "variabl": [6, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 129, 133], "varianc": [11, 35, 39, 59, 119], "variant": [22, 82, 89, 90, 107, 122, 123, 124, 125], "variat": [3, 10, 40, 41, 49, 53, 56, 58, 59, 60, 61, 62, 77, 96, 110, 115, 122, 123, 124, 125, 126, 127, 128, 129, 136], "variational_principl": [60, 61], "variationalalgorithm": [10, 49, 56, 58], "variationalprincipl": [123, 125], "variationalresult": [50, 59], "varieti": [0, 3, 129], "variou": [0, 3, 128, 137], "varqit": [0, 5, 9], "varqrt": [0, 5, 9], "varqt": [5, 60, 61], "varqteresult": [60, 61], "vec": [49, 56, 58, 93], "vector": [40, 79, 80, 92, 97, 104, 105, 121, 131, 137], "vee": 133, "veerav": 137, "verbos": 109, "veri": [24, 26, 77, 78, 115, 127, 128, 131, 132, 134, 135, 137], "verifi": [133, 134, 137], "version": [7, 9, 10, 15, 22, 24, 88, 89, 105, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "version3": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "versu": 128, "vert": [136, 137], "vert001100": 137, "vert01": 137, "vertex": 131, "vertic": 131, "via": [9, 10, 24, 27, 31, 32, 40, 42, 43, 45, 49, 56, 58, 96, 128, 129, 132, 137], "vicent": 115, "vicenteperezsoloviev": 115, "vicentini": 40, "vigo": 129, "vill": 83, "violat": 134, "visibl": 128, "visit": [93, 112], "visual": [131, 133, 137], "vmax": 137, "vmin": 137, "vol": [79, 80, 110, 137], "vqd": [9, 40, 41, 57, 128, 134], "vqd_valu": 130, "vqdresult": 56, "vqe": [0, 3, 9, 10, 40, 45, 49, 59, 98, 115, 130], "vqe1": 128, "vqe_class": 136, "vqeresult": [10, 11, 58], "w": [32, 119, 122, 124, 126, 131, 133], "w_01": 131, "wa": [9, 25, 44, 92, 106, 110, 112, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "wai": [7, 9, 26, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131, 136], "walk": 133, "want": [7, 9, 10, 24, 92, 93, 105, 106, 110, 112, 115, 127, 130, 134, 135, 136], "warm": 45, "warn": 9, "wave": 56, "wavefunct": [10, 127, 128, 136], "wavefunction_1": 136, "wavefunction_2": 136, "we": [5, 9, 10, 13, 19, 21, 24, 26, 34, 36, 38, 42, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "web": 110, "wedg": 133, "weight": [27, 43, 44, 131, 136, 137], "weight_matrix": 131, "well": [9, 15, 24, 45, 93, 112, 127, 128, 129, 134, 136], "were": [3, 9, 127, 129], "what": [112, 127, 129], "when": [6, 9, 10, 15, 24, 27, 40, 43, 44, 48, 50, 53, 56, 58, 60, 61, 63, 64, 65, 67, 68, 72, 73, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128, 131, 132, 136], "where": [0, 6, 7, 14, 22, 24, 25, 26, 29, 32, 42, 45, 48, 50, 53, 56, 67, 68, 84, 87, 93, 106, 110, 112, 115, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "wherea": 26, "whether": [10, 12, 13, 19, 21, 22, 25, 34, 36, 38, 45, 47, 49, 55, 56, 58, 64, 70, 77, 78, 106, 110, 112, 121, 132, 135], "which": [0, 3, 5, 7, 9, 10, 15, 21, 22, 24, 26, 28, 29, 31, 32, 40, 41, 42, 44, 45, 46, 49, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "while": [9, 19, 34, 36, 38, 56, 58, 93, 107, 112, 127, 129, 134, 135, 137], "who": [93, 112], "whose": [10, 26, 31, 42, 43, 44, 86, 128], "why": [32, 128], "wick": [5, 122], "wide": 129, "width": [29, 30], "wilhelm": 137, "window": 83, "wish": 9, "within": [0, 3, 15, 22, 24, 26, 29, 31, 32, 42, 45, 49, 53, 55, 56, 58, 69, 71, 83, 92, 109, 118, 119, 127, 128], "without": [9, 10, 27, 32, 85, 96, 128, 131, 135], "woerner": [15, 29, 45, 49, 132], "won": [9, 10, 15, 22, 24, 26, 29, 31, 32, 40, 42, 45, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 106, 118, 119, 121], "wonder": 128, "work": [9, 13, 21, 24, 26, 115, 128, 129, 131, 132, 133, 134, 135, 136, 137], "workflow": [128, 129, 130], "worst": 24, "would": [9, 110, 129, 131, 134, 137], "wrap": [26, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 132], "wrap_funct": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "wrapper": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "write": [6, 9, 137], "written": [9, 42, 100, 133, 134, 136, 137], "wrt": 92, "www": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "x": [9, 22, 24, 45, 49, 55, 58, 60, 61, 67, 68, 69, 70, 71, 72, 73, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 129, 131, 132, 133, 134, 136, 137], "x0": [49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "x_1": [24, 134], "x_2": [24, 134], "x_center": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "x_fun": [84, 114], "x_i": [135, 137], "x_jac": [84, 114], "x_n": 24, "x_p": 131, "x_tupl": 137, "x_valu": 92, "xatol": 99, "xi": [40, 135, 137], "xlabel": [128, 129, 130, 134, 135, 137], "xopt": [99, 104], "xor": 133, "xtick": 137, "xtol": [104, 113], "xx": [5, 127, 128, 129, 130, 137], "y": [15, 32, 69, 70, 71, 72, 73, 118, 119, 121, 131, 133, 136, 137], "y0": 121, "yamamoto": 32, "yao": 96, "yet": [9, 32, 106, 110], "yield": [24, 63, 72, 93, 106, 110, 117], "ylabel": [128, 129, 130, 134, 135, 137], "ymmv": 107, "york": 42, "you": [3, 7, 9, 10, 24, 26, 92, 93, 105, 106, 110, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "your": [9, 10, 127, 129, 130, 132], "yscale": 128, "ytick": 137, "yuan": 135, "yy": [5, 137], "z": [26, 44, 55, 69, 70, 71, 72, 73, 106, 110, 115, 133, 136, 137], "z_": [135, 137], "z_1": 134, "z_2": 134, "z_i": [135, 137], "z_p": 131, "z_tupl": 137, "zero": [5, 24, 26, 31, 40, 42, 43, 131, 132, 134], "zero_reflect": 132, "zi": [5, 127, 128, 129, 130, 131, 134, 135, 136, 137], "zizj": 131, "zoufal": [15, 29], "zz": [5, 40, 106, 110, 127, 128, 129, 130, 134, 135, 136, 137], "zz_tupl": 137, "\u03b8": [63, 69, 72, 127, 128], "\u03c8": [63, 69, 72], "\u03c9": [63, 69, 72]}, "titles": ["Qiskit Algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms</span></code>)", "AlgorithmError", "Gradients (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms.gradients</span></code>)", "Optimizers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms.optimizers</span></code>)", "State Fidelities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms.state_fidelities</span></code>)", "Time Evolvers, Variational (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms.time_evolvers.variational</span></code>)", "utils.algorithm_globals", "Getting started", "Qiskit Algorithms documentation", "Release Notes", "AdaptVQE", "AdaptVQEResult", "AlgorithmJob", "AmplificationProblem", "AmplitudeAmplifier", "AmplitudeEstimation", "AmplitudeEstimationResult", "AmplitudeEstimator", "AmplitudeEstimatorResult", "Eigensolver", "EigensolverResult", "EstimationProblem", "FasterAmplitudeEstimation", "FasterAmplitudeEstimationResult", "Grover", "GroverResult", "HamiltonianPhaseEstimation", "HamiltonianPhaseEstimationResult", "ImaginaryTimeEvolver", "IterativeAmplitudeEstimation", "IterativeAmplitudeEstimationResult", "IterativePhaseEstimation", "MaximumLikelihoodAmplitudeEstimation", "MaximumLikelihoodAmplitudeEstimationResult", "MinimumEigensolver", "MinimumEigensolverResult", "NumPyEigensolver", "NumPyEigensolverResult", "NumPyMinimumEigensolver", "NumPyMinimumEigensolverResult", "PVQD", "PVQDResult", "PhaseEstimation", "PhaseEstimationResult", "PhaseEstimationScale", "QAOA", "RealTimeEvolver", "SamplingMinimumEigensolver", "SamplingMinimumEigensolverResult", "SamplingVQE", "SamplingVQEResult", "SciPyImaginaryEvolver", "SciPyRealEvolver", "TimeEvolutionProblem", "TimeEvolutionResult", "TrotterQRTE", "VQD", "VQDResult", "VQE", "VQEResult", "VarQITE", "VarQRTE", "VarQTEResult", "BaseEstimatorGradient", "BaseQGT", "BaseSamplerGradient", "EstimatorGradientResult", "FiniteDiffEstimatorGradient", "FiniteDiffSamplerGradient", "LinCombEstimatorGradient", "LinCombQGT", "LinCombSamplerGradient", "ParamShiftEstimatorGradient", "ParamShiftSamplerGradient", "QFI", "QFIResult", "QGTResult", "ReverseEstimatorGradient", "ReverseQGT", "SPSAEstimatorGradient", "SPSASamplerGradient", "SamplerGradientResult", "ADAM", "AQGD", "AskData", "BOBYQA", "CG", "COBYLA", "CRS", "DIRECT_L", "DIRECT_L_RAND", "ESCH", "GSLS", "GradientDescent", "GradientDescentState", "IMFIL", "ISRES", "L_BFGS_B", "Minimizer", "NELDER_MEAD", "NFT", "Optimizer", "OptimizerResult", "OptimizerState", "POWELL", "P_BFGS", "QNSPSA", "SBPLX", "SLSQP", "SNOBFIT", "SPSA", "SciPyOptimizer", "SteppableOptimizer", "TNC", "TellData", "UMDA", "qiskit_algorithms.optimizers.optimizer_utils", "LearningRate", "BaseStateFidelity", "ComputeUncompute", "StateFidelityResult", "ForwardEulerSolver", "ImaginaryMcLachlanPrinciple", "ImaginaryVariationalPrinciple", "RealMcLachlanPrinciple", "RealVariationalPrinciple", "VariationalPrinciple", "An Introduction to Algorithms using Qiskit", "Advanced VQE Options", "VQE with Qiskit Aer Primitives", "Variational Quantum Deflation (VQD) Algorithm", "Quantum Approximate Optimization Algorithm", "Grover\u2019s Algorithm and Amplitude Amplification", "Grover\u2019s algorithm examples", "Projected Variational Quantum Dynamics", "Variational Quantum Time Evolution", "Gradient Framework", "Quantum Real Time Evolution using Trotterization", "Algorithms Tutorials"], "titleterms": {"": [132, 133], "0": 9, "1": 9, "2": 9, "3": [9, 133], "4": 9, "A": [127, 136], "The": [132, 136], "adam": 82, "adaptvq": 10, "adaptvqeresult": 11, "advanc": 128, "aer": 129, "algorithm": [0, 8, 127, 130, 131, 132, 133, 138], "algorithm_glob": 6, "algorithmerror": 1, "algorithmjob": 12, "amplif": 132, "amplifi": 0, "amplificationproblem": 13, "amplitud": [0, 132], "amplitudeamplifi": 14, "amplitudeestim": [15, 17], "amplitudeestimationresult": 16, "amplitudeestimatorresult": 18, "an": 127, "appli": 132, "applic": 136, "approxim": [2, 131], "aqgd": 83, "argument": 132, "askdata": 84, "auxiliari": 137, "backend": 129, "base": [2, 3, 134, 136], "baseestimatorgradi": 63, "baseqgt": 64, "basesamplergradi": 65, "basestatefidel": 118, "bobyqa": 85, "boolean": 133, "bug": 9, "calcul": 135, "callback": 128, "cg": 86, "circuit": 136, "class": [0, 2, 3, 132], "classic": [2, 135, 136], "cobyla": 87, "combin": [2, 136], "comparison": 135, "complet": [127, 130], "computeuncomput": 119, "cr": 88, "deflat": 130, "deprec": 9, "differ": [2, 132, 136], "direct_l": 89, "direct_l_rand": 90, "dive": 132, "document": 8, "dynam": 134, "effici": 135, "eigensolv": [0, 19], "eigensolverresult": 20, "esch": 91, "estim": [0, 136], "estimationproblem": 21, "estimatorgradientresult": 66, "evalu": 136, "evolut": [0, 135, 137], "evolv": [0, 5], "exact": 135, "exampl": [127, 130, 133, 136], "except": 0, "expect": 136, "express": 133, "fasteramplitudeestim": 22, "fasteramplitudeestimationresult": 23, "featur": 9, "fidel": [0, 4], "find": 133, "finit": [2, 136], "finitediffestimatorgradi": 67, "finitediffsamplergradi": 68, "fisher": [2, 136], "fix": 9, "flexibl": 132, "formula": 137, "forwardeulersolv": 121, "framework": 136, "full": 132, "geometr": 136, "get": 7, "global": 3, "go": 7, "good_stat": 132, "gradient": [0, 2, 128, 134, 135, 136], "gradientdesc": 93, "gradientdescentst": 94, "grover": [24, 132, 133], "groverresult": 25, "gsl": 92, "hamiltonianphaseestim": 26, "hamiltonianphaseestimationresult": 27, "how": 127, "i": 127, "imaginari": 135, "imaginarymclachlanprincipl": 122, "imaginarytimeevolv": 28, "imaginaryvariationalprincipl": 123, "imfil": 95, "inform": [2, 136], "initi": 128, "insid": 127, "instal": 7, "introduct": [127, 130, 135, 136], "isr": 96, "issu": 9, "iter": 132, "iterativeamplitudeestim": 29, "iterativeamplitudeestimationresult": 30, "iterativephaseestim": 31, "known": 9, "l_bfgs_b": 97, "learningr": 117, "librari": 127, "lincombestimatorgradi": 69, "lincombqgt": 70, "lincombsamplergradi": 71, "linear": [2, 136], "local": 3, "logic": 133, "magnet": 137, "maximumlikelihoodamplitudeestim": 32, "maximumlikelihoodamplitudeestimationresult": 33, "method": 2, "minim": 98, "minimum": 0, "minimumeigensolv": 34, "minimumeigensolverresult": 35, "miscellan": 0, "nelder_mead": 99, "new": 9, "next": 8, "nft": 100, "nois": 129, "note": 9, "number": 132, "numpyeigensolv": 36, "numpyeigensolverresult": 37, "numpyminimumeigensolv": 38, "numpyminimumeigensolverresult": 39, "od": 5, "oper": 137, "optim": [0, 3, 101, 116, 131, 134, 136], "optimizer_util": 116, "optimizerresult": 102, "optimizerst": 103, "option": [7, 127, 128, 131, 132], "oracl": 132, "other": [9, 132], "overview": [8, 137], "p_bfg": 105, "paramet": [2, 136], "paramshiftestimatorgradi": 72, "paramshiftsamplergradi": 73, "perform": 129, "perturb": 2, "phase": 0, "phaseestim": 42, "phaseestimationresult": 43, "phaseestimationscal": 44, "plot": 137, "point": 128, "post_process": 132, "powel": 104, "prelud": 9, "prepar": 132, "primit": [127, 129, 136], "principl": 5, "problem": 133, "product": 137, "project": 134, "pvqd": 40, "pvqdresult": 41, "qaoa": 45, "qfi": [74, 136], "qfiresult": 75, "qgt": 136, "qgtresult": 76, "qiskit": [0, 8, 127, 129, 136], "qiskit_algorithm": [0, 2, 3, 4, 5, 116, 136], "qnspsa": 106, "quantum": [0, 2, 130, 131, 134, 135, 136, 137], "quick": 136, "readi": 7, "real": [135, 137], "realmclachlanprincipl": 124, "realtimeevolv": 46, "realvariationalprincipl": 125, "refer": 137, "refresh": 136, "releas": 9, "result": [4, 135], "reverseestimatorgradi": 77, "reverseqgt": 78, "rule": 2, "run": [127, 132, 135], "sampl": 136, "sampler": 136, "samplergradientresult": 81, "samplingminimumeigensolv": 47, "samplingminimumeigensolverresult": 48, "samplingvq": 49, "samplingvqeresult": 50, "sat": 133, "sbplx": 107, "scipyimaginaryevolv": 51, "scipyoptim": 111, "scipyrealevolv": 52, "shift": [2, 136], "simultan": 2, "slsqp": 108, "snobfit": 109, "solut": [133, 135], "solver": 5, "specifi": 132, "spsa": [110, 136], "spsaestimatorgradi": 79, "spsasamplergradi": 80, "start": 7, "state": [0, 4, 132], "state_fidel": 4, "statefidelityresult": 120, "step": 8, "steppabl": 3, "steppableoptim": 112, "stochast": 2, "structur": 127, "summari": 129, "telldata": 114, "tensor": 136, "time": [0, 5, 135, 137], "time_evolv": 5, "timeevolutionproblem": 53, "timeevolutionresult": 54, "tnc": 113, "transpil": [127, 131, 132], "trotter": 137, "trotterqrt": 55, "tutori": 138, "type": 132, "umda": 115, "unitari": [2, 136], "updat": 127, "upgrad": 9, "us": [127, 132, 136, 137], "util": [0, 6, 116], "variat": [0, 5, 130, 134, 135], "variationalprincipl": 126, "varqit": [60, 135], "varqrt": [61, 135], "varqt": 135, "varqteresult": 62, "vqd": [56, 130], "vqdresult": 57, "vqe": [58, 127, 128, 129, 136], "vqeresult": 59, "wai": 135, "without": 129, "work": [127, 130]}})